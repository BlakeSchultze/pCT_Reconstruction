#line 1 "x64/Release/pCT_Reconstruction.cudafe2.gpu"
#line 1 "x64/Release/pCT_Reconstruction.cudafe1.gpu"
typedef char __nv_bool;
#line 27 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
typedef unsigned long long size_t;
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"





































#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"
























































        








   


#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"
        



































































#line 139 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"










#line 150 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"






#line 157 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"




#line 162 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"










#line 174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"













        














#line 203 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"


#line 206 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\host_defines.h"
#line 39 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"





typedef  unsigned long long __texture_type__;
typedef  unsigned long long __surface_type__;



#line 50 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"













#line 64 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"























































































































































































#line 248 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"












































































































































































































#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_types.h"
#line 57 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"












































































































































































































#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"































































#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,

    




    cudaErrorProfilerDisabled             =     55,

    





    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,

    




     cudaErrorProfilerAlreadyStopped       =    58,

    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,

    



    cudaErrorPeerAccessUnsupported        =     64,

    




    cudaErrorLaunchMaxDepthExceeded       =     65,

    





    cudaErrorLaunchFileScopedTex          =     66,

    





    cudaErrorLaunchFileScopedSurf         =     67,

    












    cudaErrorSyncDepthExceeded            =     68,

    









    cudaErrorLaunchPendingCountExceeded   =     69,
    
    


    cudaErrorNotPermitted                 =     70,

    



    cudaErrorNotSupported                 =     71,

    






    cudaErrorHardwareStackError           =     72,

    





    cudaErrorIllegalInstruction           =     73,

    






    cudaErrorMisalignedAddress            =     74,

    








    cudaErrorInvalidAddressSpace          =     75,

    





    cudaErrorInvalidPc                    =     76,

    





    cudaErrorIllegalAddress               =     77,


    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};





struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};





struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};





struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




enum  cudaResourceType
{
    cudaResourceTypeArray          = 0x00, 
    cudaResourceTypeMipmappedArray = 0x01, 
    cudaResourceTypeLinear         = 0x02, 
    cudaResourceTypePitch2D        = 0x03  
};




enum  cudaResourceViewFormat
{
    cudaResViewFormatNone                      = 0x00, 
    cudaResViewFormatUnsignedChar1             = 0x01, 
    cudaResViewFormatUnsignedChar2             = 0x02, 
    cudaResViewFormatUnsignedChar4             = 0x03, 
    cudaResViewFormatSignedChar1               = 0x04, 
    cudaResViewFormatSignedChar2               = 0x05, 
    cudaResViewFormatSignedChar4               = 0x06, 
    cudaResViewFormatUnsignedShort1            = 0x07, 
    cudaResViewFormatUnsignedShort2            = 0x08, 
    cudaResViewFormatUnsignedShort4            = 0x09, 
    cudaResViewFormatSignedShort1              = 0x0a, 
    cudaResViewFormatSignedShort2              = 0x0b, 
    cudaResViewFormatSignedShort4              = 0x0c, 
    cudaResViewFormatUnsignedInt1              = 0x0d, 
    cudaResViewFormatUnsignedInt2              = 0x0e, 
    cudaResViewFormatUnsignedInt4              = 0x0f, 
    cudaResViewFormatSignedInt1                = 0x10, 
    cudaResViewFormatSignedInt2                = 0x11, 
    cudaResViewFormatSignedInt4                = 0x12, 
    cudaResViewFormatHalf1                     = 0x13, 
    cudaResViewFormatHalf2                     = 0x14, 
    cudaResViewFormatHalf4                     = 0x15, 
    cudaResViewFormatFloat1                    = 0x16, 
    cudaResViewFormatFloat2                    = 0x17, 
    cudaResViewFormatFloat4                    = 0x18, 
    cudaResViewFormatUnsignedBlockCompressed1  = 0x19, 
    cudaResViewFormatUnsignedBlockCompressed2  = 0x1a, 
    cudaResViewFormatUnsignedBlockCompressed3  = 0x1b, 
    cudaResViewFormatUnsignedBlockCompressed4  = 0x1c, 
    cudaResViewFormatSignedBlockCompressed4    = 0x1d, 
    cudaResViewFormatUnsignedBlockCompressed5  = 0x1e, 
    cudaResViewFormatSignedBlockCompressed5    = 0x1f, 
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20, 
    cudaResViewFormatSignedBlockCompressed6H   = 0x21, 
    cudaResViewFormatUnsignedBlockCompressed7  = 0x22  
};




struct  cudaResourceDesc {
	enum cudaResourceType resType;             
	
	union {
		struct {
			cudaArray_t array;                 
		} array;
        struct {
            cudaMipmappedArray_t mipmap;       
        } mipmap;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t sizeInBytes;                
		} linear;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t width;                      
			size_t height;                     
			size_t pitchInBytes;               
		} pitch2D;
	} res;
};




struct  cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;           
    size_t                      width;            
    size_t                      height;           
    size_t                      depth;            
    unsigned int                firstMipmapLevel; 
    unsigned int                lastMipmapLevel;  
    unsigned int                firstLayer;       
    unsigned int                lastLayer;        
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;

    


    int isManaged;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;

   



   int cacheModeCA;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};





enum  cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault   = 0,
    cudaSharedMemBankSizeFourByte  = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize                    = 0x00, 
    cudaLimitPrintfFifoSize               = 0x01, 
    cudaLimitMallocHeapSize               = 0x02, 
    cudaLimitDevRuntimeSyncDepth          = 0x03, 
    cudaLimitDevRuntimePendingLaunchCount = 0x04  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




enum  cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock             = 1,  
    cudaDevAttrMaxBlockDimX                   = 2,  
    cudaDevAttrMaxBlockDimY                   = 3,  
    cudaDevAttrMaxBlockDimZ                   = 4,  
    cudaDevAttrMaxGridDimX                    = 5,  
    cudaDevAttrMaxGridDimY                    = 6,  
    cudaDevAttrMaxGridDimZ                    = 7,  
    cudaDevAttrMaxSharedMemoryPerBlock        = 8,  
    cudaDevAttrTotalConstantMemory            = 9,  
    cudaDevAttrWarpSize                       = 10, 
    cudaDevAttrMaxPitch                       = 11, 
    cudaDevAttrMaxRegistersPerBlock           = 12, 
    cudaDevAttrClockRate                      = 13, 
    cudaDevAttrTextureAlignment               = 14, 
    cudaDevAttrGpuOverlap                     = 15, 
    cudaDevAttrMultiProcessorCount            = 16, 
    cudaDevAttrKernelExecTimeout              = 17, 
    cudaDevAttrIntegrated                     = 18, 
    cudaDevAttrCanMapHostMemory               = 19, 
    cudaDevAttrComputeMode                    = 20, 
    cudaDevAttrMaxTexture1DWidth              = 21, 
    cudaDevAttrMaxTexture2DWidth              = 22, 
    cudaDevAttrMaxTexture2DHeight             = 23, 
    cudaDevAttrMaxTexture3DWidth              = 24, 
    cudaDevAttrMaxTexture3DHeight             = 25, 
    cudaDevAttrMaxTexture3DDepth              = 26, 
    cudaDevAttrMaxTexture2DLayeredWidth       = 27, 
    cudaDevAttrMaxTexture2DLayeredHeight      = 28, 
    cudaDevAttrMaxTexture2DLayeredLayers      = 29, 
    cudaDevAttrSurfaceAlignment               = 30, 
    cudaDevAttrConcurrentKernels              = 31, 
    cudaDevAttrEccEnabled                     = 32, 
    cudaDevAttrPciBusId                       = 33, 
    cudaDevAttrPciDeviceId                    = 34, 
    cudaDevAttrTccDriver                      = 35, 
    cudaDevAttrMemoryClockRate                = 36, 
    cudaDevAttrGlobalMemoryBusWidth           = 37, 
    cudaDevAttrL2CacheSize                    = 38, 
    cudaDevAttrMaxThreadsPerMultiProcessor    = 39, 
    cudaDevAttrAsyncEngineCount               = 40, 
    cudaDevAttrUnifiedAddressing              = 41,     
    cudaDevAttrMaxTexture1DLayeredWidth       = 42, 
    cudaDevAttrMaxTexture1DLayeredLayers      = 43, 
    cudaDevAttrMaxTexture2DGatherWidth        = 45, 
    cudaDevAttrMaxTexture2DGatherHeight       = 46, 
    cudaDevAttrMaxTexture3DWidthAlt           = 47, 
    cudaDevAttrMaxTexture3DHeightAlt          = 48, 
    cudaDevAttrMaxTexture3DDepthAlt           = 49, 
    cudaDevAttrPciDomainId                    = 50, 
    cudaDevAttrTexturePitchAlignment          = 51, 
    cudaDevAttrMaxTextureCubemapWidth         = 52, 
    cudaDevAttrMaxTextureCubemapLayeredWidth  = 53, 
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54, 
    cudaDevAttrMaxSurface1DWidth              = 55, 
    cudaDevAttrMaxSurface2DWidth              = 56, 
    cudaDevAttrMaxSurface2DHeight             = 57, 
    cudaDevAttrMaxSurface3DWidth              = 58, 
    cudaDevAttrMaxSurface3DHeight             = 59, 
    cudaDevAttrMaxSurface3DDepth              = 60, 
    cudaDevAttrMaxSurface1DLayeredWidth       = 61, 
    cudaDevAttrMaxSurface1DLayeredLayers      = 62, 
    cudaDevAttrMaxSurface2DLayeredWidth       = 63, 
    cudaDevAttrMaxSurface2DLayeredHeight      = 64, 
    cudaDevAttrMaxSurface2DLayeredLayers      = 65, 
    cudaDevAttrMaxSurfaceCubemapWidth         = 66, 
    cudaDevAttrMaxSurfaceCubemapLayeredWidth  = 67, 
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68, 
    cudaDevAttrMaxTexture1DLinearWidth        = 69, 
    cudaDevAttrMaxTexture2DLinearWidth        = 70, 
    cudaDevAttrMaxTexture2DLinearHeight       = 71, 
    cudaDevAttrMaxTexture2DLinearPitch        = 72, 
    cudaDevAttrMaxTexture2DMipmappedWidth     = 73, 
    cudaDevAttrMaxTexture2DMipmappedHeight    = 74, 
    cudaDevAttrComputeCapabilityMajor         = 75,  
    cudaDevAttrComputeCapabilityMinor         = 76, 
    cudaDevAttrMaxTexture1DMipmappedWidth     = 77, 
    cudaDevAttrStreamPrioritiesSupported      = 78, 
    cudaDevAttrGlobalL1CacheSupported         = 79, 
    cudaDevAttrLocalL1CacheSupported          = 80, 
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81, 
    cudaDevAttrMaxRegistersPerMultiprocessor  = 82, 
    cudaDevAttrManagedMemory                  = 83, 
    cudaDevAttrIsMultiGpuBoard                = 84, 
    cudaDevAttrMultiGpuBoardGroupID           = 85  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DMipmap;         
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DMipmap[2];      
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTexture3DAlt[3];         
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
    int    streamPrioritiesSupported;  
    int    globalL1CacheSupported;     
    int    localL1CacheSupported;      
    size_t sharedMemPerMultiprocessor; 
    int    regsPerMultiprocessor;      
    int    managedMemory;              
    int    isMultiGpuBoard;            
    int    multiGpuBoardGroupID;       
};











































































typedef  struct  cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef  struct  cudaIpcMemHandle_st 
{
    char reserved[64];
}cudaIpcMemHandle_t;










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"

#line 58 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};




typedef  unsigned long long cudaSurfaceObject_t;


 

#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_types.h"
#line 59 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    


    unsigned int                 maxAnisotropy;
    


    enum cudaTextureFilterMode   mipmapFilterMode;
    


    float                        mipmapLevelBias;
    


    float                        minMipmapLevelClamp;
    


    float                        maxMipmapLevelClamp;
    int                          __cudaReserved[15];
};




struct  cudaTextureDesc
{
    


    enum cudaTextureAddressMode addressMode[3];
    


    enum cudaTextureFilterMode  filterMode;
    


    enum cudaTextureReadMode    readMode;
    


    int                         sRGB;
    


    int                         normalizedCoords;
    


    unsigned int                maxAnisotropy;
    


    enum cudaTextureFilterMode  mipmapFilterMode;
    


    float                       mipmapLevelBias;
    


    float                       minMipmapLevelClamp;
    


    float                       maxMipmapLevelClamp;
};




typedef  unsigned long long cudaTextureObject_t;


 

#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_types.h"
#line 60 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"



























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_types.h"




































































#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_types.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\driver_types.h"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_types.h"






















































































































#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_types.h"
#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_types.h"




















































































































































































































#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_types.h"
#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"












































































































































































































































































































































































































































#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"












































































































































































































#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"
#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"






















#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct  __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct  __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __attribute__((aligned(4))) short2
{
    short x, y;
};

struct  __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct  __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  __attribute__((aligned(8))) int2 { int x; int y; };
struct  __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct  __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct  __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  __attribute__((aligned(8))) long2 { long int x; long int y; };
struct  __attribute__((aligned(8))) ulong2 { unsigned long int x; unsigned long int y; };












#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct  __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct  __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};















#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"

struct  __attribute__((aligned(8))) float2 { float x; float y; };

#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"


struct  float3
{
    float x, y, z;
};

struct  __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct  __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct  __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct  __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct  __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct  __attribute__((aligned(16))) double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct  __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};





#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;




#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\builtin_types.h"
#line 250 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"












































































































































































































































































































































































































































#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\vector_types.h"
#line 54 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 61 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"



#line 65 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"

uint3  extern const threadIdx;
uint3  extern const blockIdx;
dim3  extern const blockDim;
dim3  extern const gridDim;
int  extern const warpSize;





#line 77 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 84 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 91 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 98 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 105 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"






#line 112 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"

#line 114 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\device_launch_parameters.h"
#line 251 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"










































#line 44 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"






#line 51 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"



#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"

#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\crt\\storage_class.h"
#line 252 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\crt/device_runtime.h"
#line 29 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 33 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 37 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 41 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 45 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 49 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 53 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 57 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 61 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 65 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 69 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 73 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 77 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 81 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 85 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 89 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 93 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 97 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 101 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 105 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"



#line 109 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
extern  __inline__ double _Z8_Pow_intIdET_S0_i(double, int);
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
extern  __inline__ float _Z8_Pow_intIfET_S0_i(float, int);
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
static  __inline__ int _ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii(int *, int);
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
static  __inline__ float _ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff(float *, float);
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  __nv_bool _Z20calculate_interceptsdddRdS_(double, double, double, double *, double *);
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  void _Z14voxel_walk_GPURPbffffff(__nv_bool **, float, float, float, float, float, float);
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  double _Z15x_remaining_GPUdiRi(double, int, int *);
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  double _Z15y_remaining_GPUdiRi(double, int, int *);
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  double _Z15z_remaining_GPUdiRi(double, int, int *);
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  int _Z20position_2_voxel_GPUddd(double, double, double);
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
extern  void _Z16test_func_deviceRiS_S_(int *, int *, int *);
#line 1085 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z30recon_volume_intersections_GPUiPiPbPfS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_(int, int *, __nv_bool *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *);
#line 1407 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z11binning_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_(int, int *, int *, __nv_bool *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *);
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z19calculate_means_GPUPiPfS0_S0_(int *, float *, float *, float *);
#line 1568 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z26sum_squared_deviations_GPUiPiPfS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_(int, int *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *);
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z33calculate_standard_deviations_GPUPiPfS0_S0_(int *, float *, float *, float *);
#line 1702 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z20statistical_cuts_GPUiPiS_PfS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_S0_Pb(int, int *, int *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, __nv_bool *);
#line 1766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z22construct_sinogram_GPUPiPf(int *, float *);
#line 1839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z10filter_GPUPfS_(float *, float *);
#line 1957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z18backprojection_GPUPfS_(float *, float *);
#line 2080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z20FBP_image_2_hull_GPUPfPb(float *, __nv_bool *);
#line 2331 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z17carve_differencesPiS_(int *, int *);
#line 2364 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z6SC_GPUiPbPiS_PfS1_S1_S1_S1_S1_S1_(const int, __nv_bool *, int *, __nv_bool *, float *, float *, float *, float *, float *, float *, float *);
#line 2610 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z7MSC_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_(const int, int *, int *, __nv_bool *, float *, float *, float *, float *, float *, float *, float *);
#line 2793 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z22MSC_edge_detection_GPUPi(int *);
#line 2832 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z6SM_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_(const int, int *, int *, __nv_bool *, float *, float *, float *, float *, float *, float *, float *);
#line 3067 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z21SM_edge_detection_GPUPiS_(int *, int *);
#line 3142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z23SM_edge_detection_GPU_2PiS_(int *, int *);
#line 4223 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z28create_hull_image_hybrid_GPURPbRPf(__nv_bool **, float **);
#line 4899 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z13test_func_GPUPi(int *);
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z19initialize_hull_GPUIbEvPT_(__nv_bool *);
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z19initialize_hull_GPUIiEvPT_(int *);
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) extern void _Z20averaging_filter_GPUIbEvPT_S1_b(__nv_bool *, __nv_bool *, __nv_bool);
#line 3266 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt12codecvt_base[7];
#line 3267 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt10ctype_base[4];
#line 3268 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt5ctypeIcE[12];
#line 3269 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt8ios_base[4];
#line 3270 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt9basic_iosIcSt11char_traitsIcEE[4];
#line 3271 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSo__St14basic_ofstreamIcSt11char_traitsIcEE[5];
#line 3272 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt9basic_iosIcSt11char_traitsIcEE__So__St14basic_ofstreamIcS1_E[5];
#line 3273 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSi__St14basic_ifstreamIcSt11char_traitsIcEE[5];
#line 3274 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt9basic_iosIcSt11char_traitsIcEE__Si__St14basic_ifstreamIcS1_E[5];
#line 3275 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt15basic_streambufIcSt11char_traitsIcEE[18];
#line 3276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE[12];
#line 3277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE[15];
#line 3278 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long *const _ZTTSo[1];
#line 3279 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt7codecvtIcciE[11];
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long *const _ZTTSi[1];
#line 3281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVN10__cxxabiv117__class_type_infoE[1];
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVN10__cxxabiv120__si_class_type_infoE[1];
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\common_functions.h"



























































































































































#line 157 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\common_functions.h"








#line 166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\common_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 8472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"












































































































































































































#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\host_defines.h"
#line 8474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_constants.h"



























































































#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_constants.h"
















#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_constants.h"

























































#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_constants.h"
#line 8475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"







#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions_decls.h"
































































float __nv_fast_sinf(float x);












float __nv_fast_cosf(float x);


























float __nv_fast_log2f(float x);














float __nv_fast_tanf(float x);















void __nv_fast_sincosf(float x, float *sptr, float *cptr);


















































float __nv_fast_expf(float x);
































float __nv_fast_exp10f(float x);




























float __nv_fast_log10f(float x);












































float __nv_fast_logf(float x);











































float __nv_fast_powf(float x, float y);












int __nv_hadd(int x, int y);













int __nv_rhadd(int x, int y);












unsigned int __nv_uhadd(unsigned int x, unsigned int y);













unsigned int __nv_urhadd(unsigned int x, unsigned int y);












float __nv_fsub_rn (float x, float y);












float __nv_fsub_rz (float x, float y);












float __nv_fsub_rd (float x, float y);












float __nv_fsub_ru (float x, float y);







































float __nv_frsqrt_rn (float x);











int __nv_ffs(int x);











int __nv_ffsll(long long int x);











float __nv_rintf(float x);












long long int __nv_llrintf(float x);

















































float __nv_nearbyintf(float x);












int __nv_signbitf(float x);









float __nv_copysignf(float x, float y);










int __nv_finitef(float x);












int __nv_isinff(float x);











int __nv_isnanf(float x);
































float __nv_nextafterf(float x, float y);












float __nv_nanf(const signed char *tagp);









































float __nv_sinf(float x);

































float __nv_cosf(float x);















void __nv_sincosf(float x, float *sptr, float *cptr);




























































float __nv_sinpif(float x);




















































float __nv_cospif(float x);






























void __nv_sincospif(float x, float *sptr, float *cptr);









































float __nv_tanf(float x);



















































float __nv_log2f(float x);







































float __nv_expf(float x);





















float __nv_exp10f(float x);































float __nv_coshf(float x);






























float __nv_sinhf(float x);






























float __nv_tanhf(float x);

































float __nv_atan2f(float x, float y);































float __nv_atanf(float x);
































float __nv_asinf(float x);























float __nv_acosf(float x);







































































float __nv_logf(float x);



















































float __nv_log10f(float x);





























































































float __nv_log1pf(float x);


































float __nv_acoshf(float x);












float __nv_asinhf(float x);


















































float __nv_atanhf(float x);









































float __nv_expm1f(float x);







































float __nv_hypotf(float x, float y);














































float __nv_rhypotf(float x, float y);

















































































float __nv_cbrtf(float x);

















































float __nv_rcbrtf(float x);






































float __nv_j0f(float x);

























































float __nv_j1f(float x);
















































float __nv_y0f(float x);
















































float __nv_y1f(float x);

















































float __nv_ynf(int n, float x);







































float __nv_jnf(int n, float x);


























float __nv_cyl_bessel_i0f(float x);


























float __nv_cyl_bessel_i1f(float x);














































































float __nv_erff(float x);

























































float __nv_erfinvf(float x);


































float __nv_erfcf(float x);











































































float __nv_erfcxf(float x);
























































float __nv_erfcinvf(float x);


























































float __nv_normcdfinvf(float x);











































float __nv_normcdff(float x);




























































































































float __nv_lgammaf(float x);
























































float __nv_ldexpf(float x, int y);








































































float __nv_scalbnf(float x, int y);











































































float __nv_frexpf(float x, int *b);
























































float __nv_modff(float x, float *b);



























































float __nv_fmodf(float x, float y);





















































































float __nv_remainderf(float x, float y);


















































float __nv_remquof(float x, float y, int* quo);


























































































































































float __nv_fmaf(float x, float y, float z);




















































































































































































































































































































float __nv_powif(float x, int y);




















































































































































































































































































































double __nv_powi(double x, int y);




















































































































































































































































































































float __nv_powf(float x, float y);









































































































float __nv_tgammaf(float x);













float __nv_roundf(float x);














long long int __nv_llroundf(float x);






















float __nv_fdimf(float x, float y);


























int __nv_ilogbf(float x);



















































float __nv_logbf(float x);











double __nv_rint(double x);












long long int __nv_llrint(double x);

















































double __nv_nearbyint(double x);












int __nv_signbitd(double x);












int __nv_isfinited(double x);












int __nv_isinfd(double x);











int __nv_isnand(double x);









double __nv_copysign(double x, double y);















void __nv_sincos(double x, double *sptr, double *cptr);






























void __nv_sincospi(double x, double *sptr, double *cptr);









































double __nv_sin(double x);

































double __nv_cos(double x);




























































double __nv_sinpi(double x);




















































double __nv_cospi(double x);









































double __nv_tan(double x);







































































double __nv_log(double x);



















































double __nv_log2(double x);



















































double __nv_log10(double x);





























































































double __nv_log1p(double x);







































double __nv_exp(double x);





















double __nv_exp2(double x);





















double __nv_exp10(double x);









































double __nv_expm1(double x);































double __nv_cosh(double x);






























double __nv_sinh(double x);






























double __nv_tanh(double x);

































double __nv_atan2(double x, double y);































double __nv_atan(double x);
































double __nv_asin(double x);























double __nv_acos(double x);


































double __nv_acosh(double x);












double __nv_asinh(double x);


















































double __nv_atanh(double x);







































double __nv_hypot(double x, double y);












































double __nv_rhypot(double x, double y);

















































































double __nv_cbrt(double x);

















































double __nv_rcbrt(double x);




















































































































































































































































































































double __nv_pow(double x, double y);






































double __nv_j0(double x);

























































double __nv_j1(double x);
















































double __nv_y0(double x);
















































double __nv_y1(double x);

















































double __nv_yn(int n, double x);







































double __nv_jn(int n, double x);


























double __nv_cyl_bessel_i0(double x);


























double __nv_cyl_bessel_i1(double x);














































































double __nv_erf(double x);

























































double __nv_erfinv(double x);
























































double __nv_erfcinv(double x);


























































double __nv_normcdfinv(double x);


































double __nv_erfc(double x);











































































double __nv_erfcx(double x);











































double __nv_normcdf(double x);









































































































double __nv_tgamma(double x);




























































































































double __nv_lgamma(double x);
























































double __nv_ldexp(double x, int y);








































































double __nv_scalbn(double x, int y);











































































double __nv_frexp(double x, int *b);
























































double __nv_modf(double x, double *b);



























































double __nv_fmod(double x, double y);





















































































double __nv_remainder(double x, double y);


















































double __nv_remquo(double x, double y, int *c);
































double __nv_nextafter(double x, double y);












double __nv_nan(const signed char *tagp);













double __nv_round(double x);














long long int __nv_llround(double x);






















double __nv_fdim(double x, double y);


























int __nv_ilogb(double x);



















































double __nv_logb(double x);


























































































































































double __nv_fma(double x, double y, double z);









int __nv_clz(int x);








int __nv_clzll(long long x);









int __nv_popc(int x);








int __nv_popcll(long long x);
























unsigned int __nv_byte_perm(unsigned int x, unsigned int y, unsigned int z);










int __nv_min(int x, int y);









unsigned int __nv_umin(unsigned int x, unsigned int y);









long long __nv_llmin(long long x, long long y);









unsigned long long __nv_ullmin(unsigned long long x, unsigned long long y);
    









int __nv_max(int x, int y);









unsigned int __nv_umax(unsigned int x, unsigned int y);









long long __nv_llmax(long long x, long long y);









unsigned long long __nv_ullmax(unsigned long long x, unsigned long long y);










int __nv_mulhi(int x, int y);









unsigned int __nv_umulhi(unsigned int x, unsigned int y);









long long __nv_mul64hi(long long x, long long y);









unsigned long long __nv_umul64hi(unsigned long long x, unsigned long long y);










int __nv_mul24(int x, int y);









unsigned int __nv_umul24(unsigned int x, unsigned int y);









unsigned int __nv_brev(unsigned int x);
    








unsigned long long __nv_brevll(unsigned long long x);




































































int __nv_sad(int x, int y, int z);




































































unsigned int __nv_usad(unsigned int x, unsigned int y, unsigned int z);









int __nv_abs(int x);










long long __nv_llabs(long long x);








































































float __nv_floorf(float f);








































































double __nv_floor(double f);









































float __nv_fabsf(float f);









































double __nv_fabs(double f);


double __nv_rcp64h(double d);
















float __nv_fminf(float x, float y);
















float __nv_fmaxf(float x, float y);





































































float __nv_rsqrtf(float x);
















double __nv_fmin(double x, double y);
















double __nv_fmax(double x, double y);





































































double __nv_rsqrt(double x);



























































double __nv_ceil(double x);











double __nv_trunc(double x);





















float __nv_exp2f(float x);











float __nv_truncf(float x);



























































float __nv_ceilf(float x);























float __nv_saturatef(float x);

























































































































































float __nv_fmaf_rn(float x, float y, float z);
























































































































































float __nv_fmaf_rz(float x, float y, float z);
























































































































































float __nv_fmaf_rd(float x, float y, float z);
























































































































































float __nv_fmaf_ru(float x, float y, float z);


float __nv_fmaf_ieee_rn(float x, float y, float z);

float __nv_fmaf_ieee_rz(float x, float y, float z);

float __nv_fmaf_ieee_rd(float x, float y, float z);

float __nv_fmaf_ieee_ru(float x, float y, float z);





























































































































































double __nv_fma_rn(double x, double y, double z);




























































































































































double __nv_fma_rz(double x, double y, double z);




























































































































































double __nv_fma_rd(double x, double y, double z);




























































































































































double __nv_fma_ru(double x, double y, double z);











































































float __nv_fast_fdividef(float x, float y);











float __nv_fdiv_rn(float x, float y);










float __nv_fdiv_rz(float x, float y);










float __nv_fdiv_rd(float x, float y);










float __nv_fdiv_ru(float x, float y);

































float __nv_frcp_rn(float x);
































float __nv_frcp_rz(float x);
































float __nv_frcp_rd(float x);
































float __nv_frcp_ru(float x);































float __nv_fsqrt_rn(float x);






























float __nv_fsqrt_rz(float x);






























float __nv_fsqrt_rd(float x);






























float __nv_fsqrt_ru(float x);












double __nv_ddiv_rn(double x, double y);











double __nv_ddiv_rz(double x, double y);











double __nv_ddiv_rd(double x, double y);











double __nv_ddiv_ru(double x, double y);


































double __nv_drcp_rn(double x);

































double __nv_drcp_rz(double x);

































double __nv_drcp_rd(double x);

































double __nv_drcp_ru(double x);
































double __nv_dsqrt_rn(double x);
































double __nv_dsqrt_rz(double x);































double __nv_dsqrt_rd(double x);































double __nv_dsqrt_ru(double x);





































































float __nv_sqrtf(float x);





































































double __nv_sqrt(double x);












double __nv_dadd_rn(double x, double y);











double __nv_dadd_rz(double x, double y);











double __nv_dadd_rd(double x, double y);











double __nv_dadd_ru(double x, double y);












double __nv_dmul_rn(double x, double y);











double __nv_dmul_rz(double x, double y);











double __nv_dmul_rd(double x, double y);











double __nv_dmul_ru(double x, double y);












float __nv_fadd_rd(float x, float y);











float __nv_fadd_ru(float x, float y);












float __nv_fmul_rd(float x, float y);











float __nv_fmul_ru(float x, float y);












float __nv_fadd_rn(float x, float y);











float __nv_fadd_rz(float x, float y);












float __nv_fmul_rn(float x, float y);











float __nv_fmul_rz(float x, float y);









float __nv_double2float_rn(double d);








float __nv_double2float_rz(double d);








float __nv_double2float_rd(double d);








float __nv_double2float_ru(double d);
    








int __nv_double2int_rn(double d);








int __nv_double2int_rz(double d);








int __nv_double2int_rd(double d);








int __nv_double2int_ru(double d);









unsigned int __nv_double2uint_rn(double d);








unsigned int __nv_double2uint_rz(double d);








unsigned int __nv_double2uint_rd(double d);








unsigned int __nv_double2uint_ru(double d);








double __nv_int2double_rn(int i);








double __nv_uint2double_rn(unsigned int i);









int __nv_float2int_rn(float in);








int __nv_float2int_rz(float in);








int __nv_float2int_rd(float in);








int __nv_float2int_ru(float in);








unsigned int __nv_float2uint_rn(float in);








unsigned int __nv_float2uint_rz(float in);








unsigned int __nv_float2uint_rd(float in);








unsigned int __nv_float2uint_ru(float in);









float __nv_int2float_rn(int in);








float __nv_int2float_rz(int in);








float __nv_int2float_rd(int in);








float __nv_int2float_ru(int in);









float __nv_uint2float_rn(unsigned int in);








float __nv_uint2float_rz(unsigned int in);








float __nv_uint2float_rd(unsigned int in);








float __nv_uint2float_ru(unsigned int in);










double __nv_hiloint2double(int x, int y);








int __nv_double2loint(double d);








int __nv_double2hiint(double d);









long long __nv_float2ll_rn(float f);








long long __nv_float2ll_rz(float f);








long long __nv_float2ll_rd(float f);








long long __nv_float2ll_ru(float f);








unsigned long long __nv_float2ull_rn(float f);








unsigned long long __nv_float2ull_rz(float f);








unsigned long long __nv_float2ull_rd(float f);








unsigned long long __nv_float2ull_ru(float f);









long long __nv_double2ll_rn(double f);








long long __nv_double2ll_rz(double f);








long long __nv_double2ll_rd(double f);








long long __nv_double2ll_ru(double f);









unsigned long long __nv_double2ull_rn(double f);








unsigned long long __nv_double2ull_rz(double f);








unsigned long long __nv_double2ull_rd(double f);








unsigned long long __nv_double2ull_ru(double f);









float __nv_ll2float_rn(long long l);








float __nv_ll2float_rz(long long l);








float __nv_ll2float_rd(long long l);








float __nv_ll2float_ru(long long l);









float __nv_ull2float_rn(unsigned long long l);








float __nv_ull2float_rz(unsigned long long l);








float __nv_ull2float_rd(unsigned long long l);








float __nv_ull2float_ru(unsigned long long l);









double __nv_ll2double_rn(long long l);








double __nv_ll2double_rz(long long l);








double __nv_ll2double_rd(long long l);








double __nv_ll2double_ru(long long l);









double __nv_ull2double_rn(unsigned long long l);








double __nv_ull2double_rz(unsigned long long l);








double __nv_ull2double_rd(unsigned long long l);








double __nv_ull2double_ru(unsigned long long l);









unsigned short __nv_float2half_rn(float f);








float __nv_half2float(unsigned short h);








float __nv_int_as_float(int x);









int __nv_float_as_int(float x);
    








double __nv_longlong_as_double(long long x);









long long  __nv_double_as_longlong (double x);

#line 11912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions_decls.h"

#line 8483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
#line 8484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"








static __inline__ __attribute__((always_inline)) int __syncthreads_count(int predicate)
{
  return __nvvm_bar0_popc(predicate);
}

static __inline__ __attribute__((always_inline)) int __syncthreads_and(int predicate)
{
  return __nvvm_bar0_and(predicate);
}

static __inline__ __attribute__((always_inline)) int __syncthreads_or(int predicate)
{
  return __nvvm_bar0_or(predicate);
}






static __inline__ __attribute__((always_inline)) void __threadfence_block()
{
  __nvvm_membar_cta();
}

static __inline__ __attribute__((always_inline)) void __threadfence()
{
  __nvvm_membar_gl();
}

static __inline__ __attribute__((always_inline)) void __threadfence_system()
{
  __nvvm_membar_sys();
}






static __inline__ __attribute__((always_inline)) int __all(int a)
{
  int result;
  asm __volatile__ ("{ \n\t"
        ".reg .pred \t%%p1; \n\t"
        ".reg .pred \t%%p2; \n\t"
        "setp.ne.u32 \t%%p1, %1, 0; \n\t"
        "vote.all.pred \t%%p2, %%p1; \n\t"
        "selp.s32 \t%0, 1, 0, %%p2; \n\t"
        "}" : "=r"(result) : "r"(a));
  return result;
}

static __inline__ __attribute__((always_inline)) int __any(int a)
{
  int result;
  asm __volatile__ ("{ \n\t"
        ".reg .pred \t%%p1; \n\t"
        ".reg .pred \t%%p2; \n\t"
        "setp.ne.u32 \t%%p1, %1, 0; \n\t"
        "vote.any.pred \t%%p2, %%p1; \n\t"
        "selp.s32 \t%0, 1, 0, %%p2; \n\t"
        "}" : "=r"(result) : "r"(a));
  return result;
}

static __inline__ __attribute__((always_inline)) int __ballot(int a)
{
  int result;
  asm __volatile__ ("{ \n\t"
        ".reg .pred \t%%p1; \n\t"
        "setp.ne.u32 \t%%p1, %1, 0; \n\t"
        "vote.ballot.b32 \t%0, %%p1; \n\t"
        "}" : "=r"(result) : "r"(a));
  return result;
}






static __inline__ __attribute__((always_inline)) void __brkpt()
{
  asm __volatile__ ("brkpt;");
}

static __inline__ __attribute__((always_inline)) int clock()
{
  int r;
  asm __volatile__ ("mov.u32 \t%0, %%clock;" : "=r"(r));
  return r;
}

static __inline__ __attribute__((always_inline)) long long clock64()
{
  long long z;
  asm __volatile__ ("mov.u64 \t%0, %%clock64;" : "=l"(z));
  return z;
}
    


static __inline__ __attribute__((always_inline)) unsigned int __pm0(void)
{
  unsigned int r;
  asm("mov.u32 \t%0, %%pm0;" : "=r"(r));
  return r;
}

static __inline__ __attribute__((always_inline)) unsigned int __pm1(void)
{
  unsigned int r;
  asm("mov.u32 \t%0, %%pm1;" : "=r"(r));
  return r;
}

static __inline__ __attribute__((always_inline)) unsigned int __pm2(void)
{
  unsigned int r;
  asm("mov.u32 \t%0, %%pm2;" : "=r"(r));
  return r;
}

static __inline__ __attribute__((always_inline)) unsigned int __pm3(void)
{
  unsigned int r;
  asm("mov.u32 \t%0, %%pm3;" : "=r"(r));
  return r;
}

static __inline__ __attribute__((always_inline)) void __trap(void)
{
  asm __volatile__ ("trap;");
}

static __inline__ __attribute__((always_inline)) void* memcpy(void *dest, const void *src, size_t n)
{
  __nvvm_memcpy((unsigned char *)dest, (unsigned char *)src, n, 
                 1);
  return dest;
}

static __inline__ __attribute__((always_inline)) void* memset(void *dest, int c, size_t n)
{
  __nvvm_memset((unsigned char *)dest, (unsigned char)c, n, 
                1);
  return dest;
}






static __inline__ __attribute__((always_inline)) int __clz(int x)
{
  return __nv_clz(x);
}

static __inline__ __attribute__((always_inline)) int __clzll(long long x)
{
  return __nv_clzll(x);
}

static __inline__ __attribute__((always_inline)) int __popc(int x)
{
  return __nv_popc(x);
}

static __inline__ __attribute__((always_inline)) int __popcll(long long x)
{
  return __nv_popcll(x);
}

static __inline__ __attribute__((always_inline)) unsigned int __byte_perm(unsigned int a,
                                                unsigned int b,
                                                unsigned int c)
{
  return __nv_byte_perm(a, b, c);
}






static __inline__ __attribute__((always_inline)) int min(int x, int y)
{
  return __nv_min(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned int umin(unsigned int x, unsigned int y)
{
  return __nv_umin(x, y);
}
    
static __inline__ __attribute__((always_inline)) long long llmin(long long x, long long y)
{
  return __nv_llmin(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned long long ullmin(unsigned long long x,
                                                 unsigned long long y)
{
  return __nv_ullmin(x, y);
}
    
static __inline__ __attribute__((always_inline)) int max(int x, int y)
{
  return __nv_max(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned int umax(unsigned int x, unsigned int y)
{
  return __nv_umax(x, y);
}
    
static __inline__ __attribute__((always_inline)) long long llmax(long long x, long long y)
{
  return __nv_llmax(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned long long ullmax(unsigned long long x,
                                                 unsigned long long y)
{
  return __nv_ullmax(x, y);
}

static __inline__ __attribute__((always_inline)) int __mulhi(int x, int y)
{
  return __nv_mulhi(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned int __umulhi(unsigned int x, unsigned int y)
{
  return __nv_umulhi(x, y);
}

static __inline__ __attribute__((always_inline)) long long __mul64hi(long long x, long long y)
{
  return __nv_mul64hi(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned long long __umul64hi(unsigned long long x,
                                                     unsigned long long y)
{
  return __nv_umul64hi(x, y);
}

static __inline__ __attribute__((always_inline)) int __mul24(int x, int y)
{
  return __nv_mul24(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned int __umul24(unsigned int x, unsigned int y)
{
  return __nv_umul24(x, y);
}

static __inline__ __attribute__((always_inline)) unsigned int __brev(unsigned int x)
{
  return __nv_brev(x);
}
    
static __inline__ __attribute__((always_inline)) unsigned long long __brevll(unsigned long long x)
{
  return __nv_brevll(x);
}
    
static __inline__ __attribute__((always_inline)) int __sad(int x, int y, int z)
{
  return __nv_sad(x, y, z);
}

static __inline__ __attribute__((always_inline)) unsigned int __usad(unsigned int x,
                                           unsigned int y,
                                           unsigned int z)
{
  return __nv_usad(x, y, z);
}

static __inline__ __attribute__((always_inline)) int abs(int x)
{
  return __nv_abs(x);
}

static __inline__ __attribute__((always_inline)) long labs(long x)
{


#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
  return __nv_abs((int) x);
#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
}

static __inline__ __attribute__((always_inline)) long long llabs(long long x)
{
  return __nv_llabs(x);
}






static __inline__ __attribute__((always_inline)) float floorf(float f)
{
  return __nv_floorf(f);
}

static __inline__ __attribute__((always_inline)) double floor(double f)
{
  return __nv_floor(f);
}

static __inline__ __attribute__((always_inline)) float fabsf(float f)
{
  return __nv_fabsf(f);
}

static __inline__ __attribute__((always_inline)) double fabs(double f)
{
  return __nv_fabs(f);
}

static __inline__ __attribute__((always_inline)) double __rcp64h(double d)
{
  return __nv_rcp64h(d);
}

static __inline__ __attribute__((always_inline)) float fminf(float x, float y)
{
  return __nv_fminf(x, y);
}

static __inline__ __attribute__((always_inline)) float fmaxf(float x, float y)
{
  return __nv_fmaxf(x, y);
}

static __inline__ __attribute__((always_inline)) float rsqrtf(float x)
{
  return __nv_rsqrtf(x);
}

static __inline__ __attribute__((always_inline)) double fmin(double x, double y)
{
  return __nv_fmin(x, y);
}

static __inline__ __attribute__((always_inline)) double fmax(double x, double y)
{
  return __nv_fmax(x, y);
}

static __inline__ __attribute__((always_inline)) double rsqrt(double x)
{
  return __nv_rsqrt(x);
}

static __inline__ __attribute__((always_inline)) double ceil(double x)
{
  return __nv_ceil(x);
}

static __inline__ __attribute__((always_inline)) double trunc(double x)
{
  return __nv_trunc(x);
}

static __inline__ __attribute__((always_inline)) float exp2f(float x)
{
  return __nv_exp2f(x);
}

static __inline__ __attribute__((always_inline)) float truncf(float x)
{
  return __nv_truncf(x);
}

static __inline__ __attribute__((always_inline)) float ceilf(float x)
{
  return __nv_ceilf(x);
}

static __inline__ __attribute__((always_inline)) float __saturatef(float x)
{
  return __nv_saturatef(x);
}






static __inline__ __attribute__((always_inline)) float __fmaf_rn(float x, float y, float z)
{
  return __nv_fmaf_rn(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_rz(float x, float y, float z)
{
  return __nv_fmaf_rz(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_rd(float x, float y, float z)
{
  return __nv_fmaf_rd(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_ru(float x, float y, float z)
{
  return __nv_fmaf_ru(x, y, z);
}






static __inline__ __attribute__((always_inline)) float __fmaf_ieee_rn(float x, float y, float z)
{
  return __nv_fmaf_ieee_rn(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_ieee_rz(float x, float y, float z)
{
  return __nv_fmaf_ieee_rz(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_ieee_rd(float x, float y, float z)
{
  return __nv_fmaf_ieee_rd(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fmaf_ieee_ru(float x, float y, float z)
{
  return __nv_fmaf_ieee_ru(x, y, z);
}






static __inline__ __attribute__((always_inline)) double __fma_rn(double x, double y, double z)
{
  return __nv_fma_rn(x, y, z);
}

static __inline__ __attribute__((always_inline)) double __fma_rz(double x, double y, double z)
{
  return __nv_fma_rz(x, y, z);
}

static __inline__ __attribute__((always_inline)) double __fma_rd(double x, double y, double z)
{
  return __nv_fma_rd(x, y, z);
}

static __inline__ __attribute__((always_inline)) double __fma_ru(double x, double y, double z)
{
  return __nv_fma_ru(x, y, z);
}

static __inline__ __attribute__((always_inline)) float __fdividef(float x, float y)
{
  return __nv_fast_fdividef(x, y);
}






static __inline__ __attribute__((always_inline)) float __fdiv_rn(float x, float y)
{
  return __nv_fdiv_rn(x, y);
}

static __inline__ __attribute__((always_inline)) float __fdiv_rz(float x, float y)
{
  return __nv_fdiv_rz(x, y);
}

static __inline__ __attribute__((always_inline)) float __fdiv_rd(float x, float y)
{
  return __nv_fdiv_rd(x, y);
}

static __inline__ __attribute__((always_inline)) float __fdiv_ru(float x, float y)
{
  return __nv_fdiv_ru(x, y);
}






static __inline__ __attribute__((always_inline)) float __frcp_rn(float x)
{
  return __nv_frcp_rn(x);
}

static __inline__ __attribute__((always_inline)) float __frcp_rz(float x)
{
  return __nv_frcp_rz(x);
}

static __inline__ __attribute__((always_inline)) float __frcp_rd(float x)
{
  return __nv_frcp_rd(x);
}

static __inline__ __attribute__((always_inline)) float __frcp_ru(float x)
{
  return __nv_frcp_ru(x);
}






static __inline__ __attribute__((always_inline)) float __fsqrt_rn(float x)
{
  return __nv_fsqrt_rn(x);
}

static __inline__ __attribute__((always_inline)) float __fsqrt_rz(float x)
{
  return __nv_fsqrt_rz(x);
}

static __inline__ __attribute__((always_inline)) float __fsqrt_rd(float x)
{
  return __nv_fsqrt_rd(x);
}

static __inline__ __attribute__((always_inline)) float __fsqrt_ru(float x)
{
  return __nv_fsqrt_ru(x);
}






static __inline__ __attribute__((always_inline)) double __ddiv_rn(double x, double y)
{
  return __nv_ddiv_rn(x, y);
}

static __inline__ __attribute__((always_inline)) double __ddiv_rz(double x, double y)
{
  return __nv_ddiv_rz(x, y);
}

static __inline__ __attribute__((always_inline)) double __ddiv_rd(double x, double y)
{
  return __nv_ddiv_rd(x, y);
}

static __inline__ __attribute__((always_inline)) double __ddiv_ru(double x, double y)
{
  return __nv_ddiv_ru(x, y);
}






static __inline__ __attribute__((always_inline)) double __drcp_rn(double x)
{
  return __nv_drcp_rn(x);
}

static __inline__ __attribute__((always_inline)) double __drcp_rz(double x)
{
  return __nv_drcp_rz(x);
}

static __inline__ __attribute__((always_inline)) double __drcp_rd(double x)
{
  return __nv_drcp_rd(x);
}

static __inline__ __attribute__((always_inline)) double __drcp_ru(double x)
{
  return __nv_drcp_ru(x);
}






static __inline__ __attribute__((always_inline)) double __dsqrt_rn(double x)
{
  return __nv_dsqrt_rn(x);
}

static __inline__ __attribute__((always_inline)) double __dsqrt_rz(double x)
{
  return __nv_dsqrt_rz(x);
}

static __inline__ __attribute__((always_inline)) double __dsqrt_rd(double x)
{
  return __nv_dsqrt_rd(x);
}

static __inline__ __attribute__((always_inline)) double __dsqrt_ru(double x)
{
  return __nv_dsqrt_ru(x);
}

static __inline__ __attribute__((always_inline)) float sqrtf(float x)
{
  return __nv_sqrtf(x);
}

static __inline__ __attribute__((always_inline)) double sqrt(double x)
{
  return __nv_sqrt(x);
}






static __inline__ __attribute__((always_inline)) double __dadd_rn(double x, double y)
{
  return __nv_dadd_rn(x, y);
}

static __inline__ __attribute__((always_inline)) double __dadd_rz(double x, double y)
{
  return __nv_dadd_rz(x, y);
}

static __inline__ __attribute__((always_inline)) double __dadd_rd(double x, double y)
{
  return __nv_dadd_rd(x, y);
}

static __inline__ __attribute__((always_inline)) double __dadd_ru(double x, double y)
{
  return __nv_dadd_ru(x, y);
}






static __inline__ __attribute__((always_inline)) double __dmul_rn(double x, double y)
{
  return __nv_dmul_rn(x, y);
}

static __inline__ __attribute__((always_inline)) double __dmul_rz(double x, double y)
{
  return __nv_dmul_rz(x, y);
}

static __inline__ __attribute__((always_inline)) double __dmul_rd(double x, double y)
{
  return __nv_dmul_rd(x, y);
}

static __inline__ __attribute__((always_inline)) double __dmul_ru(double x, double y)
{
  return __nv_dmul_ru(x, y);
}






static __inline__ __attribute__((always_inline)) float __fadd_rd(float x, float y)
{
  return __nv_fadd_rd(x, y);
}

static __inline__ __attribute__((always_inline)) float __fadd_ru(float x, float y)
{
  return __nv_fadd_ru(x, y);
}

static __inline__ __attribute__((always_inline)) float __fadd_rn(float x, float y)
{
  return __nv_fadd_rn(x, y);
}

static __inline__ __attribute__((always_inline)) float __fadd_rz(float x, float y)
{
  return __nv_fadd_rz(x, y);
}






static __inline__ __attribute__((always_inline)) float __fmul_rd(float x, float y)
{
  return __nv_fmul_rd(x, y);
}

static __inline__ __attribute__((always_inline)) float __fmul_ru(float x, float y)
{
  return __nv_fmul_ru(x, y);
}

static __inline__ __attribute__((always_inline)) float __fmul_rn(float x, float y)
{
  return __nv_fmul_rn(x, y);
}

static __inline__ __attribute__((always_inline)) float __fmul_rz(float x, float y)
{
  return __nv_fmul_rz(x, y);
}







static __inline__ __attribute__((always_inline)) float __double2float_rn(double d)
{
  return __nv_double2float_rn(d);
}

static __inline__ __attribute__((always_inline)) float __double2float_rz(double d)
{
  return __nv_double2float_rz(d);
}

static __inline__ __attribute__((always_inline)) float __double2float_rd(double d)
{
  return __nv_double2float_rd(d);
}

static __inline__ __attribute__((always_inline)) float __double2float_ru(double d)
{
  return __nv_double2float_ru(d);
}
    

static __inline__ __attribute__((always_inline)) int __double2int_rn(double d)
{
  return __nv_double2int_rn(d);
}

static __inline__ __attribute__((always_inline)) int __double2int_rz(double d)
{
  return __nv_double2int_rz(d);
}

static __inline__ __attribute__((always_inline)) int __double2int_rd(double d)
{
  return __nv_double2int_rd(d);
}

static __inline__ __attribute__((always_inline)) int __double2int_ru(double d)
{
  return __nv_double2int_ru(d);
}


static __inline__ __attribute__((always_inline)) unsigned int __double2uint_rn(double d)
{
  return __nv_double2uint_rn(d);
}

static __inline__ __attribute__((always_inline)) unsigned int __double2uint_rz(double d)
{
  return __nv_double2uint_rz(d);
}

static __inline__ __attribute__((always_inline)) unsigned int __double2uint_rd(double d)
{
  return __nv_double2uint_rd(d);
}

static __inline__ __attribute__((always_inline)) unsigned int __double2uint_ru(double d)
{
  return __nv_double2uint_ru(d);
}


static __inline__ __attribute__((always_inline)) double __int2double_rn(int i)
{
  return __nv_int2double_rn(i);
}


static __inline__ __attribute__((always_inline)) double __uint2double_rn(unsigned int i)
{
  return __nv_uint2double_rn(i);
}


static __inline__ __attribute__((always_inline)) int __float2int_rn(float in)
{
  return __nv_float2int_rn(in);
}

static __inline__ __attribute__((always_inline)) int __float2int_rz(float in)
{
  return __nv_float2int_rz(in);
}

static __inline__ __attribute__((always_inline)) int __float2int_rd(float in)
{
  return __nv_float2int_rd(in);
}

static __inline__ __attribute__((always_inline)) int __float2int_ru(float in)
{
  return __nv_float2int_ru(in);
}


static __inline__ __attribute__((always_inline)) unsigned int __float2uint_rn(float in)
{
  return __nv_float2uint_rn(in);
}

static __inline__ __attribute__((always_inline)) unsigned int __float2uint_rz(float in)
{
  return __nv_float2uint_rz(in);
}

static __inline__ __attribute__((always_inline)) unsigned int __float2uint_rd(float in)
{
  return __nv_float2uint_rd(in);
}

static __inline__ __attribute__((always_inline)) unsigned int __float2uint_ru(float in)
{
  return __nv_float2uint_ru(in);
}


static __inline__ __attribute__((always_inline)) float __int2float_rn(int in)
{
  return __nv_int2float_rn(in);
}

static __inline__ __attribute__((always_inline)) float __int2float_rz(int in)
{
  return __nv_int2float_rz(in);
}

static __inline__ __attribute__((always_inline)) float __int2float_rd(int in)
{
  return __nv_int2float_rd(in);
}

static __inline__ __attribute__((always_inline)) float __int2float_ru(int in)
{
  return __nv_int2float_ru(in);
}


static __inline__ __attribute__((always_inline)) float __uint2float_rn(unsigned int in)
{
  return __nv_uint2float_rn(in);
}

static __inline__ __attribute__((always_inline)) float __uint2float_rz(unsigned int in)
{
  return __nv_uint2float_rz(in);
}

static __inline__ __attribute__((always_inline)) float __uint2float_rd(unsigned int in)
{
  return __nv_uint2float_rd(in);
}

static __inline__ __attribute__((always_inline)) float __uint2float_ru(unsigned int in)
{
  return __nv_uint2float_ru(in);
}


static __inline__ __attribute__((always_inline)) double __hiloint2double(int a, int b)
{
  return __nv_hiloint2double(a, b);
}

static __inline__ __attribute__((always_inline)) int __double2loint(double d)
{
  return __nv_double2loint(d);
}

static __inline__ __attribute__((always_inline)) int __double2hiint(double d)
{
  return __nv_double2hiint(d);
}


static __inline__ __attribute__((always_inline)) long long __float2ll_rn(float f)
{
  return __nv_float2ll_rn(f);
}

static __inline__ __attribute__((always_inline)) long long __float2ll_rz(float f)
{
  return __nv_float2ll_rz(f);
}

static __inline__ __attribute__((always_inline)) long long __float2ll_rd(float f)
{
  return __nv_float2ll_rd(f);
}

static __inline__ __attribute__((always_inline)) long long __float2ll_ru(float f)
{
  return __nv_float2ll_ru(f);
}


static __inline__ __attribute__((always_inline)) unsigned long long __float2ull_rn(float f)
{
  return __nv_float2ull_rn(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __float2ull_rz(float f)
{
  return __nv_float2ull_rz(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __float2ull_rd(float f)
{
  return __nv_float2ull_rd(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __float2ull_ru(float f)
{
  return __nv_float2ull_ru(f);
}


static __inline__ __attribute__((always_inline)) long long __double2ll_rn(double f)
{
  return __nv_double2ll_rn(f);
}

static __inline__ __attribute__((always_inline)) long long __double2ll_rz(double f)
{
  return __nv_double2ll_rz(f);
}

static __inline__ __attribute__((always_inline)) long long __double2ll_rd(double f)
{
  return __nv_double2ll_rd(f);
}

static __inline__ __attribute__((always_inline)) long long __double2ll_ru(double f)
{
  return __nv_double2ll_ru(f);
}


static __inline__ __attribute__((always_inline)) unsigned long long __double2ull_rn(double f)
{
  return __nv_double2ull_rn(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __double2ull_rz(double f)
{
  return __nv_double2ull_rz(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __double2ull_rd(double f)
{
  return __nv_double2ull_rd(f);
}

static __inline__ __attribute__((always_inline)) unsigned long long __double2ull_ru(double f)
{
  return __nv_double2ull_ru(f);
}


static __inline__ __attribute__((always_inline)) float __ll2float_rn(long long l)
{
  return __nv_ll2float_rn(l);
}

static __inline__ __attribute__((always_inline)) float __ll2float_rz(long long l)
{
  return __nv_ll2float_rz(l);
}

static __inline__ __attribute__((always_inline)) float __ll2float_rd(long long l)
{
  return __nv_ll2float_rd(l);
}

static __inline__ __attribute__((always_inline)) float __ll2float_ru(long long l)
{
  return __nv_ll2float_ru(l);
}


static __inline__ __attribute__((always_inline)) float __ull2float_rn(unsigned long long l)
{
  return __nv_ull2float_rn(l);
}

static __inline__ __attribute__((always_inline)) float __ull2float_rz(unsigned long long l)
{
  return __nv_ull2float_rz(l);
}

static __inline__ __attribute__((always_inline)) float __ull2float_rd(unsigned long long l)
{
  return __nv_ull2float_rd(l);
}

static __inline__ __attribute__((always_inline)) float __ull2float_ru(unsigned long long l)
{
  return __nv_ull2float_ru(l);
}


static __inline__ __attribute__((always_inline)) double __ll2double_rn(long long l)
{
  return __nv_ll2double_rn(l);
}

static __inline__ __attribute__((always_inline)) double __ll2double_rz(long long l)
{
  return __nv_ll2double_rz(l);
}

static __inline__ __attribute__((always_inline)) double __ll2double_rd(long long l)
{
  return __nv_ll2double_rd(l);
}

static __inline__ __attribute__((always_inline)) double __ll2double_ru(long long l)
{
  return __nv_ll2double_ru(l);
}


static __inline__ __attribute__((always_inline)) double __ull2double_rn(unsigned long long l)
{
  return __nv_ull2double_rn(l);
}

static __inline__ __attribute__((always_inline)) double __ull2double_rz(unsigned long long l)
{
  return __nv_ull2double_rz(l);
}

static __inline__ __attribute__((always_inline)) double __ull2double_rd(unsigned long long l)
{
  return __nv_ull2double_rd(l);
}

static __inline__ __attribute__((always_inline)) double __ull2double_ru(unsigned long long l)
{
  return __nv_ull2double_ru(l);
}

static __inline__ __attribute__((always_inline)) unsigned short __float2half_rn(float f)
{
  return __nv_float2half_rn(f);
}

static __inline__ __attribute__((always_inline)) float __half2float(unsigned short h)
{
  return __nv_half2float(h);
}

static __inline__ __attribute__((always_inline)) float __int_as_float(int x)
{
  return __nv_int_as_float(x);
}

static __inline__ __attribute__((always_inline)) int __float_as_int(float x)
{
  return __nv_float_as_int(x);
}
    
static __inline__ __attribute__((always_inline)) double __longlong_as_double(long long x)
{
  return __nv_longlong_as_double(x);
}

static __inline__ __attribute__((always_inline)) long long  __double_as_longlong (double x)
{
  return __nv_double_as_longlong(x);
}







static __inline__ __attribute__((always_inline)) float __sinf(float a)
{
  return __nv_fast_sinf(a);
}

static __inline__ __attribute__((always_inline)) float __cosf(float a)
{
  return __nv_fast_cosf(a);
}

static __inline__ __attribute__((always_inline)) float __log2f(float a)
{
  return __nv_fast_log2f(a);
}







static __inline__ __attribute__((always_inline)) float __tanf(float a)
{
  return __nv_fast_tanf(a);
}

static __inline__ __attribute__((always_inline)) void __sincosf(float a, float *sptr, float *cptr)
{
  __nv_fast_sincosf(a, sptr, cptr);
}

static __inline__ __attribute__((always_inline)) float __expf(float a)
{
  return __nv_fast_expf(a);
}

static __inline__ __attribute__((always_inline)) float __exp10f(float a)
{
  return __nv_fast_exp10f(a);
}

static __inline__ __attribute__((always_inline)) float __log10f(float a)
{
  return __nv_fast_log10f(a);
}

static __inline__ __attribute__((always_inline)) float __logf(float a)
{
  return __nv_fast_logf(a);
}

static __inline__ __attribute__((always_inline)) float __powf(float a, float b)
{
  return __nv_fast_powf(a, b);
}

static __inline__ __attribute__((always_inline)) float fdividef(float a, float b)
{


#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
  return a / b;
#line 4519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
}

static __inline__ __attribute__((always_inline)) double fdivide(double a, double b)
{
  return a / b;
}




























static __inline__ __attribute__((always_inline)) int __hadd(int a, int b)
{
  return __nv_hadd(a, b);
}

static __inline__ __attribute__((always_inline)) int __rhadd(int a, int b)
{
  return __nv_rhadd(a, b);
}

static __inline__ __attribute__((always_inline)) unsigned int __uhadd(unsigned int a, unsigned int b)
{
  return __nv_uhadd(a, b);
}

static __inline__ __attribute__((always_inline)) unsigned int __urhadd(unsigned int a, unsigned int b)
{
  return __nv_urhadd(a, b);
}

static __inline__ __attribute__((always_inline)) float __fsub_rn (float a, float b)
{
  return __nv_fsub_rn(a, b);
}

static __inline__ __attribute__((always_inline)) float __fsub_rz (float a, float b)
{
  return __nv_fsub_rz(a, b);
}

static __inline__ __attribute__((always_inline)) float __fsub_rd (float a, float b)
{
  return __nv_fsub_rd(a, b);
}

static __inline__ __attribute__((always_inline)) float __fsub_ru (float a, float b)
{
  return __nv_fsub_ru(a, b);
}

static __inline__ __attribute__((always_inline)) float __frsqrt_rn (float a)
{
  return __nv_frsqrt_rn(a);
}

static __inline__ __attribute__((always_inline)) int __ffs(int a)
{
  return __nv_ffs(a);
}

static __inline__ __attribute__((always_inline)) int __ffsll(long long int a)
{
  return __nv_ffsll(a);
}






static __inline__ __attribute__((always_inline))
int __iAtomicAdd(int *p, int val)
{
  return __nvvm_atom_add_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicAdd(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_add_gen_i((volatile int *)p, (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long __ullAtomicAdd(unsigned long long *p, unsigned long long val)
{
  return __nvvm_atom_add_gen_ll((volatile long long *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
float __fAtomicAdd(float *p, float val)
{
  return __nvvm_atom_add_gen_f((volatile float *)p, val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicExch(int *p, int val)
{
  return __nvvm_atom_xchg_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicExch(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_xchg_gen_i((volatile int *)p, (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long __ullAtomicExch(unsigned long long *p,
                                   unsigned long long val)
{
  return __nvvm_atom_xchg_gen_ll((volatile long long *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
float __fAtomicExch(float *p, float val)
{
  int old = __nvvm_atom_xchg_gen_i((volatile int *)p, __float_as_int(val));
  return __int_as_float(old);
}

static __inline__ __attribute__((always_inline))
int __iAtomicMin(int *p, int val)
{
  return __nvvm_atom_min_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
long long __illAtomicMin(long long *p, long long val)
{
  return __nvvm_atom_min_gen_ll((volatile long long *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicMin(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_min_gen_ui((volatile unsigned int *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned long long __ullAtomicMin(unsigned long long *p, unsigned long long val)
{
  return __nvvm_atom_min_gen_ull((volatile unsigned long long *)p, val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicMax(int *p, int val)
{
  return __nvvm_atom_max_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
long long __illAtomicMax(long long *p, long long val)
{
  return __nvvm_atom_max_gen_ll((volatile long long *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicMax(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_max_gen_ui((unsigned int *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned long long __ullAtomicMax(unsigned long long *p, unsigned long long val)
{
  return __nvvm_atom_max_gen_ull((volatile unsigned long long *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicInc(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_inc_gen_ui((unsigned int *)p, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicDec(unsigned int *p, unsigned int val)
{
  return __nvvm_atom_dec_gen_ui((unsigned int *)p, val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicCAS(int *p, int compare, int val)
{
  return __nvvm_atom_cas_gen_i((int *)p, compare, val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicCAS(unsigned int *p, unsigned int compare,
                          unsigned int val)
{
  return (unsigned int)__nvvm_atom_cas_gen_i((volatile int *)p,
                                             (int)compare,
                                             (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long int __ullAtomicCAS(unsigned long long int *p,
                                      unsigned long long int compare,
                                      unsigned long long int val)
{
  return
    (unsigned long long int)__nvvm_atom_cas_gen_ll((volatile long long int *)p,
                                                   (long long int)compare,
                                                   (long long int)val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicAnd(int *p, int val)
{
  return __nvvm_atom_and_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
long long int __llAtomicAnd(long long int *p, long long int val)
{
  return __nvvm_atom_and_gen_ll((volatile long long int *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicAnd(unsigned int *p, unsigned int val)
{
  return (unsigned int)__nvvm_atom_and_gen_i((volatile int *)p, (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long int __ullAtomicAnd(unsigned long long int *p,
                                      unsigned long long int val)
{
  return __nvvm_atom_and_gen_ll((volatile long long int *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicOr(int *p, int val)
{
  return __nvvm_atom_or_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
long long int __llAtomicOr(long long int *p, long long int val)
{
  return __nvvm_atom_or_gen_ll((volatile long long int *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicOr(unsigned int *p, unsigned int val)
{
  return (unsigned int)__nvvm_atom_or_gen_i((volatile int *)p, (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long int __ullAtomicOr(unsigned long long int *p,
                                     unsigned long long int val)
{
  return __nvvm_atom_or_gen_ll((volatile long long int *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
int __iAtomicXor(int *p, int val)
{
  return __nvvm_atom_xor_gen_i((volatile int *)p, val);
}

static __inline__ __attribute__((always_inline))
long long int __llAtomicXor(long long int *p, long long int val)
{
  return __nvvm_atom_xor_gen_ll((volatile long long int *)p, (long long)val);
}

static __inline__ __attribute__((always_inline))
unsigned int __uAtomicXor(unsigned int *p, unsigned int val)
{
  return (unsigned int)__nvvm_atom_xor_gen_i((volatile int *)p, (int)val);
}

static __inline__ __attribute__((always_inline))
unsigned long long int __ullAtomicXor(unsigned long long int *p,
                                      unsigned long long int val)
{
  return __nvvm_atom_xor_gen_ll((volatile long long int *)p, (long long)val);
}




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 7284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"







static __inline__ __attribute__((always_inline)) unsigned int __vabs2(unsigned int a)
{
    unsigned int r;



#line 7298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                       \n\t"
         ".reg .u32 a,m,r;        \n\t"
         "mov.b32  a,%1;          \n\t"
         "prmt.b32 m,a,0,0xbb99;  \n\t" 
         "xor.b32  r,a,m;         \n\t" 
         "and.b32  m,m,0x00010001;\n\t" 
         "add.u32  r,r,m;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a));













#line 7322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsss2(unsigned int a)
{
    unsigned int r;



#line 7332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                       \n\t"
         ".reg .u32 a,m,r;        \n\t"
         "mov.b32  a,%1;          \n\t"
         "prmt.b32 m,a,0,0xbb99;  \n\t" 
         "xor.b32  r,a,m;         \n\t" 
         "and.b32  m,m,0x00010001;\n\t" 
         "add.u32  r,r,m;         \n\t" 
         "prmt.b32 m,r,0,0xbb99;  \n\t" 
         "and.b32  m,m,0x00010001;\n\t" 
         "sub.u32  r,r,m;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a));
















#line 7362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vadd2(unsigned int a, unsigned int b)
{
    unsigned int s, t;



#line 7372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = a ^ b;          
    t = a + b;          
    s = s ^ t;          
    s = s & 0x00010000; 
    t = t - s;          
#line 7378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return t;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vaddss2 (unsigned int a, unsigned int b)
{
    unsigned int r;



#line 7388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    int ahi, alo, blo, bhi, rhi, rlo;
    ahi = (int)((a & 0xffff0000U));
    bhi = (int)((b & 0xffff0000U));

    alo = (int)(a << 16);
    blo = (int)(b << 16);



#line 7398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("add.sat.s32 %0,%1,%2;" : "=r"(rlo) : "r"(alo), "r"(blo));
    asm ("add.sat.s32 %0,%1,%2;" : "=r"(rhi) : "r"(ahi), "r"(bhi));


#line 7403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("prmt.b32 %0,%1,%2,0x7632;" : "=r"(r) : "r"(rlo), "r"(rhi));
#line 7405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vaddus2 (unsigned int a, unsigned int b)
{
    unsigned int r;



#line 7416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    int alo, blo, rlo, ahi, bhi, rhi;
    asm ("{                              \n\t"
         "and.b32     %0, %4, 0xffff;    \n\t"
         "and.b32     %1, %5, 0xffff;    \n\t"

         "shr.u32     %2, %4, 16;        \n\t"
         "shr.u32     %3, %5, 16;        \n\t"



#line 7427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "}"
         : "=r"(alo), "=r"(blo), "=r"(ahi), "=r"(bhi) 
         : "r"(a), "r"(b));
    rlo = min (alo + blo, 65535);
    rhi = min (ahi + bhi, 65535);
    r = (rhi << 16) + rlo;
#line 7434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vavgs2(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 7444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    
    
    
    
    
    
    
    
    asm ("{                      \n\t"
         ".reg .u32 a,b,c,r,s,t,u,v;\n\t"
         "mov.b32 a,%1;          \n\t"
         "mov.b32 b,%2;          \n\t"
         "and.b32 u,a,0xfffefffe;\n\t" 
         "and.b32 v,b,0xfffefffe;\n\t" 
         "xor.b32 s,a,b;         \n\t" 
         "and.b32 t,a,b;         \n\t" 
         "shr.u32 u,u,1;         \n\t" 
         "shr.u32 v,v,1;         \n\t" 
         "and.b32 c,s,0x00010001;\n\t" 
         "and.b32 s,s,0x80008000;\n\t" 
         "and.b32 t,t,0x00010001;\n\t" 
         "add.u32 r,u,v;         \n\t" 
         "add.u32 r,r,t;         \n\t" 
         "xor.b32 r,r,s;         \n\t" 
         "shr.u32 t,r,15;        \n\t" 
         "not.b32 t,t;           \n\t" 
         "and.b32 t,t,c;         \n\t" 
         "add.u32 r,r,t;         \n\t" 
         "mov.b32 %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vavgu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 7488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    c = a ^ b;           
    r = a | b;
    c = c & 0xfffefffe; 
    c = c >> 1;
    r = r - c;
#line 7496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vhaddu2(unsigned int a, unsigned int b)
{
    
    
    unsigned int r, s;
    s = a ^ b;
    r = a & b;
    s = s & 0xfffefffe; 
    s = s >> 1;
    r = r + s;
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpeq2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80008000; 
    r = r ^ c;          
    c = c - 0x00010001; 
    c = r & ~c;         

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));




#line 7535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpges2(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 7548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.ge.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.ge.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 




#line 7565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgeu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vavgu2 (a, b);  

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));





#line 7591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgts2(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 7604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.gt.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.gt.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 




#line 7621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgtu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vhaddu2 (a, b); 

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));





#line 7647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmples2(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 7660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.le.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.le.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 




#line 7677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpleu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vavgu2 (a, b);  

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));





#line 7703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmplts2(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 7716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.lt.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.lt.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 




#line 7733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpltu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vhaddu2 (a, b); 

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));





#line 7759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpne2(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 7772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80008000; 
    c = c - 0x00010001; 
    c = r | c;          

    asm ("prmt.b32 %0,%1,0,0xbb99;" : "=r"(r) : "r"(c));





#line 7786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 7787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsdiffu2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 7797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    unsigned int t, u, v;
    s = a & 0x0000ffff; 
    r = b & 0x0000ffff; 
    u = umax (r, s);    
    v = umin (r, s);    
    s = a & 0xffff0000; 
    r = b & 0xffff0000; 
    t = umax (r, s);    
    s = umin (r, s);    
    r = u | t;          
    s = v | s;          
    r = r - s;          
#line 7811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmaxs2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 7821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int t, u;
    asm ("cvt.s32.s16 %0,%1;" : "=r"(r) : "r"(a)); 
    asm ("cvt.s32.s16 %0,%1;" : "=r"(s) : "r"(b)); 
    t = max((int)r,(int)s); 
    r = a & 0xffff0000;     
    s = b & 0xffff0000;     
    u = max((int)r,(int)s); 
    r = u | (t & 0xffff);   
#line 7830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmaxu2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 7840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int t, u;
    r = a & 0x0000ffff; 
    s = b & 0x0000ffff; 
    t = umax (r, s);    
    r = a & 0xffff0000; 
    s = b & 0xffff0000; 
    u = umax (r, s);    
    r = t | u;          
#line 7849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmins2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 7859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int t, u;
    asm ("cvt.s32.s16 %0,%1;" : "=r"(r) : "r"(a)); 
    asm ("cvt.s32.s16 %0,%1;" : "=r"(s) : "r"(b)); 
    t = min((int)r,(int)s); 
    r = a & 0xffff0000;     
    s = b & 0xffff0000;     
    u = min((int)r,(int)s); 
    r = u | (t & 0xffff);   
#line 7868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vminu2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 7878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int t, u;
    r = a & 0x0000ffff; 
    s = b & 0x0000ffff; 
    t = umin (r, s);    
    r = a & 0xffff0000; 
    s = b & 0xffff0000; 
    u = umin (r, s);    
    r = t | u;          
#line 7887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vseteq2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 7897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80008000; 
    r = r ^ c;          
    c = c - 0x00010001; 
    c = r & ~c;         
    r = c >> 15;        
#line 7906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetges2(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 7916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.ge.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.ge.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 
         "and.b32        r,r,0x00010001;\n\t" 




#line 7934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgeu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 7948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vavgu2 (a, b);  
    c = c & 0x80008000; 
    r = c >> 15;        
#line 7953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgts2(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 7963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.gt.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.gt.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 
         "and.b32        r,r,0x00010001;\n\t" 




#line 7981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 7985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgtu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 7995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vhaddu2 (a, b); 
    c = c & 0x80008000; 
    r = c >> 15;        
#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetles2(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.le.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.le.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 
         "and.b32        r,r,0x00010001;\n\t" 




#line 8028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetleu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vavgu2 (a, b);  
    c = c & 0x80008000; 
    r = c >> 15;        
#line 8047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetlts2(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                             \n\t"
         ".reg .u32 a, b, r, s, t, u;   \n\t"
         "mov.b32        a,%1;          \n\t" 
         "mov.b32        b,%2;          \n\t"
         "and.b32        s,a,0xffff0000;\n\t" 
         "and.b32        t,b,0xffff0000;\n\t" 
         "set.lt.s32.s32 u,s,t;         \n\t" 
         "cvt.s32.s16    s,a;           \n\t" 
         "cvt.s32.s16    t,b;           \n\t" 
         "set.lt.s32.s32 s,s,t;         \n\t" 

         "prmt.b32       r,s,u,0x7632;  \n\t" 
         "and.b32        r,r,0x00010001;\n\t" 




#line 8075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32        %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetltu2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vhaddu2 (a, b); 
    c = c & 0x80008000; 
    r = c >> 15;        
#line 8094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetne2(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80008000; 
    c = c - 0x00010001; 
    c = r | c;          
    c = c & 0x80008000; 
    r = c >> 15;        
#line 8113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsadu2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int t, u, v;
    s = a & 0x0000ffff; 
    r = b & 0x0000ffff; 
    u = umax (r, s);    
    v = umin (r, s);    
    s = a & 0xffff0000; 
    r = b & 0xffff0000; 
    t = umax (r, s);    
    s = umin (r, s);    
    u = u - v;          
    t = t - s;          

    asm ("shr.u32 %0,%0,16;" : "+r"(t));


#line 8139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    r = t + u;          
#line 8141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsub2(unsigned int a, unsigned int b)
{
    unsigned int s, t;



#line 8151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = a ^ b;          
    t = a - b;          
    s = s ^ t;          
    s = s & 0x00010000; 
    t = t + s;          
#line 8157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return t;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsubss2 (unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    int ahi, alo, blo, bhi, rhi, rlo;
    ahi = (int)((a & 0xffff0000U));
    bhi = (int)((b & 0xffff0000U));



#line 8174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    asm ("prmt.b32 %0,%1,0,0x1044;" : "=r"(alo) : "r"(a));
    asm ("prmt.b32 %0,%1,0,0x1044;" : "=r"(blo) : "r"(b));



#line 8181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("sub.sat.s32 %0,%1,%2;" : "=r"(rlo) : "r"(alo), "r"(blo));
    asm ("sub.sat.s32 %0,%1,%2;" : "=r"(rhi) : "r"(ahi), "r"(bhi));


#line 8186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("prmt.b32 %0,%1,%2,0x7632;" : "=r"(r) : "r"(rlo), "r"(rhi));
#line 8188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsubus2 (unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    int alo, blo, rlo, ahi, bhi, rhi;
    asm ("{                              \n\t"
         "and.b32     %0, %4, 0xffff;    \n\t"
         "and.b32     %1, %5, 0xffff;    \n\t"

         "shr.u32     %2, %4, 16;        \n\t"
         "shr.u32     %3, %5, 16;        \n\t"



#line 8210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "}"
         : "=r"(alo), "=r"(blo), "=r"(ahi), "=r"(bhi) 
         : "r"(a), "r"(b));
    rlo = max ((int)(alo - blo), 0);
    rhi = max ((int)(ahi - bhi), 0);
    r = rhi * 65536 + rlo;
#line 8217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vneg2(unsigned int a)
{
    return __vsub2 (0, a);
}

static __inline__ __attribute__((always_inline)) unsigned int __vnegss2(unsigned int a)
{
    return __vsubss2(0,a);
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsdiffs2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpges2 (a, b);
    r = a ^ b;          
    s = (r & s) ^ b;    
    r = s ^ r;          
    r = __vsub2 (s, r);   
#line 8243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsads2(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vabsdiffs2 (a, b);
    r = (s >> 16) + (s & 0x0000ffff);
#line 8256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabs4(unsigned int a)
{
    unsigned int r;



#line 8266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                       \n\t"
         ".reg .u32 a,m,r;        \n\t"
         "mov.b32  a,%1;          \n\t"
         "prmt.b32 m,a,0,0xba98;  \n\t" 
         "xor.b32  r,a,m;         \n\t" 
         "and.b32  m,m,0x01010101;\n\t" 
         "add.u32  r,r,m;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a));













#line 8290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsss4(unsigned int a)
{
    unsigned int r;



#line 8300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                       \n\t"
         ".reg .u32 a,m,r;        \n\t"
         "mov.b32  a,%1;          \n\t"
         "prmt.b32 m,a,0,0xba98;  \n\t" 
         "xor.b32  r,a,m;         \n\t" 
         "and.b32  m,m,0x01010101;\n\t" 
         "add.u32  r,r,m;         \n\t" 
         "prmt.b32 m,r,0,0xba98;  \n\t" 
         "and.b32  m,m,0x01010101;\n\t" 
         "sub.u32  r,r,m;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a));
















#line 8330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vadd4(unsigned int a, unsigned int b)
{



#line 8339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int r, s, t;
    s = a ^ b;          
    r = a & 0x7f7f7f7f; 
    t = b & 0x7f7f7f7f; 
    s = s & 0x80808080; 
    r = r + t;          
    r = r ^ s;          
#line 8347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vaddss4 (unsigned int a, unsigned int b)
{



#line 8356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    































    unsigned int r;
    asm ("{                         \n\t" 
         ".reg .u32 a,b,r,s,t,u;    \n\t"
         "mov.b32  a, %1;           \n\t" 
         "mov.b32  b, %2;           \n\t"
         "and.b32  r, a, 0x7f7f7f7f;\n\t" 
         "and.b32  t, b, 0x7f7f7f7f;\n\t" 
         "xor.b32  s, a, b;         \n\t" 
         "add.u32  r, r, t;         \n\t" 
         "xor.b32  t, a, r;         \n\t" 
         "not.b32  u, s;            \n\t" 
         "and.b32  t, t, u;         \n\t" 
         "and.b32  s, s, 0x80808080;\n\t" 
         "xor.b32  r, r, s;         \n\t" 

         "prmt.b32 s,a,0,0xba98;    \n\t" 
         "xor.b32  s,s,0x7f7f7f7f;  \n\t" 
         "prmt.b32 t,t,0,0xba98;    \n\t" 
         "and.b32  s,s,t;           \n\t" 
         "not.b32  t,t;             \n\t" 
         "and.b32  r,r,t;           \n\t" 
         "or.b32   r,r,s;           \n\t" 










#line 8421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32  %0, r;           \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vaddus4 (unsigned int a, unsigned int b)
{



#line 8434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    unsigned int r;
    asm ("{                         \n\t" 
         ".reg .u32 a,b,r,s,t,m;    \n\t"
         "mov.b32  a, %1;           \n\t" 
         "mov.b32  b, %2;           \n\t"
         "or.b32   m, a, b;         \n\t" 
         "and.b32  r, a, 0x7f7f7f7f;\n\t" 
         "and.b32  t, b, 0x7f7f7f7f;\n\t" 
         "and.b32  m, m, 0x80808080;\n\t" 
         "add.u32  r, r, t;         \n\t" 
         "and.b32  t, a, b;         \n\t" 
         "or.b32   t, t, r;         \n\t" 
         "or.b32   r, r, m;         \n\t" 
         "and.b32  t, t, m;         \n\t" 

         "prmt.b32 t, t, 0, 0xba98; \n\t" 



#line 8485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "or.b32   r, r, t;         \n\t" 
         "mov.b32  %0, r;           \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vavgs4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    
    
    
    
    
    
    
    
    asm ("{                      \n\t"
         ".reg .u32 a,b,c,r,s,t,u,v;\n\t"
         "mov.b32 a,%1;          \n\t" 
         "mov.b32 b,%2;          \n\t" 
         "and.b32 u,a,0xfefefefe;\n\t" 
         "and.b32 v,b,0xfefefefe;\n\t" 
         "xor.b32 s,a,b;         \n\t" 
         "and.b32 t,a,b;         \n\t" 
         "shr.u32 u,u,1;         \n\t" 
         "shr.u32 v,v,1;         \n\t" 
         "and.b32 c,s,0x01010101;\n\t" 
         "and.b32 s,s,0x80808080;\n\t" 
         "and.b32 t,t,0x01010101;\n\t" 
         "add.u32 r,u,v;         \n\t" 
         "add.u32 r,r,t;         \n\t" 
         "xor.b32 r,r,s;         \n\t" 
         "shr.u32 t,r,7;         \n\t" 
         "not.b32 t,t;           \n\t" 
         "and.b32 t,t,c;         \n\t" 
         "add.u32 r,r,t;         \n\t" 
         "mov.b32 %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vavgu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    c = a ^ b;           
    r = a | b;
    c = c & 0xfefefefe; 
    c = c >> 1;
    r = r - c;
#line 8552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vhaddu4(unsigned int a, unsigned int b)
{
    
    
    unsigned int r, s;   
    s = a ^ b;           
    r = a & b;
    s = s & 0xfefefefe; 
    s = s >> 1;
    s = r + s;
    return s;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpeq4(unsigned int a, unsigned int b)
{
    unsigned int c, r;





#line 8577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80808080; 
    r = r ^ c;          
    c = c - 0x01010101; 
    c = r & ~c;         

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));




#line 8591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpges4(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 8604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                          \n\t"
         ".reg .u32 a, b, r, s, t, u;\n\t"
         "mov.b32     a,%1;          \n\t" 
         "mov.b32     b,%2;          \n\t"
         "xor.b32     s,a,b;         \n\t" 
         "or.b32      r,a,0x80808080;\n\t" 
         "and.b32     t,b,0x7f7f7f7f;\n\t" 
         "sub.u32     r,r,t;         \n\t" 
         "xor.b32     t,r,a;         \n\t" 
         "xor.b32     r,r,s;         \n\t" 
         "and.b32     t,t,s;         \n\t" 
         "xor.b32     t,t,r;         \n\t" 

         "prmt.b32    r,t,0,0xba98;  \n\t" 





#line 8624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32     %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgeu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 8640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vavgu4 (a, b);  

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));





#line 8650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgts4(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 8663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    asm ("{                       \n\t" 
         ".reg .u32 a,b,r,s,t,u;  \n\t"
         "mov.b32  a,%1;          \n\t" 
         "mov.b32  b,%2;          \n\t"
         "not.b32  b,b;           \n\t"
         "and.b32  r,a,0x7f7f7f7f;\n\t" 
         "and.b32  t,b,0x7f7f7f7f;\n\t" 
         "xor.b32  s,a,b;         \n\t" 
         "add.u32  r,r,t;         \n\t" 
         "xor.b32  t,a,r;         \n\t" 
         "not.b32  u,s;           \n\t" 
         "and.b32  t,t,u;         \n\t" 
         "xor.b32  r,r,u;         \n\t" 
         "xor.b32  t,t,r;         \n\t" 

         "prmt.b32 r,t,0,0xba98;  \n\t" 





#line 8686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpgtu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 8702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vhaddu4 (a, b); 

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));





#line 8712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmples4(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 8725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    asm ("{                       \n\t" 
         ".reg .u32 a,b,r,s,t,u;  \n\t"
         "mov.b32  a,%1;          \n\t" 
         "mov.b32  b,%2;          \n\t"
         "not.b32  u,b;           \n\t" 
         "and.b32  r,a,0x7f7f7f7f;\n\t" 
         "and.b32  t,u,0x7f7f7f7f;\n\t" 
         "xor.b32  u,a,b;         \n\t" 
         "add.u32  r,r,t;         \n\t" 
         "xor.b32  t,a,r;         \n\t" 
         "not.b32  s,u;           \n\t" 
         "and.b32  t,t,u;         \n\t" 
         "xor.b32  r,r,s;         \n\t" 
         "xor.b32  t,t,r;         \n\t" 

         "prmt.b32 r,t,0,0xba98;  \n\t" 





#line 8748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpleu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 8764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vavgu4 (a, b);  

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));





#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmplts4(unsigned int a, unsigned int b)
{
    unsigned int r;





#line 8787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                          \n\t"
         ".reg .u32 a, b, r, s, t, u;\n\t"
         "mov.b32     a,%1;          \n\t" 
         "mov.b32     b,%2;          \n\t"
         "not.b32     u,b;           \n\t" 
         "xor.b32     s,u,a;         \n\t" 
         "or.b32      r,a,0x80808080;\n\t" 
         "and.b32     t,b,0x7f7f7f7f;\n\t" 
         "sub.u32     r,r,t;         \n\t" 
         "xor.b32     t,r,a;         \n\t" 
         "not.b32     u,s;           \n\t" 
         "xor.b32     r,r,s;         \n\t" 
         "and.b32     t,t,u;         \n\t" 
         "xor.b32     t,t,r;         \n\t" 

         "prmt.b32    r,t,0,0xba98;  \n\t" 





#line 8809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32     %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpltu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 8825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vhaddu4 (a, b); 

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));





#line 8835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vcmpne4(unsigned int a, unsigned int b)
{
    unsigned int r, c;





#line 8848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80808080; 
    c = c - 0x01010101; 
    c = r | c;          

    asm ("prmt.b32 %0,%1,0,0xba98;" : "=r"(r) : "r"(c));





#line 8862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 8863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsdiffu4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpgeu4 (a, b);
    r = a ^ b;          
    s = (r & s) ^ b;    
    r = s ^ r;          
    r = s - r;          
#line 8879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmaxs4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpges4 (a, b);
    r = a & s;          
    s = b & ~s;         
    r = r | s;          
#line 8894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmaxu4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpgeu4 (a, b);
    r = a & s;          
    s = b & ~s;         
    r = r | s;          
#line 8909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vmins4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpges4 (b, a);
    r = a & s;          
    s = b & ~s;         
    r = r | s;          
#line 8924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vminu4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 8934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpgeu4 (b, a);
    r = a & s;          
    s = b & ~s;         
    r = r | s;          
#line 8939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}
static __inline__ __attribute__((always_inline)) unsigned int __vseteq4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80808080; 
    r = r ^ c;          
    c = c - 0x01010101; 
    c = r & ~c;         
    r = c >> 7;         
#line 8957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetles4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 8967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    asm ("{                       \n\t" 
         ".reg .u32 a,b,r,s,t,u;  \n\t"
         "mov.b32  a,%1;          \n\t" 
         "mov.b32  b,%2;          \n\t"
         "not.b32  u,b;           \n\t" 
         "and.b32  r,a,0x7f7f7f7f;\n\t" 
         "and.b32  t,u,0x7f7f7f7f;\n\t" 
         "xor.b32  u,a,b;         \n\t" 
         "add.u32  r,r,t;         \n\t" 
         "xor.b32  t,a,r;         \n\t" 
         "not.b32  s,u;           \n\t" 
         "and.b32  t,t,u;         \n\t" 
         "xor.b32  r,r,s;         \n\t" 
         "xor.b32  t,t,r;         \n\t" 
         "and.b32  t,t,0x80808080;\n\t" 
         "shr.u32  r,t,7;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 8988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetleu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 8998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vavgu4 (a, b);  
    c = c & 0x80808080; 
    r = c >> 7;         
#line 9003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetlts4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 9013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                          \n\t"
         ".reg .u32 a, b, r, s, t, u;\n\t"
         "mov.b32     a,%1;          \n\t" 
         "mov.b32     b,%2;          \n\t"
         "not.b32     u,b;           \n\t" 
         "or.b32      r,a,0x80808080;\n\t" 
         "and.b32     t,b,0x7f7f7f7f;\n\t" 
         "xor.b32     s,u,a;         \n\t" 
         "sub.u32     r,r,t;         \n\t" 
         "xor.b32     t,r,a;         \n\t" 
         "not.b32     u,s;           \n\t" 
         "xor.b32     r,r,s;         \n\t" 
         "and.b32     t,t,u;         \n\t" 
         "xor.b32     t,t,r;         \n\t" 
         "and.b32     t,t,0x80808080;\n\t" 
         "shr.u32     r,t,7;         \n\t" 
         "mov.b32     %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 9033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetltu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 9043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(a));
    c = __vhaddu4 (a, b); 
    c = c & 0x80808080; 
    r = c >> 7;         
#line 9048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetges4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 9058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("{                          \n\t"
         ".reg .u32 a, b, r, s, t, u;\n\t"
         "mov.b32     a,%1;          \n\t" 
         "mov.b32     b,%2;          \n\t"
         "xor.b32     s,a,b;         \n\t" 
         "or.b32      r,a,0x80808080;\n\t" 
         "and.b32     t,b,0x7f7f7f7f;\n\t" 
         "sub.u32     r,r,t;         \n\t" 
         "xor.b32     t,r,a;         \n\t" 
         "xor.b32     r,r,s;         \n\t" 
         "and.b32     t,t,s;         \n\t" 
         "xor.b32     t,t,r;         \n\t" 
         "and.b32     t,t,0x80808080;\n\t" 
         "shr.u32     r,t,7;         \n\t" 
         "mov.b32     %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 9076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgeu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 9086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vavgu4 (a, b);  
    c = c & 0x80808080; 
    r = c >> 7;         
#line 9091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgts4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 9101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    asm ("{                       \n\t" 
         ".reg .u32 a,b,r,s,t,u;  \n\t"
         "mov.b32  a,%1;          \n\t" 
         "mov.b32  b,%2;          \n\t"
         "not.b32  b,b;           \n\t"
         "and.b32  r,a,0x7f7f7f7f;\n\t" 
         "and.b32  t,b,0x7f7f7f7f;\n\t" 
         "xor.b32  s,a,b;         \n\t" 
         "add.u32  r,r,t;         \n\t" 
         "xor.b32  t,a,r;         \n\t" 
         "not.b32  u,s;           \n\t" 
         "and.b32  t,t,u;         \n\t" 
         "xor.b32  r,r,u;         \n\t" 
         "xor.b32  t,t,r;         \n\t" 
         "and.b32  t,t,0x80808080;\n\t" 
         "shr.u32  r,t,7;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 9122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetgtu4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 9132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    asm ("not.b32 %0,%0;" : "+r"(b));
    c = __vhaddu4 (a, b); 
    c = c & 0x80808080; 
    r = c >> 7;         
#line 9137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsetne4(unsigned int a, unsigned int b)
{
    unsigned int r, c;



#line 9147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    r = a ^ b;          
    c = r | 0x80808080; 
    c = c - 0x01010101; 
    c = r | c;          
    c = c & 0x80808080; 
    r = c >> 7;         
#line 9156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsadu4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 9166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    r = __vabsdiffu4 (a, b);
    s = r >> 8;
    r = (r & 0x00ff00ff) + (s & 0x00ff00ff);
    r = ((r << 16) + r) >> 16;
#line 9171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsub4(unsigned int a, unsigned int b)
{



#line 9180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    unsigned int r, s, t;
    s = a ^ ~b;         
    r = a | 0x80808080; 
    t = b & 0x7f7f7f7f; 
    s = s & 0x80808080; 
    r = r - t;          
    r = r ^ s;          
#line 9188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsubss4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 9198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    































    asm ("{                          \n\t"
         ".reg .u32 a,b,r,s,t,u,v,w; \n\t"
         "mov.b32     a,%1;          \n\t" 
         "mov.b32     b,%2;          \n\t"
         "not.b32     u,b;           \n\t" 
         "xor.b32     s,u,a;         \n\t" 
         "or.b32      r,a,0x80808080;\n\t" 
         "and.b32     t,b,0x7f7f7f7f;\n\t" 
         "sub.u32     r,r,t;         \n\t" 
         "xor.b32     t,r,a;         \n\t" 
         "not.b32     u,s;           \n\t" 
         "and.b32     s,s,0x80808080;\n\t" 
         "xor.b32     r,r,s;         \n\t" 
         "and.b32     t,t,u;         \n\t" 

         "prmt.b32    s,a,0,0xba98;  \n\t" 
         "xor.b32     s,s,0x7f7f7f7f;\n\t" 
         "prmt.b32    t,t,0,0xba98;  \n\t" 
         "and.b32     s,s,t;         \n\t" 
         "not.b32     t,t;           \n\t" 
         "and.b32     r,r,t;         \n\t" 
         "or.b32      r,r,s;         \n\t" 










#line 9263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "mov.b32     %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a), "r"(b));
#line 9267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsubus4(unsigned int a, unsigned int b)
{
    unsigned int r;



#line 9277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    asm ("{                       \n\t"
         ".reg .u32 a,b,r,s,t,u;  \n\t"
         "mov.b32  a,%1;          \n\t"
         "mov.b32  b,%2;          \n\t"
         "not.b32  u,b;           \n\t" 
         "xor.b32  s,u,a;         \n\t" 
         "and.b32  u,u,a;         \n\t" 
         "or.b32   r,a,0x80808080;\n\t" 
         "and.b32  t,b,0x7f7f7f7f;\n\t" 
         "sub.u32  r,r,t;         \n\t" 
         "and.b32  t,r,s;         \n\t" 
         "and.b32  s,s,0x80808080;\n\t" 
         "xor.b32  r,r,s;         \n\t" 
         "or.b32   t,t,u;         \n\t" 

         "prmt.b32 t,t,0,0xba98;  \n\t" 





#line 9324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
         "and.b32  r,r,t;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "=r"(r) : "r"(a) , "r"(b));
#line 9329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vneg4(unsigned int a)
{
    return __vsub4 (0, a);
}

static __inline__ __attribute__((always_inline)) unsigned int __vnegss4(unsigned int a)
{
    unsigned int r;



#line 9344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    r = __vsub4 (0, a);   
    asm ("{                       \n\t"
         ".reg .u32 a, r, s;      \n\t"
         "mov.b32  r,%0;          \n\t"
         "mov.b32  a,%1;          \n\t"
         "and.b32  a,a,0x80808080;\n\t" 
         "and.b32  s,a,r;         \n\t" 
         "shr.u32  s,s,7;         \n\t" 
         "sub.u32  r,r,s;         \n\t" 
         "mov.b32  %0,r;          \n\t"
         "}"
         : "+r"(r) : "r"(a));
#line 9357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vabsdiffs4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 9367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    s = __vcmpges4 (a, b);
    r = a ^ b;          
    s = (r & s) ^ b;    
    r = s ^ r;          
    r = __vsub4 (s, r);   
#line 9373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}

static __inline__ __attribute__((always_inline)) unsigned int __vsads4(unsigned int a, unsigned int b)
{
    unsigned int r, s;



#line 9383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    r = __vabsdiffs4 (a, b);
    s = r >> 8;
    r = (r & 0x00ff00ff) + (s & 0x00ff00ff);
    r = ((r << 16) + r) >> 16;
#line 9388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
    return r;           
}







#line 9398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"







#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"










































































































































































































#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"

#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
#line 9406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_12_atomic_functions.h"











































































































#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_12_atomic_functions.h"

#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_12_atomic_functions.h"
#line 9407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_13_double_functions.h"













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_13_double_functions.h"


static __inline__ __attribute__((always_inline)) double __dsub_rn(double a, double b)
{
  double res;
  asm ("sub.rn.f64 %0, %1, %2;" : "=d"(res) : "d"(a), "d"(b));
  return res;
}

static __inline__ __attribute__((always_inline)) double __dsub_rz(double a, double b)
{
  double res;
  asm ("sub.rz.f64 %0, %1, %2;" : "=d"(res) : "d"(a), "d"(b));
  return res;
}

static __inline__ __attribute__((always_inline)) double __dsub_ru(double a, double b)
{
  double res;
  asm ("sub.rp.f64 %0, %1, %2;" : "=d"(res) : "d"(a), "d"(b));
  return res;
}

static __inline__ __attribute__((always_inline)) double __dsub_rd(double a, double b)
{
  double res;
  asm ("sub.rm.f64 %0, %1, %2;" : "=d"(res) : "d"(a), "d"(b));
  return res;
}
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_13_double_functions.h"

#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_13_double_functions.h"

#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_13_double_functions.h"

#line 9408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"



















































































#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"

#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
#line 9409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_atomic_functions.h"























































































































#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_atomic_functions.h"

#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_atomic_functions.h"
#line 9410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_atomic_functions.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_atomic_functions.h"

























































































































#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_atomic_functions.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_atomic_functions.h"

#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_atomic_functions.h"
#line 9411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_intrinsics.h"































































































































































































































































































































































































































































#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_intrinsics.h"

#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_intrinsics.h"
#line 9412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_30_intrinsics.h"































































































































































#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_30_intrinsics.h"

#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_30_intrinsics.h"
#line 9413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_intrinsics.h"































































































































































#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_intrinsics.h"

#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_intrinsics.h"
#line 9414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_intrinsics.h"














































































































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_intrinsics.h"

































































































































































#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_32_intrinsics.h"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_intrinsics.h"



#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_35_intrinsics.h"

#line 9415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_functions.h"




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 4486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_functions.h"


extern uchar1     __surf1Dreadc1(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uchar2     __surf1Dreadc2(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uchar4     __surf1Dreadc4(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern ushort1    __surf1Dreads1(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern ushort2    __surf1Dreads2(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern ushort4    __surf1Dreads4(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uint1      __surf1Dreadu1(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uint2      __surf1Dreadu2(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uint4      __surf1Dreadu4(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern ulonglong1 __surf1Dreadl1(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern ulonglong2 __surf1Dreadl2(unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern uchar1     __surf2Dreadc1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar2     __surf2Dreadc2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar4     __surf2Dreadc4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort1    __surf2Dreads1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort2    __surf2Dreads2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort4    __surf2Dreads4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint1      __surf2Dreadu1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint2      __surf2Dreadu2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint4      __surf2Dreadu4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong1 __surf2Dreadl1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong2 __surf2Dreadl2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar1     __surf3Dreadc1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uchar2     __surf3Dreadc2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uchar4     __surf3Dreadc4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort1    __surf3Dreads1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort2    __surf3Dreads2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort4    __surf3Dreads4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint1      __surf3Dreadu1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint2      __surf3Dreadu2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint4      __surf3Dreadu4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong1 __surf3Dreadl1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong2 __surf3Dreadl2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uchar1     __surf1DLayeredreadc1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar2     __surf1DLayeredreadc2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar4     __surf1DLayeredreadc4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort1    __surf1DLayeredreads1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort2    __surf1DLayeredreads2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ushort4    __surf1DLayeredreads4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint1      __surf1DLayeredreadu1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint2      __surf1DLayeredreadu2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uint4      __surf1DLayeredreadu4(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong1 __surf1DLayeredreadl1(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong2 __surf1DLayeredreadl2(unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern uchar1     __surf2DLayeredreadc1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uchar2     __surf2DLayeredreadc2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uchar4     __surf2DLayeredreadc4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort1    __surf2DLayeredreads1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort2    __surf2DLayeredreads2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ushort4    __surf2DLayeredreads4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint1      __surf2DLayeredreadu1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint2      __surf2DLayeredreadu2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern uint4      __surf2DLayeredreadu4(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong1 __surf2DLayeredreadl1(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern ulonglong2 __surf2DLayeredreadl2(unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwritec1(    uchar1, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwritec2(    uchar2, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwritec4(    uchar4, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwrites1(   ushort1, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwrites2(   ushort2, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwrites4(   ushort4, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwriteu1(     uint1, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwriteu2(     uint2, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwriteu4(     uint4, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwritel1(ulonglong1, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1Dwritel2(ulonglong2, unsigned long long, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwritec1(    uchar1, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwritec2(    uchar2, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwritec4(    uchar4, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwrites1(   ushort1, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwrites2(   ushort2, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwrites4(   ushort4, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwriteu1(     uint1, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwriteu2(     uint2, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwriteu4(     uint4, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwritel1(ulonglong1, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2Dwritel2(ulonglong2, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwritec1(    uchar1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwritec2(    uchar2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwritec4(    uchar4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwrites1(   ushort1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwrites2(   ushort2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwrites4(   ushort4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwriteu1(     uint1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwriteu2(     uint2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwriteu4(     uint4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwritel1(ulonglong1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf3Dwritel2(ulonglong2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwritec1(    uchar1 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwritec2(    uchar2 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwritec4(    uchar4 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwrites1(   ushort1 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwrites2(   ushort2 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwrites4(   ushort4 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwriteu1(     uint1 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwriteu2(     uint2 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwriteu4(     uint4 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwritel1(ulonglong1 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf1DLayeredwritel2(ulonglong2 val, unsigned long long, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwritec1(    uchar1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwritec2(    uchar2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwritec4(    uchar4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwrites1(   ushort1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwrites2(   ushort2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwrites4(   ushort4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwriteu1(     uint1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwriteu2(     uint2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwriteu4(     uint4 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwritel1(ulonglong1 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);
extern void       __surf2DLayeredwritel2(ulonglong2 val, unsigned long long, int, int, int, enum cudaSurfaceBoundaryMode);















































































































#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_functions.h"
















































#line 4759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_functions.h"

#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_functions.h"

#line 9416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"


extern  uint4 __utexfetchi1D(unsigned long long, int4);
extern   int4 __itexfetchi1D(unsigned long long, int4);
extern float4 __ftexfetchi1D(unsigned long long, int4);
extern  uint4 __utexfetch1D(unsigned long long, float4);
extern   int4 __itexfetch1D(unsigned long long, float4);
extern float4 __ftexfetch1D(unsigned long long, float4);
extern  uint4 __utexfetch2D(unsigned long long, float4);
extern   int4 __itexfetch2D(unsigned long long, float4);
extern float4 __ftexfetch2D(unsigned long long, float4);
extern  uint4 __utexfetch3D(unsigned long long, float4);
extern   int4 __itexfetch3D(unsigned long long, float4);
extern float4 __ftexfetch3D(unsigned long long, float4);
extern  uint4 __utexfetchcube(unsigned long long, float4);
extern   int4 __itexfetchcube(unsigned long long, float4);
extern float4 __ftexfetchcube(unsigned long long, float4);
extern  uint4 __utexfetchl1D(unsigned long long, float4, int);
extern   int4 __itexfetchl1D(unsigned long long, float4, int);
extern float4 __ftexfetchl1D(unsigned long long, float4, int);
extern  uint4 __utexfetchl2D(unsigned long long, float4, int);
extern   int4 __itexfetchl2D(unsigned long long, float4, int);
extern float4 __ftexfetchl2D(unsigned long long, float4, int);
extern  uint4 __utexfetchlcube(unsigned long long, float4, int);
extern   int4 __itexfetchlcube(unsigned long long, float4, int);
extern float4 __ftexfetchlcube(unsigned long long, float4, int);

























#line 3741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"
































#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 9529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"


extern  uint4 __utex2Dgather0(unsigned long long, float2);
extern  uint4 __utex2Dgather1(unsigned long long, float2);
extern  uint4 __utex2Dgather2(unsigned long long, float2);
extern  uint4 __utex2Dgather3(unsigned long long, float2);
extern   int4 __itex2Dgather0(unsigned long long, float2);
extern   int4 __itex2Dgather1(unsigned long long, float2);
extern   int4 __itex2Dgather2(unsigned long long, float2);
extern   int4 __itex2Dgather3(unsigned long long, float2);
extern float4 __ftex2Dgather0(unsigned long long, float2);
extern float4 __ftex2Dgather1(unsigned long long, float2);
extern float4 __ftex2Dgather2(unsigned long long, float2);
extern float4 __ftex2Dgather3(unsigned long long, float2);

extern  uint4 __utexfetchlod1D(unsigned long long, float4, float);
extern   int4 __itexfetchlod1D(unsigned long long, float4, float);
extern float4 __ftexfetchlod1D(unsigned long long, float4, float);
extern  uint4 __utexfetchlod2D(unsigned long long, float4, float);
extern   int4 __itexfetchlod2D(unsigned long long, float4, float);
extern float4 __ftexfetchlod2D(unsigned long long, float4, float);
extern  uint4 __utexfetchlod3D(unsigned long long, float4, float);
extern   int4 __itexfetchlod3D(unsigned long long, float4, float);
extern float4 __ftexfetchlod3D(unsigned long long, float4, float);
extern  uint4 __utexfetchlodcube(unsigned long long, float4, float);
extern   int4 __itexfetchlodcube(unsigned long long, float4, float);
extern float4 __ftexfetchlodcube(unsigned long long, float4, float);
extern  uint4 __utexfetchlodl1D(unsigned long long, float4, int, float);
extern   int4 __itexfetchlodl1D(unsigned long long, float4, int, float);
extern float4 __ftexfetchlodl1D(unsigned long long, float4, int, float);
extern  uint4 __utexfetchlodl2D(unsigned long long, float4, int, float);
extern   int4 __itexfetchlodl2D(unsigned long long, float4, int, float);
extern float4 __ftexfetchlodl2D(unsigned long long, float4, int, float);
extern  uint4 __utexfetchlodlcube(unsigned long long, float4, int, float);
extern   int4 __itexfetchlodlcube(unsigned long long, float4, int, float);
extern float4 __ftexfetchlodlcube(unsigned long long, float4, int, float);

extern  uint4 __utexfetchgrad1D(unsigned long long, float4, float4, float4);
extern   int4 __itexfetchgrad1D(unsigned long long, float4, float4, float4);
extern float4 __ftexfetchgrad1D(unsigned long long, float4, float4, float4);
extern  uint4 __utexfetchgrad2D(unsigned long long, float4, float4, float4);
extern   int4 __itexfetchgrad2D(unsigned long long, float4, float4, float4);
extern float4 __ftexfetchgrad2D(unsigned long long, float4, float4, float4);
extern  uint4 __utexfetchgrad3D(unsigned long long, float4, float4, float4);
extern   int4 __itexfetchgrad3D(unsigned long long, float4, float4, float4);
extern float4 __ftexfetchgrad3D(unsigned long long, float4, float4, float4);
extern  uint4 __utexfetchgradl1D(unsigned long long, float4, int, float4, float4);
extern   int4 __itexfetchgradl1D(unsigned long long, float4, int, float4, float4);
extern float4 __ftexfetchgradl1D(unsigned long long, float4, int, float4, float4);
extern  uint4 __utexfetchgradl2D(unsigned long long, float4, int, float4, float4);
extern   int4 __itexfetchgradl2D(unsigned long long, float4, int, float4, float4);
extern float4 __ftexfetchgradl2D(unsigned long long, float4, int, float4, float4);














#line 9596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"














































#line 9643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"

#line 9645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_fetch_functions.h"


#line 9417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_indirect_functions.h"







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 7017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_indirect_functions.h"

#line 7019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\texture_indirect_functions.h"



#line 9418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_indirect_functions.h"











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 7277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_indirect_functions.h"

#line 7279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\surface_indirect_functions.h"



#line 9419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"

#line 9421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"

#line 8486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"















static __inline__ __attribute__((always_inline)) float rintf(float a)
{
  return __nv_rintf(a);
}

static __inline__ __attribute__((always_inline)) long int lrintf(float a)
{


#line 8511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return (long int)__float2int_rn(a);
#line 8513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) long long int llrintf(float a)
{
  return __nv_llrintf(a);
}

static __inline__ __attribute__((always_inline)) float nearbyintf(float a)
{
  return __nv_nearbyintf(a);
}







static __inline__ __attribute__((always_inline)) int __signbitf(float a)
{
  return __nv_signbitf(a);
}




static __inline__ __attribute__((always_inline)) float copysignf(float a, float b)
{
  return __nv_copysignf(a, b);
}

static __inline__ __attribute__((always_inline)) int __finitef(float a)
{
  return __nv_finitef(a);
}








#line 8557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

static __inline__ __attribute__((always_inline)) int __isinff(float a)
{
  return __nv_isinff(a);
}

static __inline__ __attribute__((always_inline)) int __isnanf(float a)
{
  return __nv_isnanf(a);
}

static __inline__ __attribute__((always_inline)) float nextafterf(float a, float b)
{
  return __nv_nextafterf(a, b);
}

static __inline__ __attribute__((always_inline)) float nanf(const char *tagp)
{
  return __nv_nanf((const signed char *) tagp);
}







static __inline__ __attribute__((always_inline)) float sinf(float a)
{


#line 8589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_sinf(a);
#line 8591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float cosf(float a)
{


#line 8598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_cosf(a);
#line 8600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) void sincosf(float a, float *sptr, float *cptr)
{


#line 8607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  __nv_sincosf(a, sptr, cptr);
#line 8609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float sinpif(float a)
{
  return __nv_sinpif(a);
}

static __inline__ __attribute__((always_inline)) float cospif(float a)
{
  return __nv_cospif(a);
}

static __inline__ __attribute__((always_inline)) void sincospif(float a, float *sptr, float *cptr)
{
  __nv_sincospif(a, sptr, cptr);
}

static __inline__ __attribute__((always_inline)) float tanf(float a)
{


#line 8631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_tanf(a);
#line 8633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float log2f(float a)
{


#line 8640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_log2f(a);
#line 8642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float expf(float a)
{


#line 8649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_expf(a);
#line 8651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float exp10f(float a)
{


#line 8658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_exp10f(a);
#line 8660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float coshf(float a)
{
  return __nv_coshf(a);
}

static __inline__ __attribute__((always_inline)) float sinhf(float a)
{
  return __nv_sinhf(a);
}

static __inline__ __attribute__((always_inline)) float tanhf(float a)
{
  return __nv_tanhf(a);
}

static __inline__ __attribute__((always_inline)) float atan2f(float a, float b)
{
  return __nv_atan2f(a, b);
}

static __inline__ __attribute__((always_inline)) float atanf(float a)
{
  return __nv_atanf(a);
}

static __inline__ __attribute__((always_inline)) float asinf(float a)
{
  return __nv_asinf(a);
}

static __inline__ __attribute__((always_inline)) float acosf(float a)
{
  return __nv_acosf(a);
}

static __inline__ __attribute__((always_inline)) float logf(float a)
{


#line 8702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_logf(a);
#line 8704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float log10f(float a)
{


#line 8711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_log10f(a);
#line 8713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float log1pf(float a)
{
  return __nv_log1pf(a);
}

static __inline__ __attribute__((always_inline)) float acoshf(float a)
{
  return __nv_acoshf(a);
}

static __inline__ __attribute__((always_inline)) float asinhf(float a)
{
  return __nv_asinhf(a);
}

static __inline__ __attribute__((always_inline)) float atanhf(float a)
{
  return __nv_atanhf(a);
}

static __inline__ __attribute__((always_inline)) float expm1f(float a)
{
  return __nv_expm1f(a);
}

static __inline__ __attribute__((always_inline)) float hypotf(float a, float b)
{
  return __nv_hypotf(a, b);
}

static __inline__ __attribute__((always_inline)) float rhypotf(float a, float b)
{
  return __nv_rhypotf(a, b);
}
static __inline__ __attribute__((always_inline)) float cbrtf(float a)
{
  return __nv_cbrtf(a);
}

static __inline__ __attribute__((always_inline)) float rcbrtf(float a)
{
  return __nv_rcbrtf(a);
}

static __inline__ __attribute__((always_inline)) float j0f(float a)
{
  return __nv_j0f(a);
}

static __inline__ __attribute__((always_inline)) float j1f(float a)
{
  return __nv_j1f(a);
}

static __inline__ __attribute__((always_inline)) float y0f(float a)
{
  return __nv_y0f(a);
}

static __inline__ __attribute__((always_inline)) float y1f(float a)
{
  return __nv_y1f(a);
}

static __inline__ __attribute__((always_inline)) float ynf(int n, float a)
{
  return __nv_ynf(n, a);
}

static __inline__ __attribute__((always_inline)) float jnf(int n, float a)
{
  return __nv_jnf(n, a);
}

static __inline__ __attribute__((always_inline)) float cyl_bessel_i0f(float a)
{
  return __nv_cyl_bessel_i0f(a);
}

static __inline__ __attribute__((always_inline)) float cyl_bessel_i1f(float a)
{
  return __nv_cyl_bessel_i1f(a);
}

static __inline__ __attribute__((always_inline)) float erff(float a)
{
  return __nv_erff(a);
}

















 
static __inline__ __attribute__((always_inline)) float erfinvf(float a)
{
  return __nv_erfinvf(a);
}

static __inline__ __attribute__((always_inline)) float erfcf(float a)
{
  return __nv_erfcf(a);
}

static __inline__ __attribute__((always_inline)) float erfcxf(float a)
{
  return __nv_erfcxf(a);
}

static __inline__ __attribute__((always_inline)) float erfcinvf(float a)
{
  return __nv_erfcinvf(a);
}

static __inline__ __attribute__((always_inline)) float normcdfinvf(float a)
{
  return __nv_normcdfinvf(a);
}





static __inline__ __attribute__((always_inline)) float normcdff(float a)
{
  return __nv_normcdff(a);
}

static __inline__ __attribute__((always_inline)) float lgammaf(float a)
{
  return __nv_lgammaf(a);
}

static __inline__ __attribute__((always_inline)) float ldexpf(float a, int b)
{
  return __nv_ldexpf(a, b);
}

static __inline__ __attribute__((always_inline)) float scalbnf(float a, int b)
{
  return __nv_scalbnf(a, b);
}

static __inline__ __attribute__((always_inline)) float scalblnf(float a, long int b)
{
  int t;
  if (b > 2147483647L) {
    t = 2147483647;
  } else if (b < (-2147483647 - 1)) {
    t = (-2147483647 - 1);
  } else {
    t = (int)b;
  }
  return scalbnf(a, t);
}

static __inline__ __attribute__((always_inline)) float frexpf(float a, int *b)
{
  return __nv_frexpf(a, b);
}

static __inline__ __attribute__((always_inline)) float modff(float a, float *b)
{
  return __nv_modff(a, b);
}

static __inline__ __attribute__((always_inline)) float fmodf(float a, float b)
{
  return __nv_fmodf(a, b);
}

static __inline__ __attribute__((always_inline)) float remainderf(float a, float b)
{
  return __nv_remainderf(a, b);
}

static __inline__ __attribute__((always_inline)) float remquof(float a, float b, int* quo)
{
  return __nv_remquof(a, b, quo);
}

static __inline__ __attribute__((always_inline)) float fmaf(float a, float b, float c)
{
  return __nv_fmaf(a, b, c);
}

static __inline__ __attribute__((always_inline)) float powif(float a, int b)
{
  return __nv_powif(a, b);
}

static __inline__ __attribute__((always_inline)) double powi(double a, int b)
{
  return __nv_powi(a, b);
}

static __inline__ __attribute__((always_inline)) float powf(float a, float b)
{


#line 8928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return __nv_powf(a, b);
#line 8930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}





static __inline__ __attribute__((always_inline)) float tgammaf(float a)
{
  return __nv_tgammaf(a);
}

static __inline__ __attribute__((always_inline)) float roundf(float a)
{
  return __nv_roundf(a);
}

static __inline__ __attribute__((always_inline)) long long int llroundf(float a)
{
  return __nv_llroundf(a);
}

static __inline__ __attribute__((always_inline)) long int lroundf(float a)
{


#line 8956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
  return (long int)(roundf(a));
#line 8958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"
}

static __inline__ __attribute__((always_inline)) float fdimf(float a, float b)
{
  return __nv_fdimf(a, b);
}

static __inline__ __attribute__((always_inline)) int ilogbf(float a)
{
  return __nv_ilogbf(a);
}

static __inline__ __attribute__((always_inline)) float logbf(float a)
{
  return __nv_logbf(a);
}



























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 11818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 14053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 14055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"





#line 14061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"





#line 14067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"



#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
































































static __inline__ __attribute__((always_inline)) double rint(double a)
{
  return __nv_rint(a);
}

static __inline__ __attribute__((always_inline)) long int lrint(double a)
{


#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
  return (long int)__double2int_rn(a);
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
}

static __inline__ __attribute__((always_inline)) long long int llrint(double a)
{
  return __nv_llrint(a);
}

static __inline__ __attribute__((always_inline)) double nearbyint(double a)
{
  return __nv_nearbyint(a);
}







static __inline__ __attribute__((always_inline)) int __signbitd(double a)
{
  return __nv_signbitd(a);
}

static __inline__ __attribute__((always_inline)) int __isfinited(double a)
{
  return __nv_isfinited(a);
}

static __inline__ __attribute__((always_inline)) int __isinfd(double a)
{
  return __nv_isinfd(a);
}

static __inline__ __attribute__((always_inline)) int __isnand(double a)
{
  return __nv_isnand(a);
}























#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"

static __inline__ __attribute__((always_inline)) int __signbit(double a)
{
  return __signbitd(a);
}

static __inline__ __attribute__((always_inline)) int __signbitl(double a)
{
  return __signbit((double)a);
}

static __inline__ __attribute__((always_inline)) int __finite(double a)
{
  return __isfinited(a);
}

static __inline__ __attribute__((always_inline)) int __finitel(double a)
{
  return __finite((double)a);
}

static __inline__ __attribute__((always_inline)) int __isinf(double a)
{
  return __isinfd(a);
}

static __inline__ __attribute__((always_inline)) int __isinfl(double a)
{
  return __isinf((double)a);
}

static __inline__ __attribute__((always_inline)) int __isnan(double a)
{
  return __isnand(a);
}

static __inline__ __attribute__((always_inline)) int __isnanl(double a)
{
  return __isnan((double)a);
}

#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"

static __inline__ __attribute__((always_inline)) double copysign(double a, double b)
{
  return __nv_copysign(a, b);
}

static __inline__ __attribute__((always_inline)) void sincos(double a, double *sptr, double *cptr)
{
  __nv_sincos(a, sptr, cptr);
}

static __inline__ __attribute__((always_inline)) void sincospi(double a, double *sptr, double *cptr)
{
  __nv_sincospi(a, sptr, cptr);
}

static __inline__ __attribute__((always_inline)) double sin(double a)
{
  return __nv_sin(a);
}

static __inline__ __attribute__((always_inline)) double cos(double a)
{
  return __nv_cos(a);
}

static __inline__ __attribute__((always_inline)) double sinpi(double a)
{
  return __nv_sinpi(a);
}

static __inline__ __attribute__((always_inline)) double cospi(double a)
{
  return __nv_cospi(a);
}

static __inline__ __attribute__((always_inline)) double tan(double a)
{
  return __nv_tan(a);
}

static __inline__ __attribute__((always_inline)) double log(double a)
{
  return __nv_log(a);
}

static __inline__ __attribute__((always_inline)) double log2(double a)
{
  return __nv_log2(a);
}

static __inline__ __attribute__((always_inline)) double log10(double a)
{
  return __nv_log10(a);
}

static __inline__ __attribute__((always_inline)) double log1p(double a)
{
  return __nv_log1p(a);
}

static __inline__ __attribute__((always_inline)) double exp(double a)
{
  return __nv_exp(a);
}

static __inline__ __attribute__((always_inline)) double exp2(double a)
{
  return __nv_exp2(a);
}

static __inline__ __attribute__((always_inline)) double exp10(double a)
{
  return __nv_exp10(a);
}

static __inline__ __attribute__((always_inline)) double expm1(double a)
{
  return __nv_expm1(a);
}

static __inline__ __attribute__((always_inline)) double cosh(double a)
{
  return __nv_cosh(a);
}

static __inline__ __attribute__((always_inline)) double sinh(double a)
{
  return __nv_sinh(a);
}

static __inline__ __attribute__((always_inline)) double tanh(double a)
{
  return __nv_tanh(a);
}

static __inline__ __attribute__((always_inline)) double atan2(double a, double b)
{
  return __nv_atan2(a, b);
}

static __inline__ __attribute__((always_inline)) double atan(double a)
{
  return __nv_atan(a);
}

static __inline__ __attribute__((always_inline)) double asin(double a)
{
  return __nv_asin(a);
}

static __inline__ __attribute__((always_inline)) double acos(double a)
{
  return __nv_acos(a);
}

static __inline__ __attribute__((always_inline)) double acosh(double a)
{
  return __nv_acosh(a);
}

static __inline__ __attribute__((always_inline)) double asinh(double a)
{
  return __nv_asinh(a);  
}

static __inline__ __attribute__((always_inline)) double atanh(double a)
{
  return __nv_atanh(a);
}

static __inline__ __attribute__((always_inline)) double hypot(double a, double b)
{
  return __nv_hypot(a, b);
}

static __inline__ __attribute__((always_inline)) double rhypot(double a, double b)
{
  return __nv_rhypot(a, b);
}

static __inline__ __attribute__((always_inline)) double cbrt(double a)
{
  return __nv_cbrt(a);
}

static __inline__ __attribute__((always_inline)) double rcbrt(double a)
{
  return __nv_rcbrt(a);
}

static __inline__ __attribute__((always_inline)) double pow(double a, double b)
{
  return __nv_pow(a, b);
}

static __inline__ __attribute__((always_inline)) double j0(double a)
{
  return __nv_j0(a);
}

static __inline__ __attribute__((always_inline)) double j1(double a)
{
  return __nv_j1(a);
}

static __inline__ __attribute__((always_inline)) double y0(double a)
{
  return __nv_y0(a);
}

static __inline__ __attribute__((always_inline)) double y1(double a)
{
  return __nv_y1(a);
}





static __inline__ __attribute__((always_inline)) double yn(int n, double a)
{
  return __nv_yn(n, a);
}








static __inline__ __attribute__((always_inline)) double jn(int n, double a)
{
  return __nv_jn(n, a);
}

static __inline__ __attribute__((always_inline)) double cyl_bessel_i0(double a)
{
  return __nv_cyl_bessel_i0(a);
}

static __inline__ __attribute__((always_inline)) double cyl_bessel_i1(double a)
{
  return __nv_cyl_bessel_i1(a);
}

static __inline__ __attribute__((always_inline)) double erf(double a)
{
  return __nv_erf(a);
}






static __inline__ __attribute__((always_inline)) double erfinv(double a)
{
  return __nv_erfinv(a);
}

static __inline__ __attribute__((always_inline)) double erfcinv(double a)
{
  return __nv_erfcinv(a);
}

static __inline__ __attribute__((always_inline)) double normcdfinv(double a)
{
  return __nv_normcdfinv(a);
}

static __inline__ __attribute__((always_inline)) double erfc(double a)  
{  
  return __nv_erfc(a);
}

static __inline__ __attribute__((always_inline)) double erfcx(double a)  
{
  return __nv_erfcx(a);
}





static __inline__ __attribute__((always_inline)) double normcdf(double a)
{
  return __nv_normcdf(a);
}

static __inline__ __attribute__((always_inline)) double tgamma(double a)
{
  return __nv_tgamma(a);
}

static __inline__ __attribute__((always_inline)) double lgamma(double a)
{
  return __nv_lgamma(a);
}

static __inline__ __attribute__((always_inline)) double ldexp(double a, int b)
{
  return __nv_ldexp(a, b);
}

static __inline__ __attribute__((always_inline)) double scalbn(double a, int b)
{
  return __nv_scalbn(a, b);
}

static __inline__ __attribute__((always_inline)) double scalbln(double a, long int b)
{




#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
  return scalbn(a, (int)b);
}

static __inline__ __attribute__((always_inline)) double frexp(double a, int *b)
{
  return __nv_frexp(a, b);  
}

static __inline__ __attribute__((always_inline)) double modf(double a, double *b)
{
  return __nv_modf(a, b);
}

static __inline__ __attribute__((always_inline)) double fmod(double a, double b)
{
  return __nv_fmod(a, b);
}

static __inline__ __attribute__((always_inline)) double remainder(double a, double b)
{
  return __nv_remainder(a, b);
}

static __inline__ __attribute__((always_inline)) double remquo(double a, double b, int *c)
{
  return __nv_remquo(a, b, c);
}

static __inline__ __attribute__((always_inline)) double nextafter(double a, double b)
{
  return __nv_nextafter(a, b);
}

static __inline__ __attribute__((always_inline)) double nan(const char *tagp)
{
  return __nv_nan((const signed char *) tagp);
}

static __inline__ __attribute__((always_inline)) double round(double a)
{
  return __nv_round(a);
}

static __inline__ __attribute__((always_inline)) long long int llround(double a)
{
  return __nv_llround(a);
}

static __inline__ __attribute__((always_inline)) long int lround(double a)
{


#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
  return (long int)round(a);
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"
}

static __inline__ __attribute__((always_inline)) double fdim(double a, double b)
{
  return __nv_fdim(a, b);
}

static __inline__ __attribute__((always_inline)) int ilogb(double a)
{
  return __nv_ilogb(a);
}

static __inline__ __attribute__((always_inline)) double logb(double a)
{
  return __nv_logb(a);
}

static __inline__ __attribute__((always_inline)) double fma(double a, double b, double c)
{
  return __nv_fma(a, b, c);
}



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"

#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"

#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions_dbl_ptx3.h"

#line 14071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 14073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 14075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\math_functions.h"

#line 168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\common_functions.h"

#line 170 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v6.0\\include\\common_functions.h"

#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt9bad_alloc[5] = {0LL,0LL,0LL,0LL,0LL};
#line 3285 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt13runtime_error[5] = {0LL,0LL,0LL,0LL,0LL};
#line 3286 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVNSt6locale5facetE[4] = {0LL,0LL,0LL,0LL};
#line 3287 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt12system_error[5] = {0LL,0LL,0LL,0LL,0LL};
#line 3288 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVNSt8ios_base7failureE[5] = {0LL,0LL,0LL,0LL,0LL};
#line 3289 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt14basic_ofstreamIcSt11char_traitsIcEE[10] = {168LL,0LL,0LL,0LL,0LL,(-168LL),(-168LL),0LL,0LL,0LL};
#line 3290 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt14basic_ifstreamIcSt11char_traitsIcEE[10] = {176LL,0LL,0LL,0LL,0LL,(-176LL),(-176LL),0LL,0LL,0LL};
#line 3291 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long _ZTVSt13basic_filebufIcSt11char_traitsIcEE[18] = {0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL,0LL};
#line 3292 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long *const _ZTTSt14basic_ofstreamIcSt11char_traitsIcEE[4] = {(_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 3),(_ZTVSo__St14basic_ofstreamIcSt11char_traitsIcEE + 3),(_ZTVSt9basic_iosIcSt11char_traitsIcEE__So__St14basic_ofstreamIcS1_E + 3),(_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 8)};
#line 3293 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
static  __attribute__((device))  __attribute__((__used__)) const long long *const _ZTTSt14basic_ifstreamIcSt11char_traitsIcEE[4] = {(_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 3),(_ZTVSi__St14basic_ifstreamIcSt11char_traitsIcEE + 3),(_ZTVSt9basic_iosIcSt11char_traitsIcEE__Si__St14basic_ifstreamIcS1_E + 3),(_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE + 8)};

#line 3296 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3298 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3300 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3302 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3304 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3306 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3308 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3312 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3314 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3316 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3318 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3320 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3322 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3326 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3328 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3330 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3332 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"

#line 3334 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 __inline__ double _Z8_Pow_intIdET_S0_i(
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
double _X, 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
int _Y){
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 unsigned __cuda_local_var_78640_23_non_const__N;
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if (_Y >= 0)
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
__cuda_local_var_78640_23_non_const__N = ((unsigned)_Y);
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
else 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
__cuda_local_var_78640_23_non_const__N = ((unsigned)(-_Y));
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 double _Z;
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
_Z = (1.0);
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
for (; ; _X *= _X)
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if ((__cuda_local_var_78640_23_non_const__N & 1U) != 0U)
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
_Z *= _X;
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if ((__cuda_local_var_78640_23_non_const__N >>= 1) == 0U)
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
return (_Y < 0) ? ((1.0) / _Z) : _Z;
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}}
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 __inline__ float _Z8_Pow_intIfET_S0_i(
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
float _X, 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
int _Y){
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 unsigned __cuda_local_var_78640_23_non_const__N;
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if (_Y >= 0)
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
__cuda_local_var_78640_23_non_const__N = ((unsigned)_Y);
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
else 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
__cuda_local_var_78640_23_non_const__N = ((unsigned)(-_Y));
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
 float _Z;
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
_Z = (1.0F);
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
for (; ; _X *= _X)
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if ((__cuda_local_var_78640_23_non_const__N & 1U) != 0U)
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
_Z *= _X;
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
if ((__cuda_local_var_78640_23_non_const__N >>= 1) == 0U)
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
{
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
return (_Y < 0) ? ((1.0F) / _Z) : _Z;
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\include\\math.h"
}}
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
static  __inline__ int _ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii(
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
int *address, 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
int val){
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
{
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
{
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
return __iAtomicAdd(address, val);
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
}
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_11_atomic_functions.h"
}}
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
static  __inline__ float _ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff(
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
float *address, 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
float val){
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
{
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
{
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
return __fAtomicAdd(address, val);
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
}
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\sm_20_atomic_functions.h"
}}
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool _Z20calculate_interceptsdddRdS_(
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double u, 
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double t, 
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double ut_angle, 
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double *u_intercept, 
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double *t_intercept){
#line 1209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1210 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1241 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_366691_7_non_const_entry_in_cone;
#line 1245 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366695_9_non_const_u_temp;
#line 1253 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366703_9_non_const_m;
#line 1254 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366704_9_non_const_b_in;
#line 1257 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366707_9_non_const_a;
#line 1258 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366708_9_non_const_b;
#line 1259 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366709_9_non_const_c;
#line 1260 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366710_9_non_const_entry_discriminant;
#line 1261 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_366711_7_non_const_intersected;
#line 1241 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366691_7_non_const_entry_in_cone = ((__nv_bool)(((ut_angle > (atan((1.0)))) && (ut_angle < ((3.0) * (atan((1.0)))))) || ((ut_angle > ((5.0) * (atan((1.0))))) && (ut_angle < ((7.0) * (atan((1.0))))))));
#line 1246 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366691_7_non_const_entry_in_cone)
#line 1247 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1248 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366695_9_non_const_u_temp = u;
#line 1249 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
u = (-t);
#line 1250 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
t = __cuda_local_var_366695_9_non_const_u_temp;
#line 1251 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
ut_angle += ((2.0) * (atan((1.0))));
#line 1252 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1253 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366703_9_non_const_m = (tan(ut_angle));
#line 1254 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366704_9_non_const_b_in = (t - (__cuda_local_var_366703_9_non_const_m * u));
#line 1257 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366707_9_non_const_a = ((1.0) + (_Z8_Pow_intIdET_S0_i(__cuda_local_var_366703_9_non_const_m, 2)));
#line 1258 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366708_9_non_const_b = (((2.0) * __cuda_local_var_366703_9_non_const_m) * __cuda_local_var_366704_9_non_const_b_in);
#line 1259 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366709_9_non_const_c = ((_Z8_Pow_intIdET_S0_i(__cuda_local_var_366704_9_non_const_b_in, 2)) - (_Z8_Pow_intIdET_S0_i((8.0), 2)));
#line 1260 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366710_9_non_const_entry_discriminant = ((_Z8_Pow_intIdET_S0_i(__cuda_local_var_366708_9_non_const_b, 2)) - (((4.0) * __cuda_local_var_366707_9_non_const_a) * __cuda_local_var_366709_9_non_const_c));
#line 1261 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366711_7_non_const_intersected = ((__nv_bool)(__cuda_local_var_366710_9_non_const_entry_discriminant > (0.0)));
#line 1274 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366711_7_non_const_intersected)
#line 1275 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1275 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T228;
#line 1276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T229;
#line 1277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T230;
#line 1278 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T231;
#line 1276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366726_10_non_const_u_intercept_1;
#line 1277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366727_10_non_const_u_intercept_2;
#line 1278 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366728_10_non_const_t_intercept_1;
#line 1279 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366729_10_non_const_t_intercept_2;
#line 1280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366730_10_non_const_squared_distance_1;
#line 1281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366731_10_non_const_squared_distance_2;
#line 1276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366726_10_non_const_u_intercept_1 = ((double)(fdivide(((sqrt(__cuda_local_var_366710_9_non_const_entry_discriminant)) - __cuda_local_var_366708_9_non_const_b), ((2.0) * __cuda_local_var_366707_9_non_const_a))));
#line 1277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366727_10_non_const_u_intercept_2 = ((double)(fdivide(((sqrt(__cuda_local_var_366710_9_non_const_entry_discriminant)) + __cuda_local_var_366708_9_non_const_b), ((2.0) * __cuda_local_var_366707_9_non_const_a))));
#line 1278 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366728_10_non_const_t_intercept_1 = ((__cuda_local_var_366703_9_non_const_m * __cuda_local_var_366726_10_non_const_u_intercept_1) + __cuda_local_var_366704_9_non_const_b_in);
#line 1279 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366729_10_non_const_t_intercept_2 = ((__cuda_local_var_366703_9_non_const_m * __cuda_local_var_366727_10_non_const_u_intercept_2) - __cuda_local_var_366704_9_non_const_b_in);
#line 1280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366730_10_non_const_squared_distance_1 = (((__T228 = (__cuda_local_var_366726_10_non_const_u_intercept_1 - u)) , (_Z8_Pow_intIdET_S0_i(__T228, 2))) + ((__T229 = (__cuda_local_var_366728_10_non_const_t_intercept_1 - t)) , (_Z8_Pow_intIdET_S0_i(__T229, 2))));
#line 1281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366731_10_non_const_squared_distance_2 = (((__T230 = (__cuda_local_var_366727_10_non_const_u_intercept_2 + u)) , (_Z8_Pow_intIdET_S0_i(__T230, 2))) + ((__T231 = (__cuda_local_var_366729_10_non_const_t_intercept_2 + t)) , (_Z8_Pow_intIdET_S0_i(__T231, 2))));
#line 1282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*u_intercept) = ((__cuda_local_var_366726_10_non_const_u_intercept_1 * ((double)(__cuda_local_var_366730_10_non_const_squared_distance_1 <= __cuda_local_var_366731_10_non_const_squared_distance_2))) - (__cuda_local_var_366727_10_non_const_u_intercept_2 * ((double)(__cuda_local_var_366730_10_non_const_squared_distance_1 > __cuda_local_var_366731_10_non_const_squared_distance_2))));
#line 1283 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*t_intercept) = ((__cuda_local_var_366728_10_non_const_t_intercept_1 * ((double)(__cuda_local_var_366730_10_non_const_squared_distance_1 <= __cuda_local_var_366731_10_non_const_squared_distance_2))) - (__cuda_local_var_366729_10_non_const_t_intercept_2 * ((double)(__cuda_local_var_366730_10_non_const_squared_distance_1 > __cuda_local_var_366731_10_non_const_squared_distance_2))));
#line 1284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1286 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366691_7_non_const_entry_in_cone)
#line 1287 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1288 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366695_9_non_const_u_temp = (*u_intercept);
#line 1289 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*u_intercept) = (*t_intercept);
#line 1290 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*t_intercept) = (-__cuda_local_var_366695_9_non_const_u_temp);
#line 1291 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
ut_angle -= ((2.0) * (atan((1.0))));
#line 1292 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1294 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
return __cuda_local_var_366711_7_non_const_intersected;
#line 1295 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1295 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 void _Z14voxel_walk_GPURPbffffff(
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool **image, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float x_entry, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float y_entry, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float z_entry, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float x_exit, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float y_exit, 
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float z_exit){
#line 2140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2141 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2141 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T260;
#line 2142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T261;
#line 2143 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T262;
#line 2145 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367595_6_non_const_x_move_direction;
#line 2145 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2145 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367595_42_non_const_z_move_direction;
#line 2146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367596_8_non_const_delta_yx;
#line 2146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367596_18_non_const_delta_zx;
#line 2146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367596_28_non_const_delta_zy;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367601_8_non_const_x;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367601_21_non_const_y;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367601_34_non_const_z;
#line 2152 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367602_8_non_const_x_to_go;
#line 2152 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367602_17_non_const_y_to_go;
#line 2152 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367602_26_non_const_z_to_go;
#line 2153 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367603_8_non_const_x_extension;
#line 2153 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367603_21_non_const_y_extension;
#line 2154 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367604_6_non_const_voxel_x;
#line 2154 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367604_15_non_const_voxel_y;
#line 2154 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367604_24_non_const_voxel_z;
#line 2155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367605_6_non_const_voxel;
#line 2155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367605_13_non_const_voxel_x_out;
#line 2155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367605_26_non_const_voxel_y_out;
#line 2155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367605_39_non_const_voxel_z_out;
#line 2155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367605_52_non_const_voxel_out;
#line 2156 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367606_7_non_const_end_walk;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367601_8_non_const_x = x_entry;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367601_21_non_const_y = y_entry;
#line 2151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367601_34_non_const_z = z_entry;
#line 2160 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367595_6_non_const_x_move_direction = (((int)(x_entry <= x_exit)) - ((int)(x_entry > x_exit)));
#line 2161 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367595_24_non_const_y_move_direction = (((int)(y_entry <= y_exit)) - ((int)(y_entry > y_exit)));
#line 2162 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367595_42_non_const_z_move_direction = (((int)(z_entry <= z_exit)) - ((int)(z_entry > z_exit)));
#line 2164 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go = ((float)(_Z15x_remaining_GPUdiRi(((double)__cuda_local_var_367601_8_non_const_x), __cuda_local_var_367595_6_non_const_x_move_direction, (&__cuda_local_var_367604_6_non_const_voxel_x))));
#line 2165 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = ((float)(_Z15y_remaining_GPUdiRi(((double)__cuda_local_var_367601_21_non_const_y), (-__cuda_local_var_367595_24_non_const_y_move_direction), (&__cuda_local_var_367604_15_non_const_voxel_y))));
#line 2166 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_26_non_const_z_to_go = ((float)(_Z15z_remaining_GPUdiRi(((double)__cuda_local_var_367601_34_non_const_z), (-__cuda_local_var_367595_42_non_const_z_move_direction), (&__cuda_local_var_367604_24_non_const_voxel_z))));
#line 2167 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_6_non_const_voxel = ((__cuda_local_var_367604_6_non_const_voxel_x + (__cuda_local_var_367604_15_non_const_voxel_y * 200)) + ((__cuda_local_var_367604_24_non_const_voxel_z * 200) * 200));
#line 2172 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367596_8_non_const_delta_yx = ((__T260 = ((float)(fdividef(((double)(y_exit - y_entry)), ((double)(x_exit - x_entry)))))) , (fabsf(__T260)));
#line 2173 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367596_18_non_const_delta_zx = ((__T261 = ((float)(fdividef(((double)(z_exit - z_entry)), ((double)(x_exit - x_entry)))))) , (fabsf(__T261)));
#line 2174 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367596_28_non_const_delta_zy = ((__T262 = ((float)(fdividef(((double)(z_exit - z_entry)), ((double)(y_exit - y_entry)))))) , (fabsf(__T262)));
#line 2178 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_13_non_const_voxel_x_out = ((int)(__double2int_rz(((double)(fdivide((((double)x_exit) + (8.0)), (0.080000000000000002)))))));
#line 2179 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_26_non_const_voxel_y_out = ((int)(__double2int_rz(((double)(fdivide(((8.0) - ((double)y_exit)), (0.080000000000000002)))))));
#line 2180 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_39_non_const_voxel_z_out = ((int)(__double2int_rz(((double)(fdivide(((3.0) - ((double)z_exit)), (0.25)))))));
#line 2181 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_52_non_const_voxel_out = ((int)((__cuda_local_var_367605_13_non_const_voxel_x_out + (__cuda_local_var_367605_26_non_const_voxel_y_out * 200)) + ((__cuda_local_var_367605_39_non_const_voxel_z_out * 200) * 200)));
#line 2183 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367606_7_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367605_6_non_const_voxel == __cuda_local_var_367605_52_non_const_voxel_out) || (__cuda_local_var_367604_6_non_const_voxel_x >= 200)) || (__cuda_local_var_367604_15_non_const_voxel_y >= 200)) || (__cuda_local_var_367604_24_non_const_voxel_z >= 24)));
#line 2184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367606_7_non_const_end_walk))
#line 2184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2185 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
((*image)[__cuda_local_var_367605_6_non_const_voxel]) = ((__nv_bool)0);
#line 2185 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2189 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (z_entry != z_exit)
#line 2190 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2191 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_367606_7_non_const_end_walk))
#line 2192 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2194 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367603_8_non_const_x_extension = (__cuda_local_var_367596_18_non_const_delta_zx * __cuda_local_var_367602_8_non_const_x_to_go);
#line 2195 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367603_21_non_const_y_extension = (__cuda_local_var_367596_28_non_const_delta_zy * __cuda_local_var_367602_17_non_const_y_to_go);
#line 2196 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_367602_26_non_const_z_to_go <= __cuda_local_var_367603_8_non_const_x_extension) && (__cuda_local_var_367602_26_non_const_z_to_go <= __cuda_local_var_367603_21_non_const_y_extension))
#line 2197 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2204 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go -= ((float)(fdividef(((double)__cuda_local_var_367602_26_non_const_z_to_go), ((double)__cuda_local_var_367596_18_non_const_delta_zx))));
#line 2205 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go -= ((float)(fdividef(((double)__cuda_local_var_367602_26_non_const_z_to_go), ((double)__cuda_local_var_367596_28_non_const_delta_zy))));
#line 2206 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_26_non_const_z_to_go = (0.25F);
#line 2207 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_24_non_const_voxel_z -= __cuda_local_var_367595_42_non_const_z_move_direction;
#line 2208 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367602_8_non_const_x_to_go <= (0.0F))
#line 2209 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2210 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_6_non_const_voxel_x += __cuda_local_var_367595_6_non_const_x_move_direction;
#line 2211 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go = (0.07999999821F);
#line 2212 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2213 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367602_17_non_const_y_to_go <= (0.0F))
#line 2214 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2215 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_15_non_const_voxel_y -= __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2216 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = (0.07999999821F);
#line 2217 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2218 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2218 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2218 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2220 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367603_8_non_const_x_extension <= __cuda_local_var_367603_21_non_const_y_extension)
#line 2221 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2226 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go = (0.07999999821F);
#line 2227 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go -= (__cuda_local_var_367596_8_non_const_delta_yx * __cuda_local_var_367602_8_non_const_x_to_go);
#line 2228 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_26_non_const_z_to_go -= (__cuda_local_var_367596_18_non_const_delta_zx * __cuda_local_var_367602_8_non_const_x_to_go);
#line 2232 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_6_non_const_voxel_x += __cuda_local_var_367595_6_non_const_x_move_direction;
#line 2233 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367602_17_non_const_y_to_go <= (0.0F))
#line 2234 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2235 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = (0.07999999821F);
#line 2236 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_15_non_const_voxel_y -= __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2237 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2238 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2241 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2241 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2246 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go -= ((float)(fdividef(((double)__cuda_local_var_367602_17_non_const_y_to_go), ((double)__cuda_local_var_367596_8_non_const_delta_yx))));
#line 2247 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = (0.07999999821F);
#line 2248 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_26_non_const_z_to_go -= (__cuda_local_var_367596_28_non_const_delta_zy * __cuda_local_var_367602_17_non_const_y_to_go);
#line 2252 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_15_non_const_voxel_y -= __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2253 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2253 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2257 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_6_non_const_voxel = ((__cuda_local_var_367604_6_non_const_voxel_x + (__cuda_local_var_367604_15_non_const_voxel_y * 200)) + ((__cuda_local_var_367604_24_non_const_voxel_z * 200) * 200));
#line 2258 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367606_7_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367605_6_non_const_voxel == __cuda_local_var_367605_52_non_const_voxel_out) || (__cuda_local_var_367604_6_non_const_voxel_x >= 200)) || (__cuda_local_var_367604_15_non_const_voxel_y >= 200)) || (__cuda_local_var_367604_24_non_const_voxel_z >= 24)));
#line 2259 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367606_7_non_const_end_walk))
#line 2259 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2260 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
((*image)[__cuda_local_var_367605_6_non_const_voxel]) = ((__nv_bool)0);
#line 2260 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2261 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2262 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2264 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2264 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2268 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_367606_7_non_const_end_walk))
#line 2269 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2271 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367603_21_non_const_y_extension = ((float)(fdividef(((double)__cuda_local_var_367602_17_non_const_y_to_go), ((double)__cuda_local_var_367596_8_non_const_delta_yx))));
#line 2273 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367602_8_non_const_x_to_go <= __cuda_local_var_367603_21_non_const_y_extension)
#line 2274 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2278 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go = (0.07999999821F);
#line 2279 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go -= (__cuda_local_var_367596_8_non_const_delta_yx * __cuda_local_var_367602_8_non_const_x_to_go);
#line 2281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_6_non_const_voxel_x += __cuda_local_var_367595_6_non_const_x_move_direction;
#line 2282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367602_17_non_const_y_to_go <= (0.0F))
#line 2283 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = (0.07999999821F);
#line 2285 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_15_non_const_voxel_y -= __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2286 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2287 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2290 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2290 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2295 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_8_non_const_x_to_go -= ((float)(fdividef(((double)__cuda_local_var_367602_17_non_const_y_to_go), ((double)__cuda_local_var_367596_8_non_const_delta_yx))));
#line 2296 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367602_17_non_const_y_to_go = (0.07999999821F);
#line 2297 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367604_15_non_const_voxel_y -= __cuda_local_var_367595_24_non_const_y_move_direction;
#line 2298 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2301 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367605_6_non_const_voxel = ((__cuda_local_var_367604_6_non_const_voxel_x + (__cuda_local_var_367604_15_non_const_voxel_y * 200)) + ((__cuda_local_var_367604_24_non_const_voxel_z * 200) * 200));
#line 2302 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367606_7_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367605_6_non_const_voxel == __cuda_local_var_367605_52_non_const_voxel_out) || (__cuda_local_var_367604_6_non_const_voxel_x >= 200)) || (__cuda_local_var_367604_15_non_const_voxel_y >= 200)) || (__cuda_local_var_367604_24_non_const_voxel_z >= 24)));
#line 2303 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367606_7_non_const_end_walk))
#line 2303 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2304 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
((*image)[__cuda_local_var_367605_6_non_const_voxel]) = ((__nv_bool)0);
#line 2304 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2306 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2308 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2309 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2309 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double _Z15x_remaining_GPUdiRi(
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double x, 
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int x_move_direction, 
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *voxel_x){
#line 2310 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2311 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2312 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367762_9_non_const_voxel_x_float;
#line 2313 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367763_9_non_const_x_inside;
#line 2313 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367763_9_non_const_x_inside = ((modf(((double)(fdivide((x + (8.0)), (0.080000000000000002)))), (&__cuda_local_var_367762_9_non_const_voxel_x_float))) * (0.080000000000000002));
#line 2314 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*voxel_x) = ((int)(__double2int_rz(__cuda_local_var_367762_9_non_const_voxel_x_float)));
#line 2315 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
return (((double)(x_move_direction > 0)) * ((0.080000000000000002) - __cuda_local_var_367763_9_non_const_x_inside)) + (((double)(x_move_direction <= 0)) * __cuda_local_var_367763_9_non_const_x_inside);
#line 2316 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2316 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double _Z15y_remaining_GPUdiRi(
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double y, 
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int y_move_direction, 
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *voxel_y){
#line 2317 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2318 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2319 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367769_9_non_const_voxel_y_float;
#line 2320 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367770_9_non_const_y_inside;
#line 2320 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367770_9_non_const_y_inside = ((modf(((double)(fdivide(((8.0) - y), (0.080000000000000002)))), (&__cuda_local_var_367769_9_non_const_voxel_y_float))) * (0.080000000000000002));
#line 2321 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*voxel_y) = ((int)(__double2int_rz(__cuda_local_var_367769_9_non_const_voxel_y_float)));
#line 2322 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
return (((double)(y_move_direction > 0)) * ((0.080000000000000002) - __cuda_local_var_367770_9_non_const_y_inside)) + (((double)(y_move_direction <= 0)) * __cuda_local_var_367770_9_non_const_y_inside);
#line 2323 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2323 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double _Z15z_remaining_GPUdiRi(
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double z, 
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int z_move_direction, 
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *voxel_z){
#line 2324 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2325 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2325 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T263;
#line 2326 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367776_8_non_const_voxel_z_float;
#line 2327 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_367777_8_non_const_z_inside;
#line 2327 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367777_8_non_const_z_inside = ((float)(((double)((__T263 = ((float)(fdivide(((3.0) - z), (0.25))))) , (modff(__T263, (&__cuda_local_var_367776_8_non_const_voxel_z_float))))) * (0.25)));
#line 2328 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*voxel_z) = ((int)(__float2int_rz(((double)__cuda_local_var_367776_8_non_const_voxel_z_float))));
#line 2329 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
return (((double)(z_move_direction > 0)) * ((0.25) - ((double)__cuda_local_var_367777_8_non_const_z_inside))) + ((double)(((float)(z_move_direction <= 0)) * __cuda_local_var_367777_8_non_const_z_inside));
#line 2330 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2330 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int _Z20position_2_voxel_GPUddd(
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double x, 
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double y, 
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
double z){
#line 4706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4707 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4708 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_370158_6_non_const_voxel_x;
#line 4709 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_370159_6_non_const_voxel_y;
#line 4710 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_370160_6_non_const_voxel_z;
#line 4708 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370158_6_non_const_voxel_x = ((int)(__double2int_rz(((double)(fdivide((x + (8.0)), (0.080000000000000002)))))));
#line 4709 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370159_6_non_const_voxel_y = ((int)(__double2int_rz(((double)(fdivide(((8.0) - y), (0.080000000000000002)))))));
#line 4710 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370160_6_non_const_voxel_z = ((int)(__double2int_rz(((double)(fdivide(((3.0) - z), (0.25)))))));
#line 4711 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
return (__cuda_local_var_370158_6_non_const_voxel_x + (__cuda_local_var_370159_6_non_const_voxel_y * 200)) + ((__cuda_local_var_370160_6_non_const_voxel_z * 200) * 200);
#line 4712 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4712 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 void _Z16test_func_deviceRiS_S_(
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *x, 
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *y, 
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *z){
#line 4893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4894 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4895 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*x) = 2;
#line 4896 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*y) = 3;
#line 4897 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(*z) = 4;
#line 4898 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 4898 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1085 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z30recon_volume_intersections_GPUiPiPbPfS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_(
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int num_histories, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *gantry_angle, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *missed_recon_volume, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *t_in_1, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *t_in_2, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *t_out_1, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *t_out_2, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *u_in_1, 
#line 1087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *u_in_2, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *u_out_1, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *u_out_2, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *v_in_1, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *v_in_2, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *v_out_1, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *v_out_2, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_entry, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_entry, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_entry, 
#line 1088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_exit, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_exit, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_exit, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_entry_angle, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_entry_angle, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_exit_angle, 
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_exit_angle){
#line 1089 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1091 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366561_6_non_const_i;
#line 1111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366561_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 1112 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366561_6_non_const_i < num_histories)
#line 1113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2127;
#line 1114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2128;
#line 1115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2129;
#line 1116 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2130;
#line 1117 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2131;
#line 1118 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2132;
#line 1119 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2133;
#line 1120 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2134;
#line 1121 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2135;
#line 1122 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2136;
#line 1123 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2137;
#line 1124 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2138;
#line 1125 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2139;
#line 1114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366564_10_non_const_rotation_angle_radians;
#line 1126 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366576_10_non_const_ut_entry_angle;
#line 1127 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366577_10_non_const_u_entry;
#line 1127 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366577_19_non_const_t_entry;
#line 1130 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_366580_8_non_const_entered;
#line 1140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366590_10_non_const_ut_exit_angle;
#line 1141 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366591_10_non_const_u_exit;
#line 1141 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366591_18_non_const_t_exit;
#line 1144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_366594_8_non_const_exited;
#line 1156 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366606_10_non_const_uv_entry_slope;
#line 1157 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366607_10_non_const_uv_exit_slope;
#line 1114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366564_10_non_const_rotation_angle_radians = (((double)(gantry_angle[__cuda_local_var_366561_6_non_const_i])) * ((double)(fdivide(((4.0) * (atan((1.0)))), (180.0)))));
#line 1126 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366576_10_non_const_ut_entry_angle = ((double)(((__T2127 = ((t_in_2[__cuda_local_var_366561_6_non_const_i]) - (t_in_1[__cuda_local_var_366561_6_non_const_i]))) , ((void)(__T2128 = ((u_in_2[__cuda_local_var_366561_6_non_const_i]) - (u_in_1[__cuda_local_var_366561_6_non_const_i]))))) , (atan2f(__T2127, __T2128))));
#line 1130 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366580_8_non_const_entered = (_Z20calculate_interceptsdddRdS_(((double)(u_in_2[__cuda_local_var_366561_6_non_const_i])), ((double)(t_in_2[__cuda_local_var_366561_6_non_const_i])), __cuda_local_var_366576_10_non_const_ut_entry_angle, (&__cuda_local_var_366577_10_non_const_u_entry), (&__cuda_local_var_366577_19_non_const_t_entry)));
#line 1132 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(xy_entry_angle[__cuda_local_var_366561_6_non_const_i]) = ((float)(__cuda_local_var_366576_10_non_const_ut_entry_angle + __cuda_local_var_366564_10_non_const_rotation_angle_radians));
#line 1135 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(x_entry[__cuda_local_var_366561_6_non_const_i]) = ((float)(((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366577_10_non_const_u_entry) - ((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366577_19_non_const_t_entry)));
#line 1136 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(y_entry[__cuda_local_var_366561_6_non_const_i]) = ((float)(((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366577_10_non_const_u_entry) + ((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366577_19_non_const_t_entry)));
#line 1140 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366590_10_non_const_ut_exit_angle = ((double)(((__T2129 = ((t_out_2[__cuda_local_var_366561_6_non_const_i]) - (t_out_1[__cuda_local_var_366561_6_non_const_i]))) , ((void)(__T2130 = ((u_out_2[__cuda_local_var_366561_6_non_const_i]) - (u_out_1[__cuda_local_var_366561_6_non_const_i]))))) , (atan2f(__T2129, __T2130))));
#line 1144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366594_8_non_const_exited = (_Z20calculate_interceptsdddRdS_(((double)(u_out_1[__cuda_local_var_366561_6_non_const_i])), ((double)(t_out_1[__cuda_local_var_366561_6_non_const_i])), __cuda_local_var_366590_10_non_const_ut_exit_angle, (&__cuda_local_var_366591_10_non_const_u_exit), (&__cuda_local_var_366591_18_non_const_t_exit)));
#line 1146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(xy_exit_angle[__cuda_local_var_366561_6_non_const_i]) = ((float)(__cuda_local_var_366590_10_non_const_ut_exit_angle + __cuda_local_var_366564_10_non_const_rotation_angle_radians));
#line 1149 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(x_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)(((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366591_10_non_const_u_exit) - ((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366591_18_non_const_t_exit)));
#line 1150 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(y_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)(((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366591_10_non_const_u_exit) + ((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * __cuda_local_var_366591_18_non_const_t_exit)));
#line 1156 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366606_10_non_const_uv_entry_slope = ((double)(fdividef(((double)((v_in_2[__cuda_local_var_366561_6_non_const_i]) - (v_in_1[__cuda_local_var_366561_6_non_const_i]))), ((double)((u_in_2[__cuda_local_var_366561_6_non_const_i]) - (u_in_1[__cuda_local_var_366561_6_non_const_i]))))));
#line 1157 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366607_10_non_const_uv_exit_slope = ((double)(fdividef(((double)((v_out_2[__cuda_local_var_366561_6_non_const_i]) - (v_out_1[__cuda_local_var_366561_6_non_const_i]))), ((double)((u_out_2[__cuda_local_var_366561_6_non_const_i]) - (u_out_1[__cuda_local_var_366561_6_non_const_i]))))));
#line 1159 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(xz_entry_angle[__cuda_local_var_366561_6_non_const_i]) = (((__T2131 = ((v_in_2[__cuda_local_var_366561_6_non_const_i]) - (v_in_1[__cuda_local_var_366561_6_non_const_i]))) , ((void)(__T2132 = ((u_in_2[__cuda_local_var_366561_6_non_const_i]) - (u_in_1[__cuda_local_var_366561_6_non_const_i]))))) , (atan2f(__T2131, __T2132)));
#line 1160 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(xz_exit_angle[__cuda_local_var_366561_6_non_const_i]) = (((__T2133 = ((v_out_2[__cuda_local_var_366561_6_non_const_i]) - (v_out_1[__cuda_local_var_366561_6_non_const_i]))) , ((void)(__T2134 = ((u_out_2[__cuda_local_var_366561_6_non_const_i]) - (u_out_1[__cuda_local_var_366561_6_non_const_i]))))) , (atan2f(__T2133, __T2134)));
#line 1169 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366577_10_non_const_u_entry = (((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * ((double)(x_entry[__cuda_local_var_366561_6_non_const_i]))) + ((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * ((double)(y_entry[__cuda_local_var_366561_6_non_const_i]))));
#line 1170 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366591_10_non_const_u_exit = (((cos(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * ((double)(x_exit[__cuda_local_var_366561_6_non_const_i]))) + ((sin(__cuda_local_var_366564_10_non_const_rotation_angle_radians)) * ((double)(y_exit[__cuda_local_var_366561_6_non_const_i]))));
#line 1171 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(z_entry[__cuda_local_var_366561_6_non_const_i]) = ((float)(((double)(v_in_2[__cuda_local_var_366561_6_non_const_i])) + (__cuda_local_var_366606_10_non_const_uv_entry_slope * (__cuda_local_var_366577_10_non_const_u_entry - ((double)(u_in_2[__cuda_local_var_366561_6_non_const_i]))))));
#line 1172 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(z_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)(((double)(v_out_1[__cuda_local_var_366561_6_non_const_i])) - (__cuda_local_var_366607_10_non_const_uv_exit_slope * (((double)(u_out_1[__cuda_local_var_366561_6_non_const_i])) - __cuda_local_var_366591_10_non_const_u_exit))));
#line 1180 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_366580_8_non_const_entered) && (__cuda_local_var_366594_8_non_const_exited))
#line 1181 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1182 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((double)((__T2135 = (z_entry[__cuda_local_var_366561_6_non_const_i])) , (fabsf(__T2135)))) < (3.0)) && (((double)((__T2136 = (z_exit[__cuda_local_var_366561_6_non_const_i])) , (fabsf(__T2136)))) > (3.0)))
#line 1183 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1183 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2140;
#line 1184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366634_12_non_const_recon_cyl_fraction;
#line 1184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366634_12_non_const_recon_cyl_fraction = ((__T2140 = ((double)(fdivide((((((double)(((int)((z_exit[__cuda_local_var_366561_6_non_const_i]) >= (0.0F))) - ((int)((z_exit[__cuda_local_var_366561_6_non_const_i]) < (0.0F))))) * (6.0)) * (0.5)) - ((double)(z_entry[__cuda_local_var_366561_6_non_const_i]))), ((double)((z_exit[__cuda_local_var_366561_6_non_const_i]) - (z_entry[__cuda_local_var_366561_6_non_const_i]))))))) , (fabs(__T2140)));
#line 1185 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(x_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)(((double)(x_entry[__cuda_local_var_366561_6_non_const_i])) + (__cuda_local_var_366634_12_non_const_recon_cyl_fraction * ((double)((x_exit[__cuda_local_var_366561_6_non_const_i]) - (x_entry[__cuda_local_var_366561_6_non_const_i]))))));
#line 1186 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(y_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)(((double)(y_entry[__cuda_local_var_366561_6_non_const_i])) + (__cuda_local_var_366634_12_non_const_recon_cyl_fraction * ((double)((y_exit[__cuda_local_var_366561_6_non_const_i]) - (y_entry[__cuda_local_var_366561_6_non_const_i]))))));
#line 1187 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(z_exit[__cuda_local_var_366561_6_non_const_i]) = ((float)((((double)(((int)((z_exit[__cuda_local_var_366561_6_non_const_i]) >= (0.0F))) - ((int)((z_exit[__cuda_local_var_366561_6_non_const_i]) < (0.0F))))) * (6.0)) * (0.5)));
#line 1188 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1188 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 1188 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1189 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)((__T2137 = (z_entry[__cuda_local_var_366561_6_non_const_i])) , (fabsf(__T2137)))) > (3.0))
#line 1190 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1191 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366580_8_non_const_entered = ((__nv_bool)0);
#line 1192 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366594_8_non_const_exited = ((__nv_bool)0);
#line 1193 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1193 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1198 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__T2138 = ((t_out_1[__cuda_local_var_366561_6_non_const_i]) - (t_in_2[__cuda_local_var_366561_6_non_const_i]))) , (fabsf(__T2138))) > (5.0F)) || (((__T2139 = ((v_out_1[__cuda_local_var_366561_6_non_const_i]) - (v_in_2[__cuda_local_var_366561_6_non_const_i]))) , (fabsf(__T2139))) > (5.0F)))
#line 1199 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1200 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366580_8_non_const_entered = ((__nv_bool)0);
#line 1201 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366594_8_non_const_exited = ((__nv_bool)0);
#line 1202 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1203 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1206 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(missed_recon_volume[__cuda_local_var_366561_6_non_const_i]) = ((__nv_bool)((!(__cuda_local_var_366580_8_non_const_entered)) || (!(__cuda_local_var_366594_8_non_const_exited))));
#line 1207 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1208 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1208 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1407 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z11binning_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_(
#line 1409 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int num_histories, 
#line 1409 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_counts, 
#line 1409 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 1409 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *missed_recon_volume, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_entry, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_entry, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_entry, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_exit, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_exit, 
#line 1410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_exit, 
#line 1411 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_WEPL, 
#line 1411 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_ut_angle, 
#line 1411 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_uv_angle, 
#line 1411 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 1412 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_entry_angle, 
#line 1412 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_entry_angle, 
#line 1412 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_exit_angle, 
#line 1412 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_exit_angle){
#line 1412 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1414 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1415 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366865_6_non_const_i;
#line 1415 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366865_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 1416 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366865_6_non_const_i < num_histories)
#line 1417 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1417 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2141;
#line 1418 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2142;
#line 1423 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366873_11_non_const_x_midpath;
#line 1423 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366873_22_non_const_y_midpath;
#line 1423 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366873_33_non_const_z_midpath;
#line 1423 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366873_44_non_const_path_angle;
#line 1424 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366874_8_non_const_angle_bin;
#line 1424 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366874_19_non_const_t_bin;
#line 1424 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366874_26_non_const_v_bin;
#line 1425 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366875_11_non_const_angle;
#line 1425 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366875_18_non_const_t;
#line 1425 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366875_21_non_const_v;
#line 1426 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366876_11_non_const_rel_ut_angle;
#line 1426 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_366876_25_non_const_rel_uv_angle;
#line 1429 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366873_11_non_const_x_midpath = ((double)(fdividef(((double)((x_entry[__cuda_local_var_366865_6_non_const_i]) + (x_exit[__cuda_local_var_366865_6_non_const_i]))), (2.0))));
#line 1430 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366873_22_non_const_y_midpath = ((double)(fdividef(((double)((y_entry[__cuda_local_var_366865_6_non_const_i]) + (y_exit[__cuda_local_var_366865_6_non_const_i]))), (2.0))));
#line 1431 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366873_33_non_const_z_midpath = ((double)(fdividef(((double)((z_entry[__cuda_local_var_366865_6_non_const_i]) + (z_exit[__cuda_local_var_366865_6_non_const_i]))), (2.0))));
#line 1434 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366873_44_non_const_path_angle = ((double)(((__T2141 = ((y_exit[__cuda_local_var_366865_6_non_const_i]) - (y_entry[__cuda_local_var_366865_6_non_const_i]))) , ((void)(__T2142 = ((x_exit[__cuda_local_var_366865_6_non_const_i]) - (x_entry[__cuda_local_var_366865_6_non_const_i]))))) , (atan2f(__T2141, __T2142))));
#line 1435 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366873_44_non_const_path_angle < (0.0))
#line 1435 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1436 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366873_44_non_const_path_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1436 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1437 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366874_8_non_const_angle_bin = (((int)(__double2int_rz(((double)(((double)(fdivide((__cuda_local_var_366873_44_non_const_path_angle * ((double)(fdivide((180.0), ((4.0) * (atan((1.0)))))))), (6.0)))) + (0.5)))))) % 60);
#line 1438 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366875_11_non_const_angle = ((((double)__cuda_local_var_366874_8_non_const_angle_bin) * (6.0)) * ((double)(fdivide(((4.0) * (atan((1.0)))), (180.0)))));
#line 1441 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366875_18_non_const_t = ((__cuda_local_var_366873_22_non_const_y_midpath * (cos(__cuda_local_var_366875_11_non_const_angle))) - (__cuda_local_var_366873_11_non_const_x_midpath * (sin(__cuda_local_var_366875_11_non_const_angle))));
#line 1442 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366874_19_non_const_t_bin = ((int)(__double2int_rz(((double)(((double)(fdivide(__cuda_local_var_366875_18_non_const_t, (0.10000000000000001)))) + (175.0))))));
#line 1444 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366875_21_non_const_v = __cuda_local_var_366873_33_non_const_z_midpath;
#line 1445 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366874_26_non_const_v_bin = ((int)(__double2int_rz(((double)(((double)(fdivide(__cuda_local_var_366875_21_non_const_v, (0.25)))) + (18.0))))));
#line 1448 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__cuda_local_var_366874_19_non_const_t_bin >= 0) && (__cuda_local_var_366874_26_non_const_v_bin >= 0)) && (__cuda_local_var_366874_19_non_const_t_bin < 350)) && (__cuda_local_var_366874_26_non_const_v_bin < 36))
#line 1449 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1450 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(bin_num[__cuda_local_var_366865_6_non_const_i]) = ((__cuda_local_var_366874_19_non_const_t_bin + (__cuda_local_var_366874_8_non_const_angle_bin * 350)) + ((__cuda_local_var_366874_26_non_const_v_bin * 350) * 60));
#line 1451 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(missed_recon_volume[__cuda_local_var_366865_6_non_const_i]))
#line 1452 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1457 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_11_non_const_rel_ut_angle = ((double)((xy_exit_angle[__cuda_local_var_366865_6_non_const_i]) - (xy_entry_angle[__cuda_local_var_366865_6_non_const_i])));
#line 1458 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366876_11_non_const_rel_ut_angle > ((4.0) * (atan((1.0)))))
#line 1458 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1459 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_11_non_const_rel_ut_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1459 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1460 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366876_11_non_const_rel_ut_angle < (-((4.0) * (atan((1.0))))))
#line 1460 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1461 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_11_non_const_rel_ut_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1461 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1462 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_25_non_const_rel_uv_angle = ((double)((xz_exit_angle[__cuda_local_var_366865_6_non_const_i]) - (xz_entry_angle[__cuda_local_var_366865_6_non_const_i])));
#line 1463 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366876_25_non_const_rel_uv_angle > ((4.0) * (atan((1.0)))))
#line 1463 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1464 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_25_non_const_rel_uv_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1464 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1465 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_366876_25_non_const_rel_uv_angle < (-((4.0) * (atan((1.0))))))
#line 1465 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1466 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366876_25_non_const_rel_uv_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1466 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1467 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((bin_counts + (bin_num[__cuda_local_var_366865_6_non_const_i])), 1);
#line 1468 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((mean_WEPL + (bin_num[__cuda_local_var_366865_6_non_const_i])), (WEPL[__cuda_local_var_366865_6_non_const_i]));
#line 1469 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((mean_rel_ut_angle + (bin_num[__cuda_local_var_366865_6_non_const_i])), ((float)__cuda_local_var_366876_11_non_const_rel_ut_angle));
#line 1470 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((mean_rel_ut_angle + (bin_num[__cuda_local_var_366865_6_non_const_i])), ((float)__cuda_local_var_366876_25_non_const_rel_uv_angle));
#line 1473 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1473 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 1473 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1475 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(bin_num[__cuda_local_var_366865_6_non_const_i]) = (-1);
#line 1475 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1476 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1477 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1478 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1478 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z19calculate_means_GPUPiPfS0_S0_(
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_counts, 
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_WEPL, 
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_ut_angle, 
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_uv_angle){
#line 1514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1515 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366966_6_non_const_v;
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366966_22_non_const_angle;
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366966_42_non_const_t;
#line 1517 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_366967_6_non_const_bin;
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366966_6_non_const_v = ((int)(blockIdx.x));
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366966_22_non_const_angle = ((int)(blockIdx.y));
#line 1516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366966_42_non_const_t = ((int)(threadIdx.x));
#line 1517 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_366967_6_non_const_bin = ((__cuda_local_var_366966_42_non_const_t + (__cuda_local_var_366966_22_non_const_angle * 350)) + ((__cuda_local_var_366966_6_non_const_v * 350) * 60));
#line 1518 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((bin_counts[__cuda_local_var_366967_6_non_const_bin]) > 0)
#line 1519 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1520 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(mean_WEPL[__cuda_local_var_366967_6_non_const_bin]) = ((float)(fdividef(((double)(mean_WEPL[__cuda_local_var_366967_6_non_const_bin])), ((double)((float)(bin_counts[__cuda_local_var_366967_6_non_const_bin]))))));
#line 1521 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(mean_rel_ut_angle[__cuda_local_var_366967_6_non_const_bin]) = ((float)(fdividef(((double)(mean_rel_ut_angle[__cuda_local_var_366967_6_non_const_bin])), ((double)((float)(bin_counts[__cuda_local_var_366967_6_non_const_bin]))))));
#line 1522 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(mean_rel_uv_angle[__cuda_local_var_366967_6_non_const_bin]) = ((float)(fdividef(((double)(mean_rel_uv_angle[__cuda_local_var_366967_6_non_const_bin])), ((double)((float)(bin_counts[__cuda_local_var_366967_6_non_const_bin]))))));
#line 1523 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1524 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1524 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1568 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z26sum_squared_deviations_GPUiPiPfS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_(
#line 1570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int num_histories, 
#line 1570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 1570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_WEPL, 
#line 1570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_ut_angle, 
#line 1570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_uv_angle, 
#line 1571 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 1571 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_entry_angle, 
#line 1571 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_entry_angle, 
#line 1571 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_exit_angle, 
#line 1571 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_exit_angle, 
#line 1572 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_WEPL, 
#line 1572 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_ut_angle, 
#line 1572 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_uv_angle){
#line 1572 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1574 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1575 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367025_9_non_const_WEPL_difference;
#line 1575 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367025_26_non_const_rel_ut_angle_difference;
#line 1575 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367025_51_non_const_rel_uv_angle_difference;
#line 1576 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367026_6_non_const_i;
#line 1576 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367026_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 1577 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367026_6_non_const_i < num_histories)
#line 1578 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1579 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367029_10_non_const_rel_ut_angle;
#line 1584 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367034_10_non_const_rel_uv_angle;
#line 1579 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367029_10_non_const_rel_ut_angle = ((double)((xy_exit_angle[__cuda_local_var_367026_6_non_const_i]) - (xy_entry_angle[__cuda_local_var_367026_6_non_const_i])));
#line 1580 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367029_10_non_const_rel_ut_angle > ((4.0) * (atan((1.0)))))
#line 1580 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1581 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367029_10_non_const_rel_ut_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1581 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1582 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367029_10_non_const_rel_ut_angle < (-((4.0) * (atan((1.0))))))
#line 1582 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1583 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367029_10_non_const_rel_ut_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1583 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1584 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367034_10_non_const_rel_uv_angle = ((double)((xz_exit_angle[__cuda_local_var_367026_6_non_const_i]) - (xz_entry_angle[__cuda_local_var_367026_6_non_const_i])));
#line 1585 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367034_10_non_const_rel_uv_angle > ((4.0) * (atan((1.0)))))
#line 1585 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1586 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367034_10_non_const_rel_uv_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1586 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1587 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367034_10_non_const_rel_uv_angle < (-((4.0) * (atan((1.0))))))
#line 1587 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1588 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367034_10_non_const_rel_uv_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1588 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1589 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367025_9_non_const_WEPL_difference = ((double)((WEPL[__cuda_local_var_367026_6_non_const_i]) - (mean_WEPL[(bin_num[__cuda_local_var_367026_6_non_const_i])])));
#line 1590 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367025_26_non_const_rel_ut_angle_difference = (__cuda_local_var_367029_10_non_const_rel_ut_angle - ((double)(mean_rel_ut_angle[(bin_num[__cuda_local_var_367026_6_non_const_i])])));
#line 1591 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367025_51_non_const_rel_uv_angle_difference = (__cuda_local_var_367034_10_non_const_rel_uv_angle - ((double)(mean_rel_uv_angle[(bin_num[__cuda_local_var_367026_6_non_const_i])])));
#line 1593 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((stddev_WEPL + (bin_num[__cuda_local_var_367026_6_non_const_i])), ((float)(_Z8_Pow_intIdET_S0_i(__cuda_local_var_367025_9_non_const_WEPL_difference, 2))));
#line 1594 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((stddev_rel_ut_angle + (bin_num[__cuda_local_var_367026_6_non_const_i])), ((float)(_Z8_Pow_intIdET_S0_i(__cuda_local_var_367025_26_non_const_rel_ut_angle_difference, 2))));
#line 1595 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((stddev_rel_uv_angle + (bin_num[__cuda_local_var_367026_6_non_const_i])), ((float)(_Z8_Pow_intIdET_S0_i(__cuda_local_var_367025_51_non_const_rel_uv_angle_difference, 2))));
#line 1596 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1597 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1597 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z33calculate_standard_deviations_GPUPiPfS0_S0_(
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_counts, 
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_WEPL, 
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_ut_angle, 
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_uv_angle){
#line 1609 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1610 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367061_6_non_const_v;
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367061_22_non_const_angle;
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367061_42_non_const_t;
#line 1612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367062_6_non_const_bin;
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367061_6_non_const_v = ((int)(blockIdx.x));
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367061_22_non_const_angle = ((int)(blockIdx.y));
#line 1611 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367061_42_non_const_t = ((int)(threadIdx.x));
#line 1612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367062_6_non_const_bin = ((__cuda_local_var_367061_42_non_const_t + (__cuda_local_var_367061_22_non_const_angle * 350)) + ((__cuda_local_var_367061_6_non_const_v * 350) * 60));
#line 1613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((bin_counts[__cuda_local_var_367062_6_non_const_bin]) > 0)
#line 1614 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1616 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(stddev_WEPL[__cuda_local_var_367062_6_non_const_bin]) = (sqrtf(((float)(fdividef(((double)(stddev_WEPL[__cuda_local_var_367062_6_non_const_bin])), ((double)((float)((bin_counts[__cuda_local_var_367062_6_non_const_bin]) - 1))))))));
#line 1617 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(stddev_rel_ut_angle[__cuda_local_var_367062_6_non_const_bin]) = (sqrtf(((float)(fdividef(((double)(stddev_rel_ut_angle[__cuda_local_var_367062_6_non_const_bin])), ((double)((float)((bin_counts[__cuda_local_var_367062_6_non_const_bin]) - 1))))))));
#line 1618 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(stddev_rel_uv_angle[__cuda_local_var_367062_6_non_const_bin]) = (sqrtf(((float)(fdividef(((double)(stddev_rel_uv_angle[__cuda_local_var_367062_6_non_const_bin])), ((double)((float)((bin_counts[__cuda_local_var_367062_6_non_const_bin]) - 1))))))));
#line 1619 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1620 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
__syncthreads();
#line 1620 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1621 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(bin_counts[__cuda_local_var_367062_6_non_const_bin]) = 0;
#line 1622 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1622 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1702 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z20statistical_cuts_GPUiPiS_PfS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_S0_Pb(
#line 1704 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int num_histories, 
#line 1704 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_counts, 
#line 1704 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 1704 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *sinogram, 
#line 1704 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 1705 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_entry_angle, 
#line 1705 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_entry_angle, 
#line 1705 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xy_exit_angle, 
#line 1705 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *xz_exit_angle, 
#line 1706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_WEPL, 
#line 1706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_ut_angle, 
#line 1706 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *mean_rel_uv_angle, 
#line 1707 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_WEPL, 
#line 1707 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_ut_angle, 
#line 1707 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *stddev_rel_uv_angle, 
#line 1708 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *failed_cuts){
#line 1708 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1710 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1711 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367161_6_non_const_i;
#line 1711 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367161_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 1712 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367161_6_non_const_i < num_histories)
#line 1713 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1713 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2143;
#line 1714 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2144;
#line 1715 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2145;
#line 1714 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367164_10_non_const_rel_ut_angle;
#line 1719 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367169_10_non_const_rel_uv_angle;
#line 1724 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367174_8_non_const_passed_ut_cut;
#line 1725 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367175_8_non_const_passed_uv_cut;
#line 1726 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367176_8_non_const_passed_WEPL_cut;
#line 1714 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367164_10_non_const_rel_ut_angle = ((double)((xy_exit_angle[__cuda_local_var_367161_6_non_const_i]) - (xy_entry_angle[__cuda_local_var_367161_6_non_const_i])));
#line 1715 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367164_10_non_const_rel_ut_angle > ((4.0) * (atan((1.0)))))
#line 1715 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1716 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367164_10_non_const_rel_ut_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1716 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1717 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367164_10_non_const_rel_ut_angle < (-((4.0) * (atan((1.0))))))
#line 1717 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1718 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367164_10_non_const_rel_ut_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1718 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1719 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367169_10_non_const_rel_uv_angle = ((double)((xz_exit_angle[__cuda_local_var_367161_6_non_const_i]) - (xz_entry_angle[__cuda_local_var_367161_6_non_const_i])));
#line 1720 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367169_10_non_const_rel_uv_angle > ((4.0) * (atan((1.0)))))
#line 1720 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1721 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367169_10_non_const_rel_uv_angle -= ((2.0) * ((4.0) * (atan((1.0)))));
#line 1721 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1722 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367169_10_non_const_rel_uv_angle < (-((4.0) * (atan((1.0))))))
#line 1722 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1723 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367169_10_non_const_rel_uv_angle += ((2.0) * ((4.0) * (atan((1.0)))));
#line 1723 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1724 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367174_8_non_const_passed_ut_cut = ((__nv_bool)(((__T2143 = (__cuda_local_var_367164_10_non_const_rel_ut_angle - ((double)(mean_rel_ut_angle[(bin_num[__cuda_local_var_367161_6_non_const_i])])))) , (fabs(__T2143))) < ((double)((3.0F) * (stddev_rel_ut_angle[(bin_num[__cuda_local_var_367161_6_non_const_i])])))));
#line 1725 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367175_8_non_const_passed_uv_cut = ((__nv_bool)(((__T2144 = (__cuda_local_var_367169_10_non_const_rel_uv_angle - ((double)(mean_rel_uv_angle[(bin_num[__cuda_local_var_367161_6_non_const_i])])))) , (fabs(__T2144))) < ((double)((3.0F) * (stddev_rel_uv_angle[(bin_num[__cuda_local_var_367161_6_non_const_i])])))));
#line 1726 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367176_8_non_const_passed_WEPL_cut = ((__nv_bool)(((__T2145 = ((mean_WEPL[(bin_num[__cuda_local_var_367161_6_non_const_i])]) - (WEPL[__cuda_local_var_367161_6_non_const_i]))) , (fabsf(__T2145))) <= ((3.0F) * (stddev_WEPL[(bin_num[__cuda_local_var_367161_6_non_const_i])]))));
#line 1727 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(failed_cuts[__cuda_local_var_367161_6_non_const_i]) = ((__nv_bool)(((!(__cuda_local_var_367174_8_non_const_passed_ut_cut)) || (!(__cuda_local_var_367175_8_non_const_passed_uv_cut))) || (!(__cuda_local_var_367176_8_non_const_passed_WEPL_cut))));
#line 1729 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(failed_cuts[__cuda_local_var_367161_6_non_const_i]))
#line 1730 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1731 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((bin_counts + (bin_num[__cuda_local_var_367161_6_non_const_i])), 1);
#line 1732 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPff((sinogram + (bin_num[__cuda_local_var_367161_6_non_const_i])), (WEPL[__cuda_local_var_367161_6_non_const_i]));
#line 1733 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1734 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1735 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1735 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z22construct_sinogram_GPUPiPf(
#line 1766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_counts, 
#line 1766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *sinogram){
#line 1766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1767 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367218_6_non_const_v;
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367218_22_non_const_angle;
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367218_42_non_const_t;
#line 1769 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367219_6_non_const_bin;
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367218_6_non_const_v = ((int)(blockIdx.x));
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367218_22_non_const_angle = ((int)(blockIdx.y));
#line 1768 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367218_42_non_const_t = ((int)(threadIdx.x));
#line 1769 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367219_6_non_const_bin = ((__cuda_local_var_367218_42_non_const_t + (__cuda_local_var_367218_22_non_const_angle * 350)) + ((__cuda_local_var_367218_6_non_const_v * 350) * 60));
#line 1770 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((bin_counts[__cuda_local_var_367219_6_non_const_bin]) > 0)
#line 1770 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1771 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(sinogram[__cuda_local_var_367219_6_non_const_bin]) = ((float)(fdividef(((double)(sinogram[__cuda_local_var_367219_6_non_const_bin])), ((double)((float)(bin_counts[__cuda_local_var_367219_6_non_const_bin]))))));
#line 1771 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1772 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1772 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z10filter_GPUPfS_(
#line 1839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *sinogram, 
#line 1839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *sinogram_filtered){
#line 1839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1840 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367291_6_non_const_v_bin;
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367291_26_non_const_angle_bin;
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367291_50_non_const_t_bin;
#line 1842 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367292_6_non_const_t_bin_ref;
#line 1842 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367292_17_non_const_t_bin_sep;
#line 1842 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367292_28_non_const_strip_index;
#line 1843 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367293_9_non_const_filtered;
#line 1843 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367293_19_non_const_t;
#line 1843 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367293_22_non_const_scale_factor;
#line 1844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367294_9_non_const_v;
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367291_6_non_const_v_bin = ((int)(blockIdx.x));
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367291_26_non_const_angle_bin = ((int)(blockIdx.y));
#line 1841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367291_50_non_const_t_bin = ((int)(threadIdx.x));
#line 1844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367294_9_non_const_v = ((((double)(__cuda_local_var_367291_6_non_const_v_bin - 18)) * (0.25)) + (0.125));
#line 1847 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (__cuda_local_var_367292_6_non_const_t_bin_ref = 0; (__cuda_local_var_367292_6_non_const_t_bin_ref < 350); __cuda_local_var_367292_6_non_const_t_bin_ref++)
#line 1848 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1849 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_19_non_const_t = ((((double)(__cuda_local_var_367292_6_non_const_t_bin_ref - 175)) * (0.10000000000000001)) + (0.050000000000000003));
#line 1850 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367292_17_non_const_t_bin_sep = (__cuda_local_var_367291_50_non_const_t_bin - __cuda_local_var_367292_6_non_const_t_bin_ref);
#line 1852 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_22_non_const_scale_factor = ((double)(fdivide((265.69999999999999), (sqrt((((70596.489999999991) + (__cuda_local_var_367293_19_non_const_t * __cuda_local_var_367293_19_non_const_t)) + (__cuda_local_var_367294_9_non_const_v * __cuda_local_var_367294_9_non_const_v)))))));
#line 1853 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
switch (1)
#line 1854 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1855 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
case 2:
#line 1856 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
goto __T2146;
#line 1857 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
case 0:
#line 1858 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367292_17_non_const_t_bin_sep == 0)
#line 1858 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1859 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_9_non_const_filtered = ((1.0) / ((4.0) * (pow((((double)(fdividef((2.0), ((double)(sqrtf((2.0F))))))) * (0.10000000000000001)), (2.0)))));
#line 1859 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1859 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 1859 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1860 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_367292_17_non_const_t_bin_sep % 2) == 0)
#line 1860 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1861 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_9_non_const_filtered = (0.0);
#line 1861 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1861 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 1861 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1863 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_9_non_const_filtered = ((double)(fdivide((-1.0), (pow((((((double)(fdividef((2.0), ((double)(sqrtf((2.0F))))))) * (0.10000000000000001)) * ((4.0) * (atan((1.0))))) * ((double)__cuda_local_var_367292_17_non_const_t_bin_sep)), (2.0))))));
#line 1863 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1863 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1864 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
goto __T2146;
#line 1865 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
case 1:
#line 1866 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367293_9_non_const_filtered = (pow(((pow(((0.10000000000000001) * ((4.0) * (atan((1.0))))), (2.0))) * ((1.0) - (pow(((double)(2 * __cuda_local_var_367292_17_non_const_t_bin_sep)), (2.0))))), (-1.0)));
#line 1867 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1867 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__T2146:;
#line 1867 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
;
#line 1868 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367292_28_non_const_strip_index = (((__cuda_local_var_367291_6_non_const_v_bin * 60) * 350) + (__cuda_local_var_367291_26_non_const_angle_bin * 350));
#line 1869 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(sinogram_filtered[(__cuda_local_var_367292_28_non_const_strip_index + __cuda_local_var_367291_50_non_const_t_bin)]) += ((((0.10000000000000001) * ((double)(sinogram[(__cuda_local_var_367292_28_non_const_strip_index + __cuda_local_var_367292_6_non_const_t_bin_ref)]))) * __cuda_local_var_367293_9_non_const_filtered) * __cuda_local_var_367293_22_non_const_scale_factor);
#line 1870 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1871 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 1871 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 1957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z18backprojection_GPUPfS_(
#line 1957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *sinogram_filtered, 
#line 1957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *FBP_image){
#line 1957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1958 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367409_6_non_const_row;
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367409_24_non_const_column;
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367409_45_non_const_slice;
#line 1960 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367410_6_non_const_voxel;
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367409_6_non_const_row = ((int)(blockIdx.y));
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367409_24_non_const_column = ((int)(blockIdx.x));
#line 1959 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367409_45_non_const_slice = ((int)(threadIdx.x));
#line 1960 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367410_6_non_const_voxel = ((((__cuda_local_var_367409_45_non_const_slice * 200) * 200) + (__cuda_local_var_367409_6_non_const_row * 200)) + __cuda_local_var_367409_24_non_const_column);
#line 1961 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367410_6_non_const_voxel < 960000)
#line 1962 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1963 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367413_10_non_const_delta;
#line 1964 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367414_10_non_const_u;
#line 1964 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367414_13_non_const_t;
#line 1964 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367414_16_non_const_v;
#line 1965 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367415_10_non_const_detector_number_t;
#line 1965 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367415_29_non_const_detector_number_v;
#line 1966 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367416_10_non_const_eta;
#line 1966 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367416_15_non_const_epsilon;
#line 1967 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367417_10_non_const_scale_factor;
#line 1968 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367418_7_non_const_t_bin;
#line 1968 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367418_14_non_const_v_bin;
#line 1968 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367418_21_non_const_bin;
#line 1969 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367419_10_non_const_x;
#line 1970 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367420_10_non_const_y;
#line 1971 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367421_10_non_const_z;
#line 1963 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367413_10_non_const_delta = ((6.0) * ((double)(fdivide(((4.0) * (atan((1.0)))), (180.0)))));
#line 1969 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367419_10_non_const_x = ((-8.0) + ((((double)__cuda_local_var_367409_24_non_const_column) + (0.5)) * (0.080000000000000002)));
#line 1970 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367420_10_non_const_y = ((8.0) - ((((double)__cuda_local_var_367409_6_non_const_row) + (0.5)) * (0.080000000000000002)));
#line 1971 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367421_10_non_const_z = ((-3.0) + ((((double)__cuda_local_var_367409_45_non_const_slice) + (0.5)) * (0.25)));
#line 1974 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367419_10_non_const_x * __cuda_local_var_367419_10_non_const_x) + (__cuda_local_var_367420_10_non_const_y * __cuda_local_var_367420_10_non_const_y)) > (64.0))
#line 1974 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1975 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_image[((((__cuda_local_var_367409_45_non_const_slice * 200) * 200) + (__cuda_local_var_367409_6_non_const_row * 200)) + __cuda_local_var_367409_24_non_const_column)]) = (0.00112999999F);
#line 1975 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1977 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 1977 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1977 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1979 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int angle_bin;
#line 1979 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
angle_bin = 0;
#line 1979 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (angle_bin < 60); angle_bin++)
#line 1980 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1980 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2147;
#line 1982 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367414_10_non_const_u = ((__cuda_local_var_367419_10_non_const_x * (cos((((double)angle_bin) * __cuda_local_var_367413_10_non_const_delta)))) + (__cuda_local_var_367420_10_non_const_y * (sin((((double)angle_bin) * __cuda_local_var_367413_10_non_const_delta)))));
#line 1983 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367414_13_non_const_t = (((-__cuda_local_var_367419_10_non_const_x) * (sin((((double)angle_bin) * __cuda_local_var_367413_10_non_const_delta)))) + (__cuda_local_var_367420_10_non_const_y * (cos((((double)angle_bin) * __cuda_local_var_367413_10_non_const_delta)))));
#line 1984 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367414_16_non_const_v = __cuda_local_var_367421_10_non_const_z;
#line 1987 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367415_10_non_const_detector_number_t = (((double)(fdivide((__cuda_local_var_367414_13_non_const_t - (__cuda_local_var_367414_10_non_const_u * ((double)(fdivide(__cuda_local_var_367414_13_non_const_t, ((265.69999999999999) + __cuda_local_var_367414_10_non_const_u)))))), (0.10000000000000001)))) + (175.0));
#line 1988 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367418_7_non_const_t_bin = ((int)(__double2int_rz(__cuda_local_var_367415_10_non_const_detector_number_t)));
#line 1989 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)__cuda_local_var_367418_7_non_const_t_bin) > __cuda_local_var_367415_10_non_const_detector_number_t)
#line 1989 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1990 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367418_7_non_const_t_bin -= 1;
#line 1990 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1991 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367416_10_non_const_eta = (__cuda_local_var_367415_10_non_const_detector_number_t - ((double)__cuda_local_var_367418_7_non_const_t_bin));
#line 1994 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367415_29_non_const_detector_number_v = (((double)(fdivide((__cuda_local_var_367414_16_non_const_v - (__cuda_local_var_367414_10_non_const_u * ((double)(fdivide(__cuda_local_var_367414_16_non_const_v, ((265.69999999999999) + __cuda_local_var_367414_10_non_const_u)))))), (0.25)))) + (18.0));
#line 1995 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367418_14_non_const_v_bin = ((int)(__double2int_rz(__cuda_local_var_367415_29_non_const_detector_number_v)));
#line 1996 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)__cuda_local_var_367418_14_non_const_v_bin) > __cuda_local_var_367415_29_non_const_detector_number_v)
#line 1996 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 1997 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367418_14_non_const_v_bin -= 1;
#line 1997 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 1998 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367416_15_non_const_epsilon = (__cuda_local_var_367415_29_non_const_detector_number_v - ((double)__cuda_local_var_367418_14_non_const_v_bin));
#line 2001 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367417_10_non_const_scale_factor = ((__T2147 = ((double)(fdivide((265.69999999999999), ((265.69999999999999) + __cuda_local_var_367414_10_non_const_u))))) , (_Z8_Pow_intIdET_S0_i(__T2147, 2)));
#line 2005 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367418_21_non_const_bin = ((__cuda_local_var_367418_7_non_const_t_bin + (angle_bin * 350)) + ((__cuda_local_var_367418_14_non_const_v_bin * 60) * 350));
#line 2010 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_367418_14_non_const_v_bin == 35) || (__cuda_local_var_367418_21_non_const_bin < 0))
#line 2010 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2011 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_image[__cuda_local_var_367410_6_non_const_voxel]) += (__cuda_local_var_367417_10_non_const_scale_factor * ((((1.0) - __cuda_local_var_367416_10_non_const_eta) * ((double)(sinogram_filtered[__cuda_local_var_367418_21_non_const_bin]))) + (__cuda_local_var_367416_10_non_const_eta * ((double)(sinogram_filtered[(__cuda_local_var_367418_21_non_const_bin + 1)])))));
#line 2011 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2014 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2014 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2023 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_image[__cuda_local_var_367410_6_non_const_voxel]) += (__cuda_local_var_367417_10_non_const_scale_factor * (((((((1.0) - __cuda_local_var_367416_10_non_const_eta) * ((1.0) - __cuda_local_var_367416_15_non_const_epsilon)) * ((double)(sinogram_filtered[__cuda_local_var_367418_21_non_const_bin]))) + ((__cuda_local_var_367416_10_non_const_eta * ((1.0) - __cuda_local_var_367416_15_non_const_epsilon)) * ((double)(sinogram_filtered[(__cuda_local_var_367418_21_non_const_bin + 1)])))) + ((((1.0) - __cuda_local_var_367416_10_non_const_eta) * __cuda_local_var_367416_15_non_const_epsilon) * ((double)(sinogram_filtered[(__cuda_local_var_367418_21_non_const_bin + 21000)])))) + ((__cuda_local_var_367416_10_non_const_eta * __cuda_local_var_367416_15_non_const_epsilon) * ((double)(sinogram_filtered[((__cuda_local_var_367418_21_non_const_bin + 21000) + 1)])))));
#line 2027 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2028 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2028 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2029 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_image[__cuda_local_var_367410_6_non_const_voxel]) *= __cuda_local_var_367413_10_non_const_delta;
#line 2030 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2031 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2032 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2032 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z20FBP_image_2_hull_GPUPfPb(
#line 2080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *FBP_image, 
#line 2080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *FBP_hull){
#line 2080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2081 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367532_6_non_const_row;
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367532_24_non_const_column;
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367532_45_non_const_slice;
#line 2083 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367533_6_non_const_voxel;
#line 2084 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367534_9_non_const_x;
#line 2085 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367535_9_non_const_y;
#line 2086 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367536_9_non_const_d_squared;
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367532_6_non_const_row = ((int)(blockIdx.y));
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367532_24_non_const_column = ((int)(blockIdx.x));
#line 2082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367532_45_non_const_slice = ((int)(threadIdx.x));
#line 2083 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367533_6_non_const_voxel = ((((__cuda_local_var_367532_45_non_const_slice * 200) * 200) + (__cuda_local_var_367532_6_non_const_row * 200)) + __cuda_local_var_367532_24_non_const_column);
#line 2084 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367534_9_non_const_x = ((-8.0) + ((((double)__cuda_local_var_367532_24_non_const_column) + (0.5)) * (0.080000000000000002)));
#line 2085 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367535_9_non_const_y = ((8.0) - ((((double)__cuda_local_var_367532_6_non_const_row) + (0.5)) * (0.080000000000000002)));
#line 2086 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367536_9_non_const_d_squared = ((_Z8_Pow_intIdET_S0_i(__cuda_local_var_367534_9_non_const_x, 2)) + (_Z8_Pow_intIdET_S0_i(__cuda_local_var_367535_9_non_const_y, 2)));
#line 2087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((double)(FBP_image[__cuda_local_var_367533_6_non_const_voxel])) > (0.59999999999999998)) && (__cuda_local_var_367536_9_non_const_d_squared < (_Z8_Pow_intIdET_S0_i((8.0), 2))))
#line 2087 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_hull[__cuda_local_var_367533_6_non_const_voxel]) = ((__nv_bool)1);
#line 2088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2088 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2090 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(FBP_hull[__cuda_local_var_367533_6_non_const_voxel]) = ((__nv_bool)0);
#line 2090 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2091 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2091 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2331 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z17carve_differencesPiS_(
#line 2331 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *carve_differences, 
#line 2331 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *image){
#line 2331 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2332 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367783_6_non_const_row;
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367783_24_non_const_column;
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367783_45_non_const_slice;
#line 2334 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367784_6_non_const_voxel;
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367783_6_non_const_row = ((int)(blockIdx.y));
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367783_24_non_const_column = ((int)(blockIdx.x));
#line 2333 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367783_45_non_const_slice = ((int)(threadIdx.x));
#line 2334 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367784_6_non_const_voxel = ((__cuda_local_var_367783_24_non_const_column + (__cuda_local_var_367783_6_non_const_row * 200)) + ((__cuda_local_var_367783_45_non_const_slice * 200) * 200));
#line 2335 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__cuda_local_var_367783_6_non_const_row != 0) && (__cuda_local_var_367783_6_non_const_row != 199)) && (__cuda_local_var_367783_24_non_const_column != 0)) && (__cuda_local_var_367783_24_non_const_column != 199))
#line 2336 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2337 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367787_7_non_const_difference;
#line 2337 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367787_19_non_const_max_difference;
#line 2337 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367787_19_non_const_max_difference = 0;
#line 2337 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2338 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_row;
#line 2338 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_row = (__cuda_local_var_367783_6_non_const_row - 1);
#line 2338 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_row <= (__cuda_local_var_367783_6_non_const_row + 1)); current_row++)
#line 2339 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2339 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2340 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_column;
#line 2340 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_column = (__cuda_local_var_367783_24_non_const_column - 1);
#line 2340 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_column <= (__cuda_local_var_367783_24_non_const_column + 1)); current_column++)
#line 2341 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2342 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367787_7_non_const_difference = ((image[__cuda_local_var_367784_6_non_const_voxel]) - (image[((current_column + (current_row * 200)) + ((__cuda_local_var_367783_45_non_const_slice * 200) * 200))]));
#line 2343 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367787_7_non_const_difference > __cuda_local_var_367787_19_non_const_max_difference)
#line 2343 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2344 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367787_19_non_const_max_difference = __cuda_local_var_367787_7_non_const_difference;
#line 2344 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2345 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2345 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2346 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2346 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2347 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(carve_differences[__cuda_local_var_367784_6_non_const_voxel]) = __cuda_local_var_367787_19_non_const_max_difference;
#line 2348 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2349 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2349 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2364 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z6SC_GPUiPbPiS_PfS1_S1_S1_S1_S1_S1_(
#line 2366 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
const int num_histories, 
#line 2366 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *SC_hull, 
#line 2366 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 2366 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *missed_recon_volume, 
#line 2366 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_entry, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_entry, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_entry, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_exit, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_exit, 
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_exit){
#line 2367 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2369 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2370 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367820_6_non_const_i;
#line 2372 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367822_7_non_const_run_it;
#line 2370 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367820_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 2372 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367822_7_non_const_run_it = ((__nv_bool)(__cuda_local_var_367820_6_non_const_i == 192644));
#line 2373 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__cuda_local_var_367822_7_non_const_run_it) && (__cuda_local_var_367820_6_non_const_i < num_histories)) && (!(missed_recon_volume[__cuda_local_var_367820_6_non_const_i]))) && (((double)(WEPL[__cuda_local_var_367820_6_non_const_i])) <= (0.0)))
#line 2374 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2374 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2148;
#line 2375 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2149;
#line 2376 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2150;
#line 2377 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2151;
#line 2378 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2152;
#line 2379 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2153;
#line 2378 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367828_7_non_const_x_move_direction;
#line 2378 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2378 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367828_43_non_const_z_move_direction;
#line 2379 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367829_10_non_const_delta_yx;
#line 2379 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367829_20_non_const_delta_zx;
#line 2379 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367829_30_non_const_delta_zy;
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367830_10_non_const_x_move;
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367830_22_non_const_y_move;
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367830_34_non_const_z_move;
#line 2385 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367835_10_non_const_x_to_go;
#line 2385 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367835_19_non_const_y_to_go;
#line 2385 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367835_28_non_const_z_to_go;
#line 2386 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367836_10_non_const_x_extension;
#line 2386 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367836_23_non_const_y_extension;
#line 2387 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367837_7_non_const_voxel_x;
#line 2387 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367837_16_non_const_voxel_y;
#line 2387 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367837_25_non_const_voxel_z;
#line 2389 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367839_7_non_const_voxel;
#line 2389 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367839_14_non_const_voxel_out;
#line 2390 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367840_8_non_const_end_walk;
#line 2391 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_367841_8_non_const_debug_run;
#line 2402 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367852_10_non_const_x_replace;
#line 2415 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367865_7_non_const_voxel_x_out;
#line 2416 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367866_7_non_const_voxel_y_out;
#line 2417 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367867_7_non_const_voxel_z_out;
#line 2443 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367893_7_non_const_j;
#line 2444 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367894_7_non_const_j_low_limit;
#line 2445 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367895_7_non_const_j_high_limit;
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = (0.0);
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = (0.0);
#line 2380 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_34_non_const_z_move = (0.0);
#line 2391 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367841_8_non_const_debug_run = ((__nv_bool)1);
#line 2395 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367828_7_non_const_x_move_direction = (((int)((x_entry[__cuda_local_var_367820_6_non_const_i]) <= (x_exit[__cuda_local_var_367820_6_non_const_i]))) - ((int)((x_entry[__cuda_local_var_367820_6_non_const_i]) >= (x_exit[__cuda_local_var_367820_6_non_const_i]))));
#line 2396 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367828_25_non_const_y_move_direction = (((int)((y_entry[__cuda_local_var_367820_6_non_const_i]) <= (y_exit[__cuda_local_var_367820_6_non_const_i]))) - ((int)((y_entry[__cuda_local_var_367820_6_non_const_i]) >= (y_exit[__cuda_local_var_367820_6_non_const_i]))));
#line 2397 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367828_43_non_const_z_move_direction = (((int)((z_entry[__cuda_local_var_367820_6_non_const_i]) <= (z_exit[__cuda_local_var_367820_6_non_const_i]))) - ((int)((z_entry[__cuda_local_var_367820_6_non_const_i]) >= (z_exit[__cuda_local_var_367820_6_non_const_i]))));
#line 2398 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go = (_Z15x_remaining_GPUdiRi(((double)(x_entry[__cuda_local_var_367820_6_non_const_i])), __cuda_local_var_367828_7_non_const_x_move_direction, (&__cuda_local_var_367837_7_non_const_voxel_x)));
#line 2399 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (_Z15y_remaining_GPUdiRi(((double)(y_entry[__cuda_local_var_367820_6_non_const_i])), (-__cuda_local_var_367828_25_non_const_y_move_direction), (&__cuda_local_var_367837_16_non_const_voxel_y)));
#line 2400 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_28_non_const_z_to_go = (_Z15z_remaining_GPUdiRi(((double)(z_entry[__cuda_local_var_367820_6_non_const_i])), (-__cuda_local_var_367828_43_non_const_z_move_direction), (&__cuda_local_var_367837_25_non_const_voxel_z)));
#line 2401 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367839_7_non_const_voxel = ((__cuda_local_var_367837_7_non_const_voxel_x + (__cuda_local_var_367837_16_non_const_voxel_y * 200)) + ((__cuda_local_var_367837_25_non_const_voxel_z * 200) * 200));
#line 2402 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367852_10_non_const_x_replace = ((double)(x_exit[__cuda_local_var_367820_6_non_const_i]));
#line 2403 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367839_14_non_const_voxel_out = (_Z20position_2_voxel_GPUddd(__cuda_local_var_367852_10_non_const_x_replace, ((double)(y_exit[__cuda_local_var_367820_6_non_const_i])), ((double)(z_exit[__cuda_local_var_367820_6_non_const_i]))));
#line 2409 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367829_10_non_const_delta_yx = ((double)(fdividef(((double)((__T2148 = ((y_exit[__cuda_local_var_367820_6_non_const_i]) - (y_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2148)))), ((double)((__T2149 = ((x_exit[__cuda_local_var_367820_6_non_const_i]) - (x_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2149)))))));
#line 2410 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367829_20_non_const_delta_zx = ((double)(fdividef(((double)((__T2150 = ((z_exit[__cuda_local_var_367820_6_non_const_i]) - (z_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2150)))), ((double)((__T2151 = ((x_exit[__cuda_local_var_367820_6_non_const_i]) - (x_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2151)))))));
#line 2411 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367829_30_non_const_delta_zy = ((double)(fdividef(((double)((__T2152 = ((z_exit[__cuda_local_var_367820_6_non_const_i]) - (z_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2152)))), ((double)((__T2153 = ((y_exit[__cuda_local_var_367820_6_non_const_i]) - (y_entry[__cuda_local_var_367820_6_non_const_i]))) , (fabsf(__T2153)))))));
#line 2415 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367865_7_non_const_voxel_x_out = ((int)(__double2int_rz(((double)(fdivide((((double)(x_exit[__cuda_local_var_367820_6_non_const_i])) + (8.0)), (0.080000000000000002)))))));
#line 2416 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367866_7_non_const_voxel_y_out = ((int)(__double2int_rz(((double)(fdivide(((8.0) - ((double)(y_exit[__cuda_local_var_367820_6_non_const_i]))), (0.080000000000000002)))))));
#line 2417 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367867_7_non_const_voxel_z_out = ((int)(__double2int_rz(((double)(fdivide(((3.0) - ((double)(z_exit[__cuda_local_var_367820_6_non_const_i]))), (0.25)))))));
#line 2418 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367841_8_non_const_debug_run)
#line 2419 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2420 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"bin_num[i] = %d NUM_BINS = %d"), (bin_num[__cuda_local_var_367820_6_non_const_i]), 756000);
#line 2421 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move_direction = %d y_move_direction = %d z_move_direction = %d\n"), __cuda_local_var_367828_7_non_const_x_move_direction, __cuda_local_var_367828_25_non_const_y_move_direction, __cuda_local_var_367828_43_non_const_z_move_direction);
#line 2422 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"VOXEL_WIDTH = %3f VOXEL_HEIGHT = %3f SLICE_THICKNESS = %3f\n"), (0.080000000000000002), (0.080000000000000002), (0.25));
#line 2423 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"voxel_x_in = %d voxel_y_in = %d voxel_z_in = %d\n"), __cuda_local_var_367837_7_non_const_voxel_x, __cuda_local_var_367837_16_non_const_voxel_y, __cuda_local_var_367837_25_non_const_voxel_z);
#line 2424 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"voxel_x_out = %d voxel_y_out = %d voxel_z_out = %d\n"), __cuda_local_var_367865_7_non_const_voxel_x_out, __cuda_local_var_367866_7_non_const_voxel_y_out, __cuda_local_var_367867_7_non_const_voxel_z_out);
#line 2425 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"voxel_in = %d voxel_out = %d\n"), __cuda_local_var_367839_7_non_const_voxel, __cuda_local_var_367839_14_non_const_voxel_out);
#line 2426 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_entry[i] = %3f y_entry[i] = %3f z_entry[i] = %3f\n"), ((double)(x_entry[__cuda_local_var_367820_6_non_const_i])), ((double)(y_entry[__cuda_local_var_367820_6_non_const_i])), ((double)(z_entry[__cuda_local_var_367820_6_non_const_i])));
#line 2427 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_exit[i] = %8e y_exit[i] = %3f z_exit[i] = %3f\n"), __cuda_local_var_367852_10_non_const_x_replace, ((double)(y_exit[__cuda_local_var_367820_6_non_const_i])), ((double)(z_exit[__cuda_local_var_367820_6_non_const_i])));
#line 2428 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_replace > -7.28\?: %d\n"), ((int)(__cuda_local_var_367852_10_non_const_x_replace > (-7.2800000000000002))));
#line 2429 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_replace < -7.28\?: %d\n"), ((int)(__cuda_local_var_367852_10_non_const_x_replace < (-7.2800000000000002))));
#line 2430 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_replace = -7.28\?: %d\n"), ((int)(__cuda_local_var_367852_10_non_const_x_replace == (-7.2800000000000002))));
#line 2431 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_exit[i] > -7.28\?: %d\n"), ((int)(((double)(x_exit[__cuda_local_var_367820_6_non_const_i])) > (-7.2800000000000002))));
#line 2432 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_exit[i] < -7.28\?: %d\n"), ((int)(((double)(x_exit[__cuda_local_var_367820_6_non_const_i])) < (-7.2800000000000002))));
#line 2433 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_exit[i] = -7.28\?: %d\n"), ((int)(((double)(x_exit[__cuda_local_var_367820_6_non_const_i])) == (-7.2800000000000002))));
#line 2434 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_exit[i] voxel %8f\n"), (fdivide((((double)(x_exit[__cuda_local_var_367820_6_non_const_i])) + (8.0)), (0.080000000000000002))));
#line 2436 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"delta_yx = %3f delta_zx = %3f delta_zy = %3f\n"), __cuda_local_var_367829_10_non_const_delta_yx, __cuda_local_var_367829_20_non_const_delta_zx, __cuda_local_var_367829_30_non_const_delta_zy);
#line 2437 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %3f y_to_go = %3f z_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367835_28_non_const_z_to_go);
#line 2438 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2439 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367840_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367839_7_non_const_voxel == __cuda_local_var_367839_14_non_const_voxel_out) || (__cuda_local_var_367837_7_non_const_voxel_x >= 200)) || (__cuda_local_var_367837_16_non_const_voxel_y >= 200)) || (__cuda_local_var_367837_25_non_const_voxel_z >= 24)));
#line 2440 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367840_8_non_const_end_walk))
#line 2440 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2441 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SC_hull[__cuda_local_var_367839_7_non_const_voxel]) = ((__nv_bool)0);
#line 2441 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2443 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367893_7_non_const_j = 0;
#line 2444 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367894_7_non_const_j_low_limit = 185;
#line 2445 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367895_7_non_const_j_high_limit = 250;
#line 2449 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367828_43_non_const_z_move_direction != 0)
#line 2450 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2451 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2451 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2452 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"z_exit[i] != z_entry[i]\n"));
#line 2452 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2453 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_367840_8_non_const_end_walk))
#line 2454 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2456 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367836_10_non_const_x_extension = (__cuda_local_var_367829_20_non_const_delta_zx * __cuda_local_var_367835_10_non_const_x_to_go);
#line 2457 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367836_23_non_const_y_extension = (__cuda_local_var_367829_30_non_const_delta_zy * __cuda_local_var_367835_19_non_const_y_to_go);
#line 2458 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_367835_28_non_const_z_to_go <= __cuda_local_var_367836_10_non_const_x_extension) && (__cuda_local_var_367835_28_non_const_z_to_go <= __cuda_local_var_367836_23_non_const_y_extension))
#line 2459 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2461 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_367835_28_non_const_z_to_go, __cuda_local_var_367829_20_non_const_delta_zx)));
#line 2462 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = ((double)(fdivide(__cuda_local_var_367835_28_non_const_z_to_go, __cuda_local_var_367829_30_non_const_delta_zy)));
#line 2463 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_34_non_const_z_move = __cuda_local_var_367835_28_non_const_z_to_go;
#line 2464 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go -= (((double)(fdivide(__cuda_local_var_367835_28_non_const_z_to_go, __cuda_local_var_367829_20_non_const_delta_zx))) * ((double)(abs(__cuda_local_var_367828_7_non_const_x_move_direction))));
#line 2465 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go -= (((double)(fdivide(__cuda_local_var_367835_28_non_const_z_to_go, __cuda_local_var_367829_30_non_const_delta_zy))) * ((double)(abs(__cuda_local_var_367828_25_non_const_y_move_direction))));
#line 2466 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_28_non_const_z_to_go = (0.25);
#line 2467 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_25_non_const_voxel_z -= __cuda_local_var_367828_43_non_const_z_move_direction;
#line 2468 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367835_10_non_const_x_to_go <= (9.9999999999999995e-008))
#line 2469 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2470 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_7_non_const_voxel_x += __cuda_local_var_367828_7_non_const_x_move_direction;
#line 2471 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go = (0.080000000000000002);
#line 2472 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2473 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367835_19_non_const_y_to_go <= (9.9999999999999995e-008))
#line 2474 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2475 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_16_non_const_voxel_y -= __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2476 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (0.080000000000000002);
#line 2477 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2478 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2479 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2480 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"z_to_go <= x_extension && z_to_go <= y_extension\n"));
#line 2481 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move = %3f y_move = %3f z_move = %3f\n"), __cuda_local_var_367830_10_non_const_x_move, __cuda_local_var_367830_22_non_const_y_move, __cuda_local_var_367830_34_non_const_z_move);
#line 2482 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %8f y_to_go = %3f z_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367835_28_non_const_z_to_go);
#line 2483 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2484 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2484 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2484 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2486 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367836_10_non_const_x_extension <= __cuda_local_var_367836_23_non_const_y_extension)
#line 2487 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2489 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = __cuda_local_var_367835_10_non_const_x_to_go;
#line 2490 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = (__cuda_local_var_367829_10_non_const_delta_yx * __cuda_local_var_367835_10_non_const_x_to_go);
#line 2491 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_34_non_const_z_move = (__cuda_local_var_367829_20_non_const_delta_zx * __cuda_local_var_367835_10_non_const_x_to_go);
#line 2492 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go -= ((__cuda_local_var_367829_10_non_const_delta_yx * __cuda_local_var_367835_10_non_const_x_to_go) * ((double)(abs(__cuda_local_var_367828_25_non_const_y_move_direction))));
#line 2493 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_28_non_const_z_to_go -= ((__cuda_local_var_367829_20_non_const_delta_zx * __cuda_local_var_367835_10_non_const_x_to_go) * ((double)(abs(__cuda_local_var_367828_43_non_const_z_move_direction))));
#line 2494 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go = (0.080000000000000002);
#line 2495 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_7_non_const_voxel_x += __cuda_local_var_367828_7_non_const_x_move_direction;
#line 2496 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367835_19_non_const_y_to_go <= (9.9999999999999995e-008))
#line 2497 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2498 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (0.080000000000000002);
#line 2499 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_16_non_const_voxel_y -= __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2500 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2501 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2502 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2503 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)" x_extension <= y_extension \n"));
#line 2504 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move = %3f y_move = %3f z_move = %3f\n"), __cuda_local_var_367830_10_non_const_x_move, __cuda_local_var_367830_22_non_const_y_move, __cuda_local_var_367830_34_non_const_z_move);
#line 2505 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %3f y_to_go = %3f z_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367835_28_non_const_z_to_go);
#line 2506 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2507 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2510 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2510 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2512 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367829_10_non_const_delta_yx)));
#line 2513 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = __cuda_local_var_367835_19_non_const_y_to_go;
#line 2514 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_34_non_const_z_move = (__cuda_local_var_367829_30_non_const_delta_zy * __cuda_local_var_367835_19_non_const_y_to_go);
#line 2515 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go -= (((double)(fdivide(__cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367829_10_non_const_delta_yx))) * ((double)(abs(__cuda_local_var_367828_7_non_const_x_move_direction))));
#line 2516 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_28_non_const_z_to_go -= ((__cuda_local_var_367829_30_non_const_delta_zy * __cuda_local_var_367835_19_non_const_y_to_go) * ((double)(abs(__cuda_local_var_367828_43_non_const_z_move_direction))));
#line 2517 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (0.080000000000000002);
#line 2518 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_16_non_const_voxel_y -= __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2519 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2520 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2521 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)" y_extension < x_extension \n"));
#line 2522 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move = %3f y_move = %3f z_move = %3f\n"), __cuda_local_var_367830_10_non_const_x_move, __cuda_local_var_367830_22_non_const_y_move, __cuda_local_var_367830_34_non_const_z_move);
#line 2523 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %3f y_to_go = %3f z_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367835_28_non_const_z_to_go);
#line 2524 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2525 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2525 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2529 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_25_non_const_voxel_z = (max(__cuda_local_var_367837_25_non_const_voxel_z, 0));
#line 2530 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367839_7_non_const_voxel = ((__cuda_local_var_367837_7_non_const_voxel_x + (__cuda_local_var_367837_16_non_const_voxel_y * 200)) + ((__cuda_local_var_367837_25_non_const_voxel_z * 200) * 200));
#line 2531 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2531 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2532 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"voxel_x = %d voxel_y = %d voxel_z = %d voxel = %d\n"), __cuda_local_var_367837_7_non_const_voxel_x, __cuda_local_var_367837_16_non_const_voxel_y, __cuda_local_var_367837_25_non_const_voxel_z, __cuda_local_var_367839_7_non_const_voxel);
#line 2532 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2533 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367840_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367839_7_non_const_voxel == __cuda_local_var_367839_14_non_const_voxel_out) || (__cuda_local_var_367837_7_non_const_voxel_x >= 200)) || (__cuda_local_var_367837_16_non_const_voxel_y >= 200)) || (__cuda_local_var_367837_25_non_const_voxel_z >= 24)));
#line 2534 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367840_8_non_const_end_walk))
#line 2534 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2535 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SC_hull[__cuda_local_var_367839_7_non_const_voxel]) = ((__nv_bool)0);
#line 2535 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2536 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367893_7_non_const_j++;
#line 2537 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2538 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2540 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2540 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2541 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2541 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2542 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"z_exit[i] == z_entry[i]\n"));
#line 2542 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2543 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_367840_8_non_const_end_walk))
#line 2544 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2546 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367836_23_non_const_y_extension = ((double)(fdivide(__cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367829_10_non_const_delta_yx)));
#line 2548 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367835_10_non_const_x_to_go <= __cuda_local_var_367836_23_non_const_y_extension)
#line 2549 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2551 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = __cuda_local_var_367835_10_non_const_x_to_go;
#line 2552 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = (__cuda_local_var_367829_10_non_const_delta_yx * __cuda_local_var_367835_10_non_const_x_to_go);
#line 2553 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go -= ((__cuda_local_var_367829_10_non_const_delta_yx * __cuda_local_var_367835_10_non_const_x_to_go) * ((double)(abs(__cuda_local_var_367828_25_non_const_y_move_direction))));
#line 2554 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go = (0.080000000000000002);
#line 2555 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_7_non_const_voxel_x += __cuda_local_var_367828_7_non_const_x_move_direction;
#line 2556 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_367835_19_non_const_y_to_go <= (9.9999999999999995e-008))
#line 2557 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2558 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (0.080000000000000002);
#line 2559 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_16_non_const_voxel_y -= __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2560 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2561 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2562 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2563 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)" x_to_go <= y_extension\n"));
#line 2564 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move = %3f y_move = %3f \n"), __cuda_local_var_367830_10_non_const_x_move, __cuda_local_var_367830_22_non_const_y_move);
#line 2565 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %3f y_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go);
#line 2566 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2567 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2570 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2572 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367829_10_non_const_delta_yx)));
#line 2573 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367830_22_non_const_y_move = __cuda_local_var_367835_19_non_const_y_to_go;
#line 2574 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_10_non_const_x_to_go -= (((double)(fdivide(__cuda_local_var_367835_19_non_const_y_to_go, __cuda_local_var_367829_10_non_const_delta_yx))) * ((double)(abs(__cuda_local_var_367828_7_non_const_x_move_direction))));
#line 2575 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367835_19_non_const_y_to_go = (0.080000000000000002);
#line 2576 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_16_non_const_voxel_y -= __cuda_local_var_367828_25_non_const_y_move_direction;
#line 2577 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2578 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2579 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)" y_extension < x_extension\n"));
#line 2580 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_move = %3f y_move = %3f \n"), __cuda_local_var_367830_10_non_const_x_move, __cuda_local_var_367830_22_non_const_y_move);
#line 2581 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"x_to_go = %3f y_to_go = %3f\n"), __cuda_local_var_367835_10_non_const_x_to_go, __cuda_local_var_367835_19_non_const_y_to_go);
#line 2582 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2583 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2586 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367837_25_non_const_voxel_z = (max(__cuda_local_var_367837_25_non_const_voxel_z, 0));
#line 2587 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367839_7_non_const_voxel = ((__cuda_local_var_367837_7_non_const_voxel_x + (__cuda_local_var_367837_16_non_const_voxel_y * 200)) + ((__cuda_local_var_367837_25_non_const_voxel_z * 200) * 200));
#line 2588 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_367841_8_non_const_debug_run) && (__cuda_local_var_367893_7_non_const_j < __cuda_local_var_367895_7_non_const_j_high_limit)) && (__cuda_local_var_367893_7_non_const_j > __cuda_local_var_367894_7_non_const_j_low_limit))
#line 2588 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2589 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"voxel_x_in = %d voxel_y_in = %d voxel_z_in = %d\n"), __cuda_local_var_367837_7_non_const_voxel_x, __cuda_local_var_367837_16_non_const_voxel_y, __cuda_local_var_367837_25_non_const_voxel_z);
#line 2589 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2590 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367840_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_367839_7_non_const_voxel == __cuda_local_var_367839_14_non_const_voxel_out) || (__cuda_local_var_367837_7_non_const_voxel_x >= 200)) || (__cuda_local_var_367837_16_non_const_voxel_y >= 200)) || (__cuda_local_var_367837_25_non_const_voxel_z >= 24)));
#line 2591 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_367840_8_non_const_end_walk))
#line 2591 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2592 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SC_hull[__cuda_local_var_367839_7_non_const_voxel]) = ((__nv_bool)0);
#line 2592 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2593 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367893_7_non_const_j++;
#line 2594 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2596 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2597 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2598 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2598 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2610 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z7MSC_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_(
#line 2612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
const int num_histories, 
#line 2612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *MSC_counts, 
#line 2612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 2612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *missed_recon_volume, 
#line 2612 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_entry, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_entry, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_entry, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_exit, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_exit, 
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_exit){
#line 2613 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2615 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2616 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368066_6_non_const_i;
#line 2616 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368066_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 2618 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_368066_6_non_const_i < num_histories) && (!(missed_recon_volume[__cuda_local_var_368066_6_non_const_i]))) && (((double)(WEPL[__cuda_local_var_368066_6_non_const_i])) <= (0.0)))
#line 2619 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2619 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2154;
#line 2620 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2155;
#line 2621 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2156;
#line 2622 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2157;
#line 2623 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2158;
#line 2624 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2159;
#line 2623 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368073_7_non_const_x_move_direction;
#line 2623 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2623 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368073_43_non_const_z_move_direction;
#line 2624 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368074_10_non_const_delta_yx;
#line 2624 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368074_20_non_const_delta_zx;
#line 2624 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368074_30_non_const_delta_zy;
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368075_10_non_const_x_move;
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368075_22_non_const_y_move;
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368075_34_non_const_z_move;
#line 2630 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368080_10_non_const_x_to_go;
#line 2630 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368080_19_non_const_y_to_go;
#line 2630 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368080_28_non_const_z_to_go;
#line 2631 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368081_10_non_const_x_extension;
#line 2631 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368081_23_non_const_y_extension;
#line 2632 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368082_7_non_const_voxel_x;
#line 2632 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368082_16_non_const_voxel_y;
#line 2632 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368082_25_non_const_voxel_z;
#line 2634 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368084_7_non_const_voxel;
#line 2634 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368084_14_non_const_voxel_out;
#line 2635 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_368085_8_non_const_end_walk;
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = (0.0);
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = (0.0);
#line 2625 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_34_non_const_z_move = (0.0);
#line 2639 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368073_7_non_const_x_move_direction = (((int)((x_entry[__cuda_local_var_368066_6_non_const_i]) <= (x_exit[__cuda_local_var_368066_6_non_const_i]))) - ((int)((x_entry[__cuda_local_var_368066_6_non_const_i]) >= (x_exit[__cuda_local_var_368066_6_non_const_i]))));
#line 2640 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368073_25_non_const_y_move_direction = (((int)((y_entry[__cuda_local_var_368066_6_non_const_i]) <= (y_exit[__cuda_local_var_368066_6_non_const_i]))) - ((int)((y_entry[__cuda_local_var_368066_6_non_const_i]) >= (y_exit[__cuda_local_var_368066_6_non_const_i]))));
#line 2641 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368073_43_non_const_z_move_direction = (((int)((z_entry[__cuda_local_var_368066_6_non_const_i]) <= (z_exit[__cuda_local_var_368066_6_non_const_i]))) - ((int)((z_entry[__cuda_local_var_368066_6_non_const_i]) >= (z_exit[__cuda_local_var_368066_6_non_const_i]))));
#line 2642 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go = (_Z15x_remaining_GPUdiRi(((double)(x_entry[__cuda_local_var_368066_6_non_const_i])), __cuda_local_var_368073_7_non_const_x_move_direction, (&__cuda_local_var_368082_7_non_const_voxel_x)));
#line 2643 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (_Z15y_remaining_GPUdiRi(((double)(y_entry[__cuda_local_var_368066_6_non_const_i])), (-__cuda_local_var_368073_25_non_const_y_move_direction), (&__cuda_local_var_368082_16_non_const_voxel_y)));
#line 2644 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_28_non_const_z_to_go = (_Z15z_remaining_GPUdiRi(((double)(z_entry[__cuda_local_var_368066_6_non_const_i])), (-__cuda_local_var_368073_43_non_const_z_move_direction), (&__cuda_local_var_368082_25_non_const_voxel_z)));
#line 2645 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368084_7_non_const_voxel = ((__cuda_local_var_368082_7_non_const_voxel_x + (__cuda_local_var_368082_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368082_25_non_const_voxel_z * 200) * 200));
#line 2646 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368084_14_non_const_voxel_out = (_Z20position_2_voxel_GPUddd(((double)(x_exit[__cuda_local_var_368066_6_non_const_i])), ((double)(y_exit[__cuda_local_var_368066_6_non_const_i])), ((double)(z_exit[__cuda_local_var_368066_6_non_const_i]))));
#line 2651 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368074_10_non_const_delta_yx = ((double)(fdividef(((double)((__T2154 = ((y_exit[__cuda_local_var_368066_6_non_const_i]) - (y_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2154)))), ((double)((__T2155 = ((x_exit[__cuda_local_var_368066_6_non_const_i]) - (x_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2155)))))));
#line 2652 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368074_20_non_const_delta_zx = ((double)(fdividef(((double)((__T2156 = ((z_exit[__cuda_local_var_368066_6_non_const_i]) - (z_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2156)))), ((double)((__T2157 = ((x_exit[__cuda_local_var_368066_6_non_const_i]) - (x_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2157)))))));
#line 2653 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368074_30_non_const_delta_zy = ((double)(fdividef(((double)((__T2158 = ((z_exit[__cuda_local_var_368066_6_non_const_i]) - (z_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2158)))), ((double)((__T2159 = ((y_exit[__cuda_local_var_368066_6_non_const_i]) - (y_entry[__cuda_local_var_368066_6_non_const_i]))) , (fabsf(__T2159)))))));
#line 2657 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368085_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368084_7_non_const_voxel == __cuda_local_var_368084_14_non_const_voxel_out) || (__cuda_local_var_368082_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368082_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368082_25_non_const_voxel_z >= 24)));
#line 2658 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368085_8_non_const_end_walk))
#line 2658 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2659 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((MSC_counts + __cuda_local_var_368084_7_non_const_voxel), 1);
#line 2659 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2663 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368073_43_non_const_z_move_direction != 0)
#line 2664 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2666 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_368085_8_non_const_end_walk))
#line 2667 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2669 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368081_10_non_const_x_extension = (__cuda_local_var_368074_20_non_const_delta_zx * __cuda_local_var_368080_10_non_const_x_to_go);
#line 2670 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368081_23_non_const_y_extension = (__cuda_local_var_368074_30_non_const_delta_zy * __cuda_local_var_368080_19_non_const_y_to_go);
#line 2671 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_368080_28_non_const_z_to_go <= __cuda_local_var_368081_10_non_const_x_extension) && (__cuda_local_var_368080_28_non_const_z_to_go <= __cuda_local_var_368081_23_non_const_y_extension))
#line 2672 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2674 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368080_28_non_const_z_to_go, __cuda_local_var_368074_20_non_const_delta_zx)));
#line 2675 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = ((double)(fdivide(__cuda_local_var_368080_28_non_const_z_to_go, __cuda_local_var_368074_30_non_const_delta_zy)));
#line 2676 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_34_non_const_z_move = __cuda_local_var_368080_28_non_const_z_to_go;
#line 2677 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go -= (__cuda_local_var_368075_10_non_const_x_move * ((double)(abs(__cuda_local_var_368073_7_non_const_x_move_direction))));
#line 2678 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go -= (__cuda_local_var_368075_22_non_const_y_move * ((double)(abs(__cuda_local_var_368073_25_non_const_y_move_direction))));
#line 2681 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_28_non_const_z_to_go = (0.25);
#line 2682 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_25_non_const_voxel_z -= __cuda_local_var_368073_43_non_const_z_move_direction;
#line 2683 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368080_10_non_const_x_to_go == (0.0))
#line 2684 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2685 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_7_non_const_voxel_x += __cuda_local_var_368073_7_non_const_x_move_direction;
#line 2686 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go = (0.080000000000000002);
#line 2687 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2688 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368080_19_non_const_y_to_go == (0.0))
#line 2689 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2690 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_16_non_const_voxel_y -= __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2691 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (0.080000000000000002);
#line 2692 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2693 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2693 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2693 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2695 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368081_10_non_const_x_extension <= __cuda_local_var_368081_23_non_const_y_extension)
#line 2696 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2698 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = __cuda_local_var_368080_10_non_const_x_to_go;
#line 2699 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = (__cuda_local_var_368074_10_non_const_delta_yx * __cuda_local_var_368080_10_non_const_x_to_go);
#line 2700 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_34_non_const_z_move = (__cuda_local_var_368074_20_non_const_delta_zx * __cuda_local_var_368080_10_non_const_x_to_go);
#line 2701 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go = (0.080000000000000002);
#line 2702 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go -= (__cuda_local_var_368075_22_non_const_y_move * ((double)(abs(__cuda_local_var_368073_25_non_const_y_move_direction))));
#line 2703 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_28_non_const_z_to_go -= (__cuda_local_var_368075_34_non_const_z_move * ((double)(abs(__cuda_local_var_368073_43_non_const_z_move_direction))));
#line 2707 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_7_non_const_voxel_x += __cuda_local_var_368073_7_non_const_x_move_direction;
#line 2708 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368080_19_non_const_y_to_go == (0.0))
#line 2709 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2710 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (0.080000000000000002);
#line 2711 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_16_non_const_voxel_y -= __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2712 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2713 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2716 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2716 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2718 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368080_19_non_const_y_to_go, __cuda_local_var_368074_10_non_const_delta_yx)));
#line 2719 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = __cuda_local_var_368080_19_non_const_y_to_go;
#line 2720 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_34_non_const_z_move = (__cuda_local_var_368074_30_non_const_delta_zy * __cuda_local_var_368080_19_non_const_y_to_go);
#line 2721 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go -= (__cuda_local_var_368075_10_non_const_x_move * ((double)(abs(__cuda_local_var_368073_7_non_const_x_move_direction))));
#line 2722 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (0.080000000000000002);
#line 2723 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_28_non_const_z_to_go -= (__cuda_local_var_368075_34_non_const_z_move * ((double)(abs(__cuda_local_var_368073_43_non_const_z_move_direction))));
#line 2727 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_16_non_const_voxel_y -= __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2728 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2728 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2732 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368084_7_non_const_voxel = ((__cuda_local_var_368082_7_non_const_voxel_x + (__cuda_local_var_368082_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368082_25_non_const_voxel_z * 200) * 200));
#line 2733 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368085_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368084_7_non_const_voxel == __cuda_local_var_368084_14_non_const_voxel_out) || (__cuda_local_var_368082_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368082_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368082_25_non_const_voxel_z >= 24)));
#line 2734 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368085_8_non_const_end_walk))
#line 2734 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2735 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((MSC_counts + __cuda_local_var_368084_7_non_const_voxel), 1);
#line 2735 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2736 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2737 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2739 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2739 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2741 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_368085_8_non_const_end_walk))
#line 2742 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2744 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368081_23_non_const_y_extension = ((double)(fdivide(__cuda_local_var_368080_19_non_const_y_to_go, __cuda_local_var_368074_10_non_const_delta_yx)));
#line 2746 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368080_10_non_const_x_to_go <= __cuda_local_var_368081_23_non_const_y_extension)
#line 2747 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2749 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = __cuda_local_var_368080_10_non_const_x_to_go;
#line 2750 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = (__cuda_local_var_368074_10_non_const_delta_yx * __cuda_local_var_368080_10_non_const_x_to_go);
#line 2751 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go = (0.080000000000000002);
#line 2753 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go -= (__cuda_local_var_368075_22_non_const_y_move * ((double)(abs(__cuda_local_var_368073_25_non_const_y_move_direction))));
#line 2754 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_7_non_const_voxel_x += __cuda_local_var_368073_7_non_const_x_move_direction;
#line 2755 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368080_19_non_const_y_to_go == (0.0))
#line 2756 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2757 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (0.080000000000000002);
#line 2758 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_16_non_const_voxel_y -= __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2759 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2760 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2763 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2763 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2765 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368080_19_non_const_y_to_go, __cuda_local_var_368074_10_non_const_delta_yx)));
#line 2766 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368075_22_non_const_y_move = __cuda_local_var_368080_19_non_const_y_to_go;
#line 2767 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_10_non_const_x_to_go -= (__cuda_local_var_368075_10_non_const_x_move * ((double)(abs(__cuda_local_var_368073_7_non_const_x_move_direction))));
#line 2769 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368080_19_non_const_y_to_go = (0.080000000000000002);
#line 2770 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368082_16_non_const_voxel_y -= __cuda_local_var_368073_25_non_const_y_move_direction;
#line 2771 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2774 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368084_7_non_const_voxel = ((__cuda_local_var_368082_7_non_const_voxel_x + (__cuda_local_var_368082_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368082_25_non_const_voxel_z * 200) * 200));
#line 2775 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368085_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368084_7_non_const_voxel == __cuda_local_var_368084_14_non_const_voxel_out) || (__cuda_local_var_368082_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368082_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368082_25_non_const_voxel_z >= 24)));
#line 2776 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368085_8_non_const_end_walk))
#line 2776 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2777 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((MSC_counts + __cuda_local_var_368084_7_non_const_voxel), 1);
#line 2777 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2778 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2780 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2781 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2782 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2782 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2793 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z22MSC_edge_detection_GPUPi(
#line 2793 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *MSC_counts){
#line 2793 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2794 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2794 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2160;
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368245_6_non_const_row;
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368245_24_non_const_column;
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368245_45_non_const_slice;
#line 2796 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368246_6_non_const_voxel;
#line 2797 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368247_8_non_const_x;
#line 2798 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368248_8_non_const_y;
#line 2799 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368249_6_non_const_difference;
#line 2799 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368249_18_non_const_max_difference;
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368245_6_non_const_row = ((int)(blockIdx.y));
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368245_24_non_const_column = ((int)(blockIdx.x));
#line 2795 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368245_45_non_const_slice = ((int)(threadIdx.x));
#line 2796 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368246_6_non_const_voxel = ((__cuda_local_var_368245_24_non_const_column + (__cuda_local_var_368245_6_non_const_row * 200)) + ((__cuda_local_var_368245_45_non_const_slice * 200) * 200));
#line 2797 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368247_8_non_const_x = ((float)((((double)(__cuda_local_var_368245_24_non_const_column - 100)) + (0.5)) * (0.080000000000000002)));
#line 2798 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368248_8_non_const_y = ((float)((((double)(100 - __cuda_local_var_368245_6_non_const_row)) - (0.5)) * (0.080000000000000002)));
#line 2799 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368249_18_non_const_max_difference = 0;
#line 2800 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__cuda_local_var_368245_6_non_const_row != 0) && (__cuda_local_var_368245_6_non_const_row != 199)) && (__cuda_local_var_368245_24_non_const_column != 0)) && (__cuda_local_var_368245_24_non_const_column != 199))
#line 2801 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2801 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2802 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_row;
#line 2802 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_row = (__cuda_local_var_368245_6_non_const_row - 1);
#line 2802 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_row <= (__cuda_local_var_368245_6_non_const_row + 1)); current_row++)
#line 2803 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2803 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2804 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_column;
#line 2804 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_column = (__cuda_local_var_368245_24_non_const_column - 1);
#line 2804 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_column <= (__cuda_local_var_368245_24_non_const_column + 1)); current_column++)
#line 2805 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2806 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368249_6_non_const_difference = ((MSC_counts[__cuda_local_var_368246_6_non_const_voxel]) - (MSC_counts[((current_column + (current_row * 200)) + ((__cuda_local_var_368245_45_non_const_slice * 200) * 200))]));
#line 2807 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368249_6_non_const_difference > __cuda_local_var_368249_18_non_const_max_difference)
#line 2807 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2808 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368249_18_non_const_max_difference = __cuda_local_var_368249_6_non_const_difference;
#line 2808 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2809 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2809 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2810 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2810 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2811 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2812 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
__syncthreads();
#line 2812 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2813 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368249_18_non_const_max_difference > 50)
#line 2813 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2814 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(MSC_counts[__cuda_local_var_368246_6_non_const_voxel]) = 0;
#line 2814 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2814 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2814 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2816 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(MSC_counts[__cuda_local_var_368246_6_non_const_voxel]) = 1;
#line 2816 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2817 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)((_Z8_Pow_intIfET_S0_i(__cuda_local_var_368247_8_non_const_x, 2)) + (_Z8_Pow_intIfET_S0_i(__cuda_local_var_368248_8_non_const_y, 2)))) >= ((__T2160 = ((8.0) - ((double)(fdivide((fmax((0.080000000000000002), (0.080000000000000002))), (2.0)))))) , (_Z8_Pow_intIdET_S0_i(__T2160, 2))))
#line 2817 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2818 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(MSC_counts[__cuda_local_var_368246_6_non_const_voxel]) = 0;
#line 2818 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2820 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2820 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2832 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z6SM_GPUiPiS_PbPfS1_S1_S1_S1_S1_S1_(
#line 2834 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
const int num_histories, 
#line 2834 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *SM_counts, 
#line 2834 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *bin_num, 
#line 2834 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *missed_recon_volume, 
#line 2834 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *WEPL, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_entry, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_entry, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_entry, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *x_exit, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *y_exit, 
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float *z_exit){
#line 2835 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2837 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2838 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368288_6_non_const_i;
#line 2838 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368288_6_non_const_i = ((int)((threadIdx.x) + ((blockIdx.x) * 1024U)));
#line 2839 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((__cuda_local_var_368288_6_non_const_i < num_histories) && (!(missed_recon_volume[__cuda_local_var_368288_6_non_const_i]))) && (((double)(WEPL[__cuda_local_var_368288_6_non_const_i])) >= (6.0)))
#line 2840 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2840 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2161;
#line 2841 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2162;
#line 2842 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2163;
#line 2843 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2164;
#line 2844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2165;
#line 2845 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __T2166;
#line 2844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368294_7_non_const_x_move_direction;
#line 2844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2844 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368294_43_non_const_z_move_direction;
#line 2845 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368295_10_non_const_delta_yx;
#line 2845 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368295_20_non_const_delta_zx;
#line 2845 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368295_30_non_const_delta_zy;
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368296_10_non_const_x_move;
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368296_22_non_const_y_move;
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368296_34_non_const_z_move;
#line 2851 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368301_10_non_const_x_to_go;
#line 2851 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368301_19_non_const_y_to_go;
#line 2851 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368301_28_non_const_z_to_go;
#line 2852 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368302_10_non_const_x_extension;
#line 2852 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368302_23_non_const_y_extension;
#line 2853 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368303_7_non_const_voxel_x;
#line 2853 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368303_16_non_const_voxel_y;
#line 2853 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368303_25_non_const_voxel_z;
#line 2855 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368305_7_non_const_voxel;
#line 2855 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368305_14_non_const_voxel_out;
#line 2856 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_368306_8_non_const_end_walk;
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = (0.0);
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = (0.0);
#line 2846 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_34_non_const_z_move = (0.0);
#line 2860 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368294_7_non_const_x_move_direction = (((int)((x_entry[__cuda_local_var_368288_6_non_const_i]) <= (x_exit[__cuda_local_var_368288_6_non_const_i]))) - ((int)((x_entry[__cuda_local_var_368288_6_non_const_i]) >= (x_exit[__cuda_local_var_368288_6_non_const_i]))));
#line 2861 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368294_25_non_const_y_move_direction = (((int)((y_entry[__cuda_local_var_368288_6_non_const_i]) <= (y_exit[__cuda_local_var_368288_6_non_const_i]))) - ((int)((y_entry[__cuda_local_var_368288_6_non_const_i]) >= (y_exit[__cuda_local_var_368288_6_non_const_i]))));
#line 2862 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368294_43_non_const_z_move_direction = (((int)((z_entry[__cuda_local_var_368288_6_non_const_i]) <= (z_exit[__cuda_local_var_368288_6_non_const_i]))) - ((int)((z_entry[__cuda_local_var_368288_6_non_const_i]) >= (z_exit[__cuda_local_var_368288_6_non_const_i]))));
#line 2863 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go = (_Z15x_remaining_GPUdiRi(((double)(x_entry[__cuda_local_var_368288_6_non_const_i])), __cuda_local_var_368294_7_non_const_x_move_direction, (&__cuda_local_var_368303_7_non_const_voxel_x)));
#line 2864 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (_Z15y_remaining_GPUdiRi(((double)(y_entry[__cuda_local_var_368288_6_non_const_i])), (-__cuda_local_var_368294_25_non_const_y_move_direction), (&__cuda_local_var_368303_16_non_const_voxel_y)));
#line 2865 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_28_non_const_z_to_go = (_Z15z_remaining_GPUdiRi(((double)(z_entry[__cuda_local_var_368288_6_non_const_i])), (-__cuda_local_var_368294_43_non_const_z_move_direction), (&__cuda_local_var_368303_25_non_const_voxel_z)));
#line 2866 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368305_7_non_const_voxel = ((__cuda_local_var_368303_7_non_const_voxel_x + (__cuda_local_var_368303_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368303_25_non_const_voxel_z * 200) * 200));
#line 2867 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368305_14_non_const_voxel_out = (_Z20position_2_voxel_GPUddd(((double)(x_exit[__cuda_local_var_368288_6_non_const_i])), ((double)(y_exit[__cuda_local_var_368288_6_non_const_i])), ((double)(z_exit[__cuda_local_var_368288_6_non_const_i]))));
#line 2872 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368295_10_non_const_delta_yx = ((double)(fdividef(((double)((__T2161 = ((y_exit[__cuda_local_var_368288_6_non_const_i]) - (y_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2161)))), ((double)((__T2162 = ((x_exit[__cuda_local_var_368288_6_non_const_i]) - (x_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2162)))))));
#line 2873 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368295_20_non_const_delta_zx = ((double)(fdividef(((double)((__T2163 = ((z_exit[__cuda_local_var_368288_6_non_const_i]) - (z_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2163)))), ((double)((__T2164 = ((x_exit[__cuda_local_var_368288_6_non_const_i]) - (x_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2164)))))));
#line 2874 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368295_30_non_const_delta_zy = ((double)(fdividef(((double)((__T2165 = ((z_exit[__cuda_local_var_368288_6_non_const_i]) - (z_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2165)))), ((double)((__T2166 = ((y_exit[__cuda_local_var_368288_6_non_const_i]) - (y_entry[__cuda_local_var_368288_6_non_const_i]))) , (fabsf(__T2166)))))));
#line 2878 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368306_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368305_7_non_const_voxel == __cuda_local_var_368305_14_non_const_voxel_out) || (__cuda_local_var_368303_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368303_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368303_25_non_const_voxel_z >= 24)));
#line 2879 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368306_8_non_const_end_walk))
#line 2879 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2880 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((SM_counts + __cuda_local_var_368305_7_non_const_voxel), 1);
#line 2880 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2884 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368294_43_non_const_z_move_direction != 0)
#line 2885 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2887 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_368306_8_non_const_end_walk))
#line 2888 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2890 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368302_10_non_const_x_extension = (__cuda_local_var_368295_20_non_const_delta_zx * __cuda_local_var_368301_10_non_const_x_to_go);
#line 2891 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368302_23_non_const_y_extension = (__cuda_local_var_368295_30_non_const_delta_zy * __cuda_local_var_368301_19_non_const_y_to_go);
#line 2892 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((__cuda_local_var_368301_28_non_const_z_to_go <= __cuda_local_var_368302_10_non_const_x_extension) && (__cuda_local_var_368301_28_non_const_z_to_go <= __cuda_local_var_368302_23_non_const_y_extension))
#line 2893 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2895 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368301_28_non_const_z_to_go, __cuda_local_var_368295_20_non_const_delta_zx)));
#line 2896 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = ((double)(fdivide(__cuda_local_var_368301_28_non_const_z_to_go, __cuda_local_var_368295_30_non_const_delta_zy)));
#line 2897 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_34_non_const_z_move = __cuda_local_var_368301_28_non_const_z_to_go;
#line 2898 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go -= (__cuda_local_var_368296_10_non_const_x_move * ((double)(abs(__cuda_local_var_368294_7_non_const_x_move_direction))));
#line 2899 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go -= (__cuda_local_var_368296_22_non_const_y_move * ((double)(abs(__cuda_local_var_368294_25_non_const_y_move_direction))));
#line 2902 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_28_non_const_z_to_go = (0.25);
#line 2903 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_25_non_const_voxel_z -= __cuda_local_var_368294_43_non_const_z_move_direction;
#line 2904 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368301_10_non_const_x_to_go == (0.0))
#line 2905 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2906 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_7_non_const_voxel_x += __cuda_local_var_368294_7_non_const_x_move_direction;
#line 2907 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go = (0.080000000000000002);
#line 2908 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2909 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368301_19_non_const_y_to_go == (0.0))
#line 2910 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2911 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_16_non_const_voxel_y -= __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2912 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (0.080000000000000002);
#line 2913 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2914 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2914 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2914 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2916 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368302_10_non_const_x_extension <= __cuda_local_var_368302_23_non_const_y_extension)
#line 2917 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2919 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = __cuda_local_var_368301_10_non_const_x_to_go;
#line 2920 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = (__cuda_local_var_368295_10_non_const_delta_yx * __cuda_local_var_368301_10_non_const_x_to_go);
#line 2921 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_34_non_const_z_move = (__cuda_local_var_368295_20_non_const_delta_zx * __cuda_local_var_368301_10_non_const_x_to_go);
#line 2922 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go = (0.080000000000000002);
#line 2923 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go -= (__cuda_local_var_368296_22_non_const_y_move * ((double)(abs(__cuda_local_var_368294_25_non_const_y_move_direction))));
#line 2924 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_28_non_const_z_to_go -= (__cuda_local_var_368296_34_non_const_z_move * ((double)(abs(__cuda_local_var_368294_43_non_const_z_move_direction))));
#line 2928 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_7_non_const_voxel_x += __cuda_local_var_368294_7_non_const_x_move_direction;
#line 2929 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368301_19_non_const_y_to_go == (0.0))
#line 2930 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2931 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (0.080000000000000002);
#line 2932 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_16_non_const_voxel_y -= __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2933 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2934 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2937 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2937 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2939 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368301_19_non_const_y_to_go, __cuda_local_var_368295_10_non_const_delta_yx)));
#line 2940 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = __cuda_local_var_368301_19_non_const_y_to_go;
#line 2941 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_34_non_const_z_move = (__cuda_local_var_368295_30_non_const_delta_zy * __cuda_local_var_368301_19_non_const_y_to_go);
#line 2942 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go -= (__cuda_local_var_368296_10_non_const_x_move * ((double)(abs(__cuda_local_var_368294_7_non_const_x_move_direction))));
#line 2943 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (0.080000000000000002);
#line 2944 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_28_non_const_z_to_go -= (__cuda_local_var_368296_34_non_const_z_move * ((double)(abs(__cuda_local_var_368294_43_non_const_z_move_direction))));
#line 2948 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_16_non_const_voxel_y -= __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2949 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2949 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2953 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368305_7_non_const_voxel = ((__cuda_local_var_368303_7_non_const_voxel_x + (__cuda_local_var_368303_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368303_25_non_const_voxel_z * 200) * 200));
#line 2954 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368306_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368305_7_non_const_voxel == __cuda_local_var_368305_14_non_const_voxel_out) || (__cuda_local_var_368303_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368303_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368303_25_non_const_voxel_z >= 24)));
#line 2955 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368306_8_non_const_end_walk))
#line 2955 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2956 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((SM_counts + __cuda_local_var_368305_7_non_const_voxel), 1);
#line 2956 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2957 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2958 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2960 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2960 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2962 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
while (!(__cuda_local_var_368306_8_non_const_end_walk))
#line 2963 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2965 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368302_23_non_const_y_extension = ((double)(fdivide(__cuda_local_var_368301_19_non_const_y_to_go, __cuda_local_var_368295_10_non_const_delta_yx)));
#line 2967 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368301_10_non_const_x_to_go <= __cuda_local_var_368302_23_non_const_y_extension)
#line 2968 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2970 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = __cuda_local_var_368301_10_non_const_x_to_go;
#line 2971 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = (__cuda_local_var_368295_10_non_const_delta_yx * __cuda_local_var_368301_10_non_const_x_to_go);
#line 2972 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go = (0.080000000000000002);
#line 2974 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go -= (__cuda_local_var_368296_22_non_const_y_move * ((double)(abs(__cuda_local_var_368294_25_non_const_y_move_direction))));
#line 2975 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_7_non_const_voxel_x += __cuda_local_var_368294_7_non_const_x_move_direction;
#line 2976 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368301_19_non_const_y_to_go == (0.0))
#line 2977 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2978 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (0.080000000000000002);
#line 2979 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_16_non_const_voxel_y -= __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2980 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2981 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2984 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2984 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2986 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_10_non_const_x_move = ((double)(fdivide(__cuda_local_var_368301_19_non_const_y_to_go, __cuda_local_var_368295_10_non_const_delta_yx)));
#line 2987 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368296_22_non_const_y_move = __cuda_local_var_368301_19_non_const_y_to_go;
#line 2988 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_10_non_const_x_to_go -= (__cuda_local_var_368296_10_non_const_x_move * ((double)(abs(__cuda_local_var_368294_7_non_const_x_move_direction))));
#line 2990 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368301_19_non_const_y_to_go = (0.080000000000000002);
#line 2991 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368303_16_non_const_voxel_y -= __cuda_local_var_368294_25_non_const_y_move_direction;
#line 2992 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2995 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368305_7_non_const_voxel = ((__cuda_local_var_368303_7_non_const_voxel_x + (__cuda_local_var_368303_16_non_const_voxel_y * 200)) + ((__cuda_local_var_368303_25_non_const_voxel_z * 200) * 200));
#line 2996 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368306_8_non_const_end_walk = ((__nv_bool)((((__cuda_local_var_368305_7_non_const_voxel == __cuda_local_var_368305_14_non_const_voxel_out) || (__cuda_local_var_368303_7_non_const_voxel_x >= 200)) || (__cuda_local_var_368303_16_non_const_voxel_y >= 200)) || (__cuda_local_var_368303_25_non_const_voxel_z >= 24)));
#line 2997 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (!(__cuda_local_var_368306_8_non_const_end_walk))
#line 2997 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2998 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
_ZN43_INTERNAL_26_pCT_Reconstruction_cpp1_ii_ped9atomicAddEPii((SM_counts + __cuda_local_var_368305_7_non_const_voxel), 1);
#line 2998 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2999 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3001 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3002 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3003 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 3003 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 3067 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z21SM_edge_detection_GPUPiS_(
#line 3067 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *SM_counts, 
#line 3067 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *SM_threshold){
#line 3067 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3068 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368519_6_non_const_row;
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368519_24_non_const_column;
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368519_45_non_const_slice;
#line 3070 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368520_8_non_const_x;
#line 3071 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368521_8_non_const_y;
#line 3072 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368522_6_non_const_voxel;
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368519_6_non_const_row = ((int)(blockIdx.y));
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368519_24_non_const_column = ((int)(blockIdx.x));
#line 3069 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368519_45_non_const_slice = ((int)(threadIdx.x));
#line 3070 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368520_8_non_const_x = ((float)((((double)(__cuda_local_var_368519_24_non_const_column - 100)) + (0.5)) * (0.080000000000000002)));
#line 3071 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368521_8_non_const_y = ((float)((((double)(100 - __cuda_local_var_368519_6_non_const_row)) - (0.5)) * (0.080000000000000002)));
#line 3072 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368522_6_non_const_voxel = ((__cuda_local_var_368519_24_non_const_column + (__cuda_local_var_368519_6_non_const_row * 200)) + ((__cuda_local_var_368519_45_non_const_slice * 200) * 200));
#line 3073 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368522_6_non_const_voxel < 960000)
#line 3074 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3074 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2167;
#line 3075 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)(SM_counts[__cuda_local_var_368522_6_non_const_voxel])) > ((1.0) * ((double)(SM_threshold[__cuda_local_var_368519_45_non_const_slice]))))
#line 3075 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3076 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368522_6_non_const_voxel]) = 1;
#line 3076 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3076 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 3076 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3078 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368522_6_non_const_voxel]) = 0;
#line 3078 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3079 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)((_Z8_Pow_intIfET_S0_i(__cuda_local_var_368520_8_non_const_x, 2)) + (_Z8_Pow_intIfET_S0_i(__cuda_local_var_368521_8_non_const_y, 2)))) >= ((__T2167 = ((8.0) - ((double)(fdivide((fmax((0.080000000000000002), (0.080000000000000002))), (2.0)))))) , (_Z8_Pow_intIdET_S0_i(__T2167, 2))))
#line 3079 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368522_6_non_const_voxel]) = 0;
#line 3080 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3081 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 3082 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 3142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z23SM_edge_detection_GPU_2PiS_(
#line 3142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *SM_counts, 
#line 3142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *SM_differences){
#line 3142 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3143 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3143 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2168;
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368594_6_non_const_row;
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368594_24_non_const_column;
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368594_45_non_const_slice;
#line 3145 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368595_6_non_const_voxel;
#line 3146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368596_6_non_const_difference;
#line 3146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368596_18_non_const_max_difference;
#line 3161 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368611_6_non_const_slice_threshold;
#line 3173 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368623_8_non_const_x;
#line 3174 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_368624_8_non_const_y;
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368594_6_non_const_row = ((int)(blockIdx.y));
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368594_24_non_const_column = ((int)(blockIdx.x));
#line 3144 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368594_45_non_const_slice = ((int)(threadIdx.x));
#line 3145 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368595_6_non_const_voxel = ((__cuda_local_var_368594_24_non_const_column + (__cuda_local_var_368594_6_non_const_row * 200)) + ((__cuda_local_var_368594_45_non_const_slice * 200) * 200));
#line 3146 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368596_18_non_const_max_difference = 0;
#line 3147 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((((__cuda_local_var_368594_6_non_const_row != 0) && (__cuda_local_var_368594_6_non_const_row != 199)) && (__cuda_local_var_368594_24_non_const_column != 0)) && (__cuda_local_var_368594_24_non_const_column != 199))
#line 3148 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3148 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3149 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_row;
#line 3149 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_row = (__cuda_local_var_368594_6_non_const_row - 1);
#line 3149 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_row <= (__cuda_local_var_368594_6_non_const_row + 1)); current_row++)
#line 3150 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3150 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int current_column;
#line 3151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
current_column = (__cuda_local_var_368594_24_non_const_column - 1);
#line 3151 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (current_column <= (__cuda_local_var_368594_24_non_const_column + 1)); current_column++)
#line 3152 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3153 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368596_6_non_const_difference = ((SM_counts[__cuda_local_var_368595_6_non_const_voxel]) - (SM_counts[((current_column + (current_row * 200)) + ((__cuda_local_var_368594_45_non_const_slice * 200) * 200))]));
#line 3154 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368596_6_non_const_difference > __cuda_local_var_368596_18_non_const_max_difference)
#line 3154 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368596_18_non_const_max_difference = __cuda_local_var_368596_6_non_const_difference;
#line 3155 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3156 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3156 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3157 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3157 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3158 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_differences[__cuda_local_var_368595_6_non_const_voxel]) = __cuda_local_var_368596_18_non_const_max_difference;
#line 3159 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3160 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
__syncthreads();
#line 3160 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3162 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368596_18_non_const_max_difference = 0;
#line 3162 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3163 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int pixel;
#line 3163 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
pixel = 0;
#line 3163 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (pixel < 40000); pixel++)
#line 3164 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3165 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368595_6_non_const_voxel = (pixel + ((__cuda_local_var_368594_45_non_const_slice * 200) * 200));
#line 3166 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if ((SM_differences[__cuda_local_var_368595_6_non_const_voxel]) > __cuda_local_var_368596_18_non_const_max_difference)
#line 3167 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3168 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368596_18_non_const_max_difference = (SM_differences[__cuda_local_var_368595_6_non_const_voxel]);
#line 3169 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368611_6_non_const_slice_threshold = (SM_counts[__cuda_local_var_368595_6_non_const_voxel]);
#line 3170 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3171 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3171 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3172 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v6.0\\include\\device_functions.h"
__syncthreads();
#line 3172 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3173 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368623_8_non_const_x = ((float)((((double)(__cuda_local_var_368594_24_non_const_column - 100)) + (0.5)) * (0.080000000000000002)));
#line 3174 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368624_8_non_const_y = ((float)((((double)(100 - __cuda_local_var_368594_6_non_const_row)) - (0.5)) * (0.080000000000000002)));
#line 3175 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_368595_6_non_const_voxel < 960000)
#line 3176 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3177 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)(SM_counts[__cuda_local_var_368595_6_non_const_voxel])) > ((1.0) * ((double)__cuda_local_var_368611_6_non_const_slice_threshold)))
#line 3177 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3178 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368595_6_non_const_voxel]) = 1;
#line 3178 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3178 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 3178 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3180 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368595_6_non_const_voxel]) = 0;
#line 3180 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3181 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((double)((_Z8_Pow_intIfET_S0_i(__cuda_local_var_368623_8_non_const_x, 2)) + (_Z8_Pow_intIfET_S0_i(__cuda_local_var_368624_8_non_const_y, 2)))) >= ((__T2168 = ((8.0) - ((double)(fdivide((fmax((0.080000000000000002), (0.080000000000000002))), (2.0)))))) , (_Z8_Pow_intIdET_S0_i(__T2168, 2))))
#line 3181 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3182 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(SM_counts[__cuda_local_var_368595_6_non_const_voxel]) = 0;
#line 3182 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3183 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 3184 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 4223 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z28create_hull_image_hybrid_GPURPbRPf(
#line 4223 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool **x_hull, 
#line 4223 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
float **FBP_image){
#line 4223 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4224 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_369675_6_non_const_row;
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_369675_24_non_const_column;
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_369675_45_non_const_slice;
#line 4226 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_369676_6_non_const_voxel;
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_369675_6_non_const_row = ((int)(blockIdx.y));
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_369675_24_non_const_column = ((int)(blockIdx.x));
#line 4225 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_369675_45_non_const_slice = ((int)(threadIdx.x));
#line 4226 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_369676_6_non_const_voxel = ((__cuda_local_var_369675_24_non_const_column + (__cuda_local_var_369675_6_non_const_row * 200)) + ((__cuda_local_var_369675_45_non_const_slice * 200) * 200));
#line 4227 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
((*FBP_image)[__cuda_local_var_369676_6_non_const_voxel]) *= ((float)((*x_hull)[__cuda_local_var_369676_6_non_const_voxel]));
#line 4228 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 4228 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 4899 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z13test_func_GPUPi(
#line 4899 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *a){
#line 4899 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4900 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4900 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2169;
#line 4901 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __T2170;
#line 4902 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370352_9_non_const_delta_yx;
#line 4903 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370353_9_non_const_x_to_go;
#line 4904 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370354_9_non_const_y_to_go;
#line 4905 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370355_9_non_const_y_to_go2;
#line 4906 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370356_9_non_const_y_move;
#line 4918 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_370368_9_non_const_y;
#line 4928 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_370378_8_non_const_x;
#line 4930 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_370380_8_non_const_z;
#line 4931 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_370381_8_non_const_z2;
#line 4932 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 float __cuda_local_var_370382_8_non_const_z3;
#line 4933 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_370383_7_non_const_less;
#line 4934 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_370384_7_non_const_less2;
#line 4935 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 __nv_bool __cuda_local_var_370385_7_non_const_less3;
#line 4902 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370352_9_non_const_delta_yx = (1.0);
#line 4903 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370353_9_non_const_x_to_go = (0.024);
#line 4904 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370354_9_non_const_y_to_go = (0.014999999999999999);
#line 4905 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370355_9_non_const_y_to_go2 = __cuda_local_var_370354_9_non_const_y_to_go;
#line 4906 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370356_9_non_const_y_move = (__cuda_local_var_370352_9_non_const_delta_yx * __cuda_local_var_370353_9_non_const_x_to_go);
#line 4907 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (1)
#line 4907 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4908 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"-1"));
#line 4908 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4909 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (1)
#line 4909 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4910 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"1"));
#line 4910 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4911 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (0)
#line 4911 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4912 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"0"));
#line 4912 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4913 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370354_9_non_const_y_to_go -= (((double)(!(sin(__cuda_local_var_370352_9_non_const_delta_yx)))) * __cuda_local_var_370356_9_non_const_y_move);
#line 4915 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370355_9_non_const_y_to_go2 -= ((((double)(!(sin(__cuda_local_var_370352_9_non_const_delta_yx)))) * __cuda_local_var_370352_9_non_const_delta_yx) * __cuda_local_var_370353_9_non_const_x_to_go);
#line 4917 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)" delta_yx = %8f y_move = %8f y_to_go = %8f y_to_go2 = %8f\n"), __cuda_local_var_370352_9_non_const_delta_yx, __cuda_local_var_370356_9_non_const_y_move, __cuda_local_var_370354_9_non_const_y_to_go, __cuda_local_var_370355_9_non_const_y_to_go2);
#line 4918 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370368_9_non_const_y = (1.3600000000000001);
#line 4928 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370378_8_non_const_x = (1.0F);
#line 4929 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370368_9_non_const_y = (1.0);
#line 4930 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370380_8_non_const_z = ((float)(fdivide((fabs((2.0))), ((__T2169 = (((double)__cuda_local_var_370378_8_non_const_x) - __cuda_local_var_370368_9_non_const_y)) , (fabs(__T2169))))));
#line 4931 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370381_8_non_const_z2 = ((float)(fdivide((fabs((-2.0))), ((__T2170 = (((double)__cuda_local_var_370378_8_non_const_x) - __cuda_local_var_370368_9_non_const_y)) , (fabs(__T2170))))));
#line 4932 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370382_8_non_const_z3 = (__cuda_local_var_370380_8_non_const_z * __cuda_local_var_370378_8_non_const_x);
#line 4933 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370383_7_non_const_less = ((__nv_bool)(__cuda_local_var_370380_8_non_const_z < __cuda_local_var_370381_8_non_const_z2));
#line 4934 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370384_7_non_const_less2 = ((__nv_bool)(__cuda_local_var_370378_8_non_const_x < __cuda_local_var_370380_8_non_const_z));
#line 4935 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_370385_7_non_const_less3 = ((__nv_bool)(__cuda_local_var_370378_8_non_const_x < __cuda_local_var_370381_8_non_const_z2));
#line 4936 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_370383_7_non_const_less)
#line 4936 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4937 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(a[0]) = 1;
#line 4937 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4938 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_370384_7_non_const_less2)
#line 4938 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4939 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(a[1]) = 1;
#line 4939 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4940 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (__cuda_local_var_370385_7_non_const_less3)
#line 4940 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 4941 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(a[2]) = 1;
#line 4941 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 4943 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
printf(((const char *)"%3f %3f %3f %d %d %d\n"), ((double)__cuda_local_var_370380_8_non_const_z), ((double)__cuda_local_var_370381_8_non_const_z2), ((double)__cuda_local_var_370382_8_non_const_z3), ((int)__cuda_local_var_370383_7_non_const_less), ((int)__cuda_local_var_370384_7_non_const_less2), ((int)__cuda_local_var_370385_7_non_const_less3));
#line 4951 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 4951 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z19initialize_hull_GPUIbEvPT_(
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *hull){
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2109 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_6_non_const_row;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_24_non_const_column;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_45_non_const_slice;
#line 2111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367561_6_non_const_voxel;
#line 2112 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367562_9_non_const_x;
#line 2113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367563_9_non_const_y;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_6_non_const_row = ((int)(blockIdx.y));
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_24_non_const_column = ((int)(blockIdx.x));
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_45_non_const_slice = ((int)(threadIdx.x));
#line 2111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367561_6_non_const_voxel = ((__cuda_local_var_367560_24_non_const_column + (__cuda_local_var_367560_6_non_const_row * 200)) + ((__cuda_local_var_367560_45_non_const_slice * 200) * 200));
#line 2112 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367562_9_non_const_x = ((((double)(__cuda_local_var_367560_24_non_const_column - 100)) + (0.5)) * (0.080000000000000002));
#line 2113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367563_9_non_const_y = ((((double)(100 - __cuda_local_var_367560_6_non_const_row)) - (0.5)) * (0.080000000000000002));
#line 2114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((_Z8_Pow_intIdET_S0_i(__cuda_local_var_367562_9_non_const_x, 2)) + (_Z8_Pow_intIdET_S0_i(__cuda_local_var_367563_9_non_const_y, 2))) < (_Z8_Pow_intIdET_S0_i((8.0), 2)))
#line 2114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(hull[__cuda_local_var_367561_6_non_const_voxel]) = ((__nv_bool)1);
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2117 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(hull[__cuda_local_var_367561_6_non_const_voxel]) = ((__nv_bool)0);
#line 2117 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2118 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2118 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z19initialize_hull_GPUIiEvPT_(
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
int *hull){
#line 2108 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2109 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_6_non_const_row;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_24_non_const_column;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367560_45_non_const_slice;
#line 2111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_367561_6_non_const_voxel;
#line 2112 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367562_9_non_const_x;
#line 2113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_367563_9_non_const_y;
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_6_non_const_row = ((int)(blockIdx.y));
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_24_non_const_column = ((int)(blockIdx.x));
#line 2110 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367560_45_non_const_slice = ((int)(threadIdx.x));
#line 2111 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367561_6_non_const_voxel = ((__cuda_local_var_367560_24_non_const_column + (__cuda_local_var_367560_6_non_const_row * 200)) + ((__cuda_local_var_367560_45_non_const_slice * 200) * 200));
#line 2112 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367562_9_non_const_x = ((((double)(__cuda_local_var_367560_24_non_const_column - 100)) + (0.5)) * (0.080000000000000002));
#line 2113 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_367563_9_non_const_y = ((((double)(100 - __cuda_local_var_367560_6_non_const_row)) - (0.5)) * (0.080000000000000002));
#line 2114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (((_Z8_Pow_intIdET_S0_i(__cuda_local_var_367562_9_non_const_x, 2)) + (_Z8_Pow_intIdET_S0_i(__cuda_local_var_367563_9_non_const_y, 2))) < (_Z8_Pow_intIdET_S0_i((8.0), 2)))
#line 2114 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(hull[__cuda_local_var_367561_6_non_const_voxel]) = 1;
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 2115 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 2117 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(hull[__cuda_local_var_367561_6_non_const_voxel]) = 0;
#line 2117 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 2118 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 2118 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__attribute__((global)) __attribute__((__used__)) void _Z20averaging_filter_GPUIbEvPT_S1_b(
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *image, 
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool *new_value, 
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__nv_bool is_hull){
#line 3265 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3266 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3267 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368717_6_non_const_voxel_x;
#line 3268 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368718_6_non_const_voxel_y;
#line 3269 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368719_6_non_const_voxel_z;
#line 3270 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368720_6_non_const_voxel;
#line 3271 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368721_6_non_const_left_edge;
#line 3272 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368722_6_non_const_right_edge;
#line 3273 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368723_6_non_const_top_edge;
#line 3274 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368724_6_non_const_bottom_edge;
#line 3275 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int __cuda_local_var_368725_6_non_const_neighborhood_voxels;
#line 3276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368726_9_non_const_sum_threshold;
#line 3277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 double __cuda_local_var_368727_9_non_const_sum;
#line 3267 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368717_6_non_const_voxel_x = ((int)(blockIdx.x));
#line 3268 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368718_6_non_const_voxel_y = ((int)(blockIdx.y));
#line 3269 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368719_6_non_const_voxel_z = ((int)(threadIdx.x));
#line 3270 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368720_6_non_const_voxel = ((__cuda_local_var_368717_6_non_const_voxel_x + (__cuda_local_var_368718_6_non_const_voxel_y * 200)) + ((__cuda_local_var_368719_6_non_const_voxel_z * 200) * 200));
#line 3271 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368721_6_non_const_left_edge = (max((__cuda_local_var_368717_6_non_const_voxel_x - 2), 0));
#line 3272 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368722_6_non_const_right_edge = (min((__cuda_local_var_368717_6_non_const_voxel_x + 2), 199));
#line 3273 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368723_6_non_const_top_edge = (max((__cuda_local_var_368718_6_non_const_voxel_y - 2), 0));
#line 3274 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368724_6_non_const_bottom_edge = (min((__cuda_local_var_368718_6_non_const_voxel_y + 2), 199));
#line 3275 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368725_6_non_const_neighborhood_voxels = (((__cuda_local_var_368722_6_non_const_right_edge - __cuda_local_var_368721_6_non_const_left_edge) + 1) * ((__cuda_local_var_368724_6_non_const_bottom_edge - __cuda_local_var_368723_6_non_const_top_edge) + 1));
#line 3276 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368726_9_non_const_sum_threshold = (((double)__cuda_local_var_368725_6_non_const_neighborhood_voxels) * (0.10000000000000001));
#line 3277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368727_9_non_const_sum = (0.0);
#line 3277 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int column;
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
column = __cuda_local_var_368721_6_non_const_left_edge;
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (column <= __cuda_local_var_368722_6_non_const_right_edge); column++)
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3280 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
 int row;
#line 3281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
row = __cuda_local_var_368723_6_non_const_top_edge;
#line 3281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
for (; (row <= __cuda_local_var_368724_6_non_const_bottom_edge); row++)
#line 3281 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
__cuda_local_var_368727_9_non_const_sum += ((double)(image[((column + (row * 200)) + ((__cuda_local_var_368719_6_non_const_voxel_z * 200) * 200))]));
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3282 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3283 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
if (is_hull)
#line 3283 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(new_value[__cuda_local_var_368720_6_non_const_voxel]) = ((__nv_bool)(__cuda_local_var_368727_9_non_const_sum > __cuda_local_var_368726_9_non_const_sum_threshold));
#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
else 
#line 3284 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
{
#line 3286 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
(new_value[__cuda_local_var_368720_6_non_const_voxel]) = ((__nv_bool)(((double)(fdivide(__cuda_local_var_368727_9_non_const_sum, ((double)__cuda_local_var_368725_6_non_const_neighborhood_voxels)))) != (0.0)));
#line 3286 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}
#line 3287 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
} 
#line 3287 "C:/Users/Blake/Documents/GitHub/pct-reconstruction/pCT_Reconstruction.cu"
}}

