//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//---------------------------------------------------------------- I/O directory paths and properties of scan data --------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
// Choose ONLY ONE option below and comment out key/value pairs associated with other options                                                                                       
// Option 1 : Specify path to directory where data is to be read from and/or written to explicitly                                                                                  
PROJECTION_DATA_DIR     = "C:/Users/Blake/Documents/pCT_Data/object_name/Experimental/MMDDYYYY/run_number/Output/MMDDYYYY"                                                          
PREPROCESSING_DIR       = "C:/Users/Blake/Documents/pCT_Data/object_name/Experimental/MMDDYYYY/run_number/Output/MMDDYYYY/Reconstruction/MMDDYYYY"                                  
//RECONSTRUCTION_DIR         = "C:/Users/Blake/Documents/pCT_Data/object_name/Experimental/MMDDYYYY/run_number/Output/MMDDYYYY/Reconstruction/MMDDYYYY/Images/MMDDYYYY"             
// Option 2 : Specify properties of input/output data and program combines these to generate path to directory where data is to be read from and/or written to                      
PATH_2_PCT_DATA_DIR     = "C:/Users/Blake/Documents"        // Path to where the pCT Data directory is located                                                                      
OBJECT                  = "object_name"                     // Defined name of object for which experimental/simulated data is desired                                              
RUN_DATE                = "MMDDYYYY"                        // Date when experimental/simulated data run was started                                                                
RUN_NUMBER              = "run_number"                      // Run # of desired experimental/simulated data                                                                         
PROJECTION_DATA_DATE    = "MMDDYYYY"                        // Date when projection data desired was generated                                                                      
PREPROCESS_DATE         = "MMDDYYYY"                        // Date when preprocessing data desired was generated                                                                   
// Option 3 : Comment out all key/value pairs above and program sets projection directory to current directory where program is executed and output directories by execution date   
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//--------------------------------------------------------------------- Data log entry options/parameters -----------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
ADD_DATA_LOG_ENTRY      = true                              // [T/F] Add log entry for data generated during execution (T) or not (F)                                               
USER_NAME               = "Blake_Schultze"                  // Enter your name so the "Preprocessed By" and "Reconstructed By" fields of the data log record who generated data     
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//--------------------------------------------------------------------- Enumerated type parameters/options ----------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
DATA_TYPE               = 0                                 // Specifies the source of the input data (EXPERIMENTAL = 0, GEANT4 = 1, TOPAS = 2)                                     
HULL_TYPE               = 0                                 // Specify which hull detection method to use for MLP calculations (IMPORT = 0, SC = 1, MSC = 2, SM = 3, FBP = 4)       
FBP_FILTER_TYPE         = 1                                 // Specifies which of the defined filters to use in FBP (RAM_LAK = 0, SHEPP_LOGAN = 1, NONE = 2)                        
X_0_TYPE                = 0                                 // Specify which initial iterate to use for reconstruction (IMPORT = 0, HULL = 1, FBP = 2, HYBRID = 3, ZEROS = 4)       
RECONSTRUCTION_METHOD   = 1                                 // Specify algorithm to use for image reconstruction (ART = 0, DROP = 1, BIP = 2, SAP = 3, ROBUST1 = 4, ROBUST2 = 5)    
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//---------------------------------------------------------------------- Computation/execution parameters -----------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
NUM_SCANS               = 1                                 // [#] Total number of scans of same object                                                                             
MAX_GPU_HISTORIES       = 1500000                           // [#] Number of histories to process on the GPU at a time, based on GPU capacity                                       
MAX_CUTS_HISTORIES      = 1500000                           // [#] Number of histories to process on the GPU at a time, based on GPU capacity                                       
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//-------------------------------------------------------- Image and bin sizing and preprocessing parameters/options ------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
GANTRY_ANGLE_INTERVAL   = 4                                 // [degrees] Angle between successive projection angles                                                                 
ANGULAR_BIN_SIZE        = 4.0                               // [degrees] Angle between adjacent bins in angular (rotation) direction                                                
SSD_T_SIZE              = 35.0                              // [cm] Length of SSD in t (lateral) direction                                                                          
SSD_V_SIZE              = 9.0                               // [cm] Length of SSD in v (vertical) direction                                                                         
T_BIN_SIZE              = 0.1                               // [cm] Distance between adjacent bins in t (lateral) direction                                                         
V_BIN_SIZE              = 0.25                              // [cm] Distance between adjacent bins in v (vertical) direction                                                        
//T_BINS                     = 350                                // *[#] Number of bins (i.e. quantization levels) for t (lateral) direction                                       
//V_BINS                     = 36                                // *[#] Number of bins (i.e. quantization levels) for v (vertical) direction                                       
T_SHIFT                 = 0.0                               // [cm] Amount by which to shift all t coordinates on input                                                             
U_SHIFT                 = 0.0                               // [cm] Amount by which to shift all u coordinates on input                                                             
V_SHIFT                 = 0.0                               // [cm] Amount by which to shift all v coordinates on input                                                             
SIGMAS_2_KEEP           = 3                                 // [#] Number of standard deviations from mean to allow before cutting the history                                      
RECON_CYL_RADIUS        = 7.0                               // [cm] Radius of reconstruction cylinder                                                                               
//RECON_CYL_HEIGHT         = 8.0                                // *[cm] Height of reconstruction cylinder                                                                          
COLUMNS                 = 200                               // [#] Number of voxels in the x direction (i.e., number of columns) of image                                           
ROWS                    = 200.4                             // [#] Number of voxels in the y direction (i.e., number of rows) of image                                              
//SLICES                     = 32                                // *[#] Number of voxels in the z direction (i.e., number of slices) of image                                      
//IMAGE_WIDTH             = 20.0                                // *[cm] Distance between left and right edges of each slice in image                                               
//IMAGE_HEIGHT             = 20.0                                // *[cm] Distance between top and bottom edges of each slice in image                                              
//IMAGE_THICKNESS         = 8.0                                // *[cm] Distance between bottom of bottom slice and top of the top slice of image                                   
//VOXEL_WIDTH             = 0.1                                // *[cm] distance between left and right edges of each voxel in image                                                
//VOXEL_HEIGHT             = 0.1                                // *[cm] distance between top and bottom edges of each voxel in image                                               
VOXEL_THICKNESS         = 0.25                              // [cm] distance between top and bottom of each slice in image                                                          
SLICE_THICKNESS         = 0.25                              // [cm] distance between top and bottom of each slice in image                                                          
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//------------------------------------------------------------ Reconstruction and image filtering parameters/options ------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
LAMBDA                  = 0.003                             // [#] Relaxation parameter used in update calculations in reconstruction algorithms                                    
ETA                     = 0.0001                            // [#] Value used in calculation of Psi = (1-x_i) * ETA used in robust technique to reconstruction                      
PSI_SIGN                = 1                                 // [+/-1] Sign specifying the sign to use for Psi in scaling residual for updates in robust technique to reconstruction 
ITERATIONS              = 12                                // # of iterations through the entire set of histories to perform in iterative image reconstruction                     
BLOCK_SIZE              = 60                                // # of paths to use for each update: ART = 1,                                                                          
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//------------------------------------------------------------------------- Hull-Detection Parameters ---------------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
HULL_RSP_THRESHOLD      = 0.1                               // [#] Maximum RSP for voxels assumed to belong to hull                                                                 
MSC_DIFF_THRESH         = 50                                // [#] Threshold on difference in counts between adjacent voxels used by MSC for edge detection                         
SC_THRESHOLD            = 0.0                               // [cm] If WEPL < SC_THRESHOLD, SC assumes the proton missed the object                                                 
MSC_THRESHOLD           = 0.0                               // [cm] If WEPL < MSC_THRESHOLD, MSC assumes the proton missed the object                                               
SM_LOWER_THRESHOLD      = 6.0                               // [cm] If WEPL >= SM_THRESHOLD, SM assumes the proton passed through the object                                        
SM_UPPER_THRESHOLD      = 21.0                              // [cm] If WEPL > SM_UPPER_THRESHOLD, SM ignores this history                                                           
SM_SCALE_THRESHOLD      = 1.0                               // [cm] Threshold scaling factor used by SM to adjust edge detection sensitivity                                        
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//----------------------------------------------------------------------- Preprocessing option parameters -----------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
STDOUT_2_DISK_D         = false                             // [T/F] Redirect console window output to text file (T) or leave it as stdout (F)                                      
USER_INPUT_REQUESTS_OFF = false                             // [T/F] Skip all functions that pause execution while waiting for user input (T) or allow user input requests (F)      
//PERFORM_PREPROCESSING    = true                                // [T/F] Perform preproessing and overwite any existing data for (T) or not (F)                                    
IMPORT_PREPROCESSING    = false                             // [T/F] Import preprocessed data previously generated, i.e. A/x0/b/hull/MLP), (T) or generate it (F)                   
PERFORM_RECONSTRUCTION  = true                              // [T/F] Perform reconstruction (T) or not (F)                                                                          
PREPROCESS_OVERWRITE_OK = true                              // [T/F] Allow preprocessing data to be overwritten (T) or not (F)                                                      
RECON_OVERWRITE_OK      = true                              // [T/F] Allow reconstruction data to be overwritten (T) or not (F)                                                     
FBP_ON                  = true                              // Turn FBP on (T) or off (F)                                                                                           
SC_ON                   = false                             // Turn Space Carving on (T) or off (F)                                                                                 
MSC_ON                  = true                              // Turn Modified Space Carving on (T) or off (F)                                                                        
SM_ON                   = false                             // Turn Space Modeling on (T) or off (F)                                                                                
//MLP_FILE_EXISTS        = false                                // [T/F] MLP.bin preprocessing data exists (T) or not (F)                                                           
//HISTORIES_FILE_EXISTS    = false                                // [T/F] Histories.bin preprocessing data exists (T) or not (F)                                                   
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------//       
//----------------------------------------------------------------------- Filtering options/parameters ------------------------------------------------------------------------//   
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------//       
MEDIAN_FILTER_HULL      = false                             // [T/F] Apply median filter to hull (T) or not (F)                                                                     
MEDIAN_FILTER_FBP       = false                             // [T/F] Apply median filter to FBP (T) or not (F)                                                                      
MEDIAN_FILTER_X_0       = false                             // [T/F] Apply median filter to initial iterate (T) or not (F)                                                          
MEDIAN_FILTER_X_K       = false                             // [T/F] Apply median filter to reconstructed image after each iteration (T) or not (F)                                 
MEDIAN_FILTER_X         = false                             // [T/F] Apply median filter to final reconstructed image (T) or not (F)                                                
AVG_FILTER_HULL         = true                              // [T/F] Apply averaging filter to hull (T) or not (F)                                                                  
AVG_FILTER_FBP          = false                             // [T/F] Apply averaging filter to initial iterate (T) or not (F)                                                       
AVG_FILTER_X_0          = false                             // [T/F] Apply averaging filter to initial iterate (T) or not (F)                                                       
AVG_FILTER_X_K          = false                             // [T/F] Apply averaging filter to initial iterate (T) or not (F)                                                       
AVG_FILTER_X            = false                             // [T/F] Apply averaging filter to initial iterate (T) or not (F)                                                       
HULL_MED_FILTER_RADIUS  = 1                                 // [#] Radius of median filter neighborhood applied to hull: [voxel - r, voxel + r]                                     
FBP_MED_FILTER_RADIUS   = 1                                 // [#] Radius of median filter neighborhood applied to FBP: [voxel - r, voxel + r]							                               
X_0_MED_FILTER_RADIUS   = 3                                 // [#] Radius of median filter neighborhood applied to x_0: [voxel - r, voxel + r]                                      
X_K_MED_FILTER_RADIUS   = 3                                 // [#] Radius of median filter neighborhood applied to x_k: [voxel - r, voxel + r]                                      
X_MED_FILTER_RADIUS     = 3                                 // [#] Radius of median filter neighborhood applied to x: [voxel - r, voxel + r]                                        
HULL_AVG_FILTER_RADIUS  = 1                                 // [#] Radius of average filter neighborhood applied to hull: [voxel - r, voxel + r]                                    
FBP_AVG_FILTER_RADIUS   = 1                                 // [#] Radius of average filter neighborhood applied to FBP: [voxel - r, voxel + r]                                     
X_0_AVG_FILTER_RADIUS   = 3                                 // [#] Radius of average filter neighborhood applied to x_0: [voxel - r, voxel + r]                                     
X_K_AVG_FILTER_RADIUS   = 3                                 // [#] Radius of average filter neighborhood applied to x_k: [voxel - r, voxel + r]                                     
X_AVG_FILTER_RADIUS     = 3                                 // [#] Radius of average filter neighborhood applied to x: [voxel - r, voxel + r]                                       
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
//-------------------------------------------------------------------------- Output option parameters ---------------------------------------------------------------------------// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------// 
WRITE_MSC_COUNTS        = true                              // Write MSC counts array to disk (T) or not (F) before performing edge detection                                       
WRITE_SM_COUNTS         = true                              // Write SM counts array to disk (T) or not (F) before performing edge detection                                        
WRITE_X_FBP             = true                              // Write FBP image before thresholding to disk (T) or not (F)                                                           
WRITE_FBP_HULL          = true                              // Write FBP hull to disk (T) or not (F)                                                                                
WRITE_AVG_FBP           = true                              // Write average filtered FBP image before thresholding to disk (T) or not (F)                                          
WRITE_MEDIAN_FBP        = false                             // Write median filtered FBP image to disk (T) or not (F)                                                               
WRITE_BIN_WEPLS         = false                             // Write WEPLs for each bin to disk (T) for WEPL distribution analysis, or do not (F)                                   
WRITE_WEPL_DISTS        = false                             // Write mean WEPL values to disk (T) or not (F): t bin = columns, v bin = rows, 1 angle per file                       
WRITE_SSD_ANGLES        = false                             // Write angles for each proton through entry/exit tracker planes to disk (T), or do not (F)                            
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
//------------------------------------------------------------------------- Program Execution Control  --------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//
DEBUG_TEXT_ON			= true								// Provide (T) or suppress (F) print statements to console during execution
EXIT_AFTER_BINNING		= false								// Exit program early after completing data read and initial processing
EXIT_AFTER_HULLS		= true								// Exit program early after completing hull-detection
EXIT_AFTER_CUTS			= false								// Exit program early after completing statistical cuts
EXIT_AFTER_SINOGRAM		= false								// Exit program early after completing the ruction of the sinogram
EXIT_AFTER_FBP			= false								// Exit program early after completing FBP